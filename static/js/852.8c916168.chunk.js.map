{"version":3,"file":"static/js/852.8c916168.chunk.js","mappings":"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","sources":["../../../packages/core/rpc/remoteAbortSignals.ts","../../../packages/core/ui/AssemblySelector.tsx","../../../packages/core/ui/CascadingMenu.tsx","../../../packages/core/ui/EditableTypography.tsx","../../../packages/core/ui/ErrorMessage.tsx","../../../packages/core/ui/FactoryResetDialog.tsx","../../../packages/core/ui/FileSelector/FileSelector.tsx","../../../packages/core/ui/FileSelector/index.ts","../../../packages/core/ui/Menu.tsx","../../../packages/core/ui/ResizeHandle.tsx","../../../packages/core/ui/SanitizedHTML.tsx","../../../packages/core/ui/theme.ts","../../../packages/core/ui/Logo.tsx","../../../packages/core/ui/App.tsx","../../../packages/core/ui/ReturnToImportFormDialog.tsx","../../../packages/core/ui/PrerenderedCanvas.tsx","../../../packages/core/ui/Tooltip.tsx","../../../packages/core/util/QuickLRU.js","../../../packages/core/util/aborting.ts","../../../packages/core/util/offscreenCanvasPonyfill.tsx","../../../packages/core/util/offscreenCanvasUtils.tsx","../../../packages/core/util/types/index.ts","../../../packages/core/util/when.ts","../../../packages/core/PluginManager.ts","../../../packages/core/util/analytics.ts","../../../plugins/data-management/src/index.ts","corePlugins.ts","util.ts","sessionSharing.ts","ShareButton.tsx","AdminComponent.tsx","JBrowse.tsx","makeWorkerInstance.ts","../../../packages/core/assemblyManager/assembly.ts","../../../packages/core/assemblyManager/assemblyManager.ts","../../../packages/core/assemblyManager/assemblyConfigSchema.ts","../../../packages/core/rpc/configSchema.ts","../../../packages/core/rpc/BaseRpcDriver.ts","../../../packages/core/rpc/WebWorkerRpcDriver.ts","../../../packages/core/rpc/MainThreadRpcDriver.ts","../../../packages/core/rpc/RpcManager.ts","../../../packages/core/TextSearch/TextSearchManager.ts","../../../packages/core/util/TimeTraveller.ts","jbrowseModel.ts","../../../packages/core/ui/SnackbarModel.ts","sessionModelFactory.ts","rootModel.ts","factoryReset.ts","../../../packages/core/PluginLoader.ts","SessionLoader.ts","Loader.tsx"],"sourcesContent":["/* ---------------- for the RPC client ----------------- */\n\nlet abortSignalCounter = 0\nexport type RemoteAbortSignal = { abortSignalId: number }\nconst abortSignalIds: WeakMap<AbortSignal, number> = new WeakMap() // map of abortsignal => numerical ID\n\n/**\n * assign an ID to the given abort signal and return a plain object representation\n * @param signal - the signal to serialize\n * @param callfunc - function used to call\n *  a remote method, will be called like callfunc('signalAbort', signalId)\n */\nexport function serializeAbortSignal(\n  signal: AbortSignal,\n  callfunc: (name: string, abortSignalId: number) => void,\n): RemoteAbortSignal {\n  let abortSignalId = abortSignalIds.get(signal)\n  if (!abortSignalId) {\n    abortSignalCounter += 1\n    abortSignalIds.set(signal, abortSignalCounter)\n    abortSignalId = abortSignalCounter\n    signal.addEventListener('abort', () => {\n      const signalId = abortSignalIds.get(signal)\n      if (signalId !== undefined) {\n        callfunc('signalAbort', signalId)\n      }\n    })\n  }\n  return { abortSignalId }\n}\n\n/* ---------------- for the RPC server ----------------- */\n\n/**\n * test whether a given object\n * @param thing - the thing to test\n * @returns true if the thing is a remote abort signal\n */\nexport function isRemoteAbortSignal(\n  thing: unknown,\n): thing is RemoteAbortSignal {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'abortSignalId' in thing &&\n    // @ts-ignore\n    typeof thing.abortSignalId === 'number'\n  )\n}\n\n// the server side keeps a set of surrogate abort controllers that can be\n// aborted based on ID\nconst surrogateAbortControllers: Map<number, AbortController> = new Map() // numerical ID => surrogate abort controller\n\n/**\n * deserialize the result of serializeAbortSignal into an AbortSignal\n *\n * @param signal -\n * @returns an abort signal that corresponds to the given ID\n */\nexport function deserializeAbortSignal({\n  abortSignalId,\n}: RemoteAbortSignal): AbortSignal {\n  let surrogateAbortController = surrogateAbortControllers.get(abortSignalId)\n  if (!surrogateAbortController) {\n    surrogateAbortController = new AbortController()\n    surrogateAbortControllers.set(abortSignalId, surrogateAbortController)\n  }\n  return surrogateAbortController.signal\n}\n\n/**\n * fire an abort signal from a remote abort signal ID\n *\n * @param abortSignalId -\n */\nexport function remoteAbort(props: { signalId: number }) {\n  const { signalId: abortSignalId } = props\n  const surrogateAbortController = surrogateAbortControllers.get(abortSignalId)\n\n  if (surrogateAbortController) {\n    surrogateAbortController.abort()\n  }\n}\n\nexport function remoteAbortRpcHandler() {\n  return {\n    signalAbort: remoteAbort,\n  }\n}\n","import React, { useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { TextField, MenuItem, InputProps as IIP } from '@mui/material'\nimport { useLocalStorage } from '@jbrowse/core/util'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport { getConf } from '../configuration'\nimport { AbstractSessionModel } from '../util'\n\nconst useStyles = makeStyles()(() => ({\n  importFormEntry: {\n    minWidth: 180,\n  },\n}))\n\nconst AssemblySelector = observer(\n  ({\n    session,\n    onChange,\n    selected,\n    InputProps,\n    extra = 0,\n  }: {\n    session: AbstractSessionModel\n    onChange: (arg: string) => void\n    selected: string | undefined\n    InputProps?: IIP\n    extra?: unknown\n  }) => {\n    const { classes } = useStyles()\n    const { assemblyNames, assemblyManager } = session\n\n    // constructs a localstorage key based on host/path/config to help\n    // remember. non-config assists usage with e.g. embedded apps\n    const config = new URLSearchParams(window.location.search).get('config')\n    const [lastSelected, setLastSelected] = useLocalStorage(\n      `lastAssembly-${[\n        window.location.host + window.location.pathname,\n        config,\n        extra,\n      ].join('-')}`,\n      selected,\n    )\n\n    const selection = assemblyNames.includes(lastSelected || '')\n      ? lastSelected\n      : selected\n\n    useEffect(() => {\n      if (selection && selection !== selected) {\n        onChange(selection)\n      }\n    }, [selection, onChange, selected])\n\n    const error = assemblyNames.length ? '' : 'No configured assemblies'\n    return (\n      <TextField\n        select\n        label=\"Assembly\"\n        variant=\"outlined\"\n        helperText={error || 'Select assembly to view'}\n        value={error ? '' : selection}\n        inputProps={{ 'data-testid': 'assembly-selector' }}\n        onChange={event => setLastSelected(event.target.value)}\n        error={!!error}\n        InputProps={InputProps}\n        disabled={!!error}\n        className={classes.importFormEntry}\n      >\n        {assemblyNames.map(name => {\n          const assembly = assemblyManager.get(name)\n          const displayName = assembly ? getConf(assembly, 'displayName') : ''\n          return (\n            <MenuItem key={name} value={name}>\n              {displayName || name}\n            </MenuItem>\n          )\n        })}\n      </TextField>\n    )\n  },\n)\n\nexport default AssemblySelector\n","import React, { useContext, useMemo, useCallback } from 'react'\nimport {\n  Divider,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  Menu,\n  MenuItem,\n  PopoverOrigin,\n} from '@mui/material'\nimport { MenuItem as JBMenuItem, MenuItemEndDecoration } from './Menu'\nimport {\n  bindHover,\n  bindFocus,\n  bindMenu,\n  usePopupState,\n  PopupState,\n} from 'material-ui-popup-state/hooks'\nimport HoverMenu from 'material-ui-popup-state/HoverMenu'\nimport ChevronRight from '@mui/icons-material/ChevronRight'\n\nconst CascadingContext = React.createContext({\n  parentPopupState: null,\n  rootPopupState: null,\n} as { parentPopupState: PopupState | null; rootPopupState: PopupState | null })\n\nfunction CascadingMenuItem({\n  onClick,\n  ...props\n}: {\n  onClick?: Function\n  disabled?: boolean\n  children: React.ReactNode\n}) {\n  const { rootPopupState } = useContext(CascadingContext)\n  if (!rootPopupState) {\n    throw new Error('must be used inside a CascadingMenu')\n  }\n  const handleClick = useCallback(\n    (event: React.MouseEvent) => {\n      rootPopupState.close()\n      onClick?.(event)\n    },\n    [rootPopupState, onClick],\n  )\n\n  return <MenuItem {...props} onClick={handleClick} />\n}\n\nfunction CascadingSubmenu({\n  title,\n  inset,\n  popupId,\n  ...props\n}: {\n  children: React.ReactNode\n  title: string\n  onMenuItemClick: Function\n  menuItems: JBMenuItem[]\n  inset: boolean\n  popupId: string\n}) {\n  const { parentPopupState } = React.useContext(CascadingContext)\n  const popupState = usePopupState({\n    popupId,\n    variant: 'popover',\n    parentPopupState,\n  })\n  return (\n    <>\n      <MenuItem {...bindHover(popupState)} {...bindFocus(popupState)}>\n        <ListItemText primary={title} inset={inset} />\n        <ChevronRight />\n      </MenuItem>\n      <CascadingSubmenuHover\n        {...props}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n        popupState={popupState}\n      />\n    </>\n  )\n}\n\nfunction CascadingSubmenuHover({\n  popupState,\n  onMenuItemClick,\n  menuItems,\n  classes,\n  ...props\n}: {\n  classes?: Record<string, string>\n  popupState: PopupState\n  anchorOrigin: PopoverOrigin\n  transformOrigin: PopoverOrigin\n  onMenuItemClick: Function\n  menuItems: JBMenuItem[]\n}) {\n  const { rootPopupState } = useContext(CascadingContext)\n  const context = useMemo(\n    () => ({\n      rootPopupState: rootPopupState || popupState,\n      parentPopupState: popupState,\n    }),\n    [rootPopupState, popupState],\n  )\n\n  return (\n    <CascadingContext.Provider value={context}>\n      <HoverMenu {...props} {...bindMenu(popupState)} />\n    </CascadingContext.Provider>\n  )\n}\n\nfunction CascadingMenu({\n  popupState,\n  onMenuItemClick,\n  menuItems,\n  ...props\n}: {\n  popupState: PopupState\n  onMenuItemClick: Function\n  menuItems: JBMenuItem[]\n}) {\n  const { rootPopupState } = React.useContext(CascadingContext)\n  const context = React.useMemo(\n    () => ({\n      rootPopupState: rootPopupState || popupState,\n      parentPopupState: popupState,\n    }),\n    [rootPopupState, popupState],\n  )\n\n  return (\n    <CascadingContext.Provider value={context}>\n      <Menu {...props} {...bindMenu(popupState)} />\n    </CascadingContext.Provider>\n  )\n}\n\nfunction EndDecoration({ item }: { item: JBMenuItem }) {\n  if ('subMenu' in item) {\n    return <MenuItemEndDecoration type=\"subMenu\" />\n  } else if (item.type === 'checkbox' || item.type === 'radio') {\n    return (\n      <MenuItemEndDecoration\n        type={item.type}\n        checked={item.checked}\n        disabled={item.disabled}\n      />\n    )\n  }\n  return null\n}\n\nfunction CascadingMenuList({\n  onMenuItemClick,\n  menuItems,\n  ...props\n}: {\n  menuItems: JBMenuItem[]\n  onMenuItemClick: Function\n}) {\n  function handleClick(callback: Function) {\n    return (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n      onMenuItemClick(event, callback)\n    }\n  }\n\n  const hasIcon = menuItems.some(\n    menuItem => 'icon' in menuItem && menuItem.icon,\n  )\n  return (\n    <>\n      {menuItems.map((item, idx) => {\n        return 'subMenu' in item ? (\n          <CascadingSubmenu\n            key={`subMenu-${item.label}-${idx}`}\n            popupId={`subMenu-${item.label}`}\n            title={item.label}\n            inset={hasIcon}\n            onMenuItemClick={onMenuItemClick}\n            menuItems={item.subMenu}\n          >\n            <CascadingMenuList\n              {...props}\n              onMenuItemClick={onMenuItemClick}\n              menuItems={item.subMenu}\n            />\n          </CascadingSubmenu>\n        ) : item.type === 'divider' ? (\n          <Divider key={`divider-${idx}`} component=\"li\" />\n        ) : item.type === 'subHeader' ? (\n          <ListSubheader key={`subHeader-${item.label}-${idx}`}>\n            {item.label}\n          </ListSubheader>\n        ) : (\n          <CascadingMenuItem\n            key={`${item.label}-${idx}`}\n            onClick={'onClick' in item ? handleClick(item.onClick) : undefined}\n            disabled={Boolean(item.disabled)}\n          >\n            {item.icon ? (\n              <ListItemIcon>\n                <item.icon />\n              </ListItemIcon>\n            ) : null}{' '}\n            <ListItemText\n              primary={item.label}\n              secondary={item.subLabel}\n              inset={hasIcon && !item.icon}\n            />\n            <div style={{ flexGrow: 1, minWidth: 10 }} />\n            <EndDecoration item={item} />\n          </CascadingMenuItem>\n        )\n      })}\n    </>\n  )\n}\n\nfunction CascadingMenuChildren(props: {\n  onMenuItemClick: Function\n  menuItems: JBMenuItem[]\n  popupState: PopupState\n}) {\n  return (\n    <CascadingMenu {...props}>\n      <CascadingMenuList {...props} />\n    </CascadingMenu>\n  )\n}\n\nexport default CascadingMenuChildren\n","import React, { useEffect, useState } from 'react'\nimport { InputBase, Typography, TypographyProps, useTheme } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\ntype Variant = TypographyProps['variant']\n\ntype EditableTypographyClassKey =\n  | 'input'\n  | 'inputBase'\n  | 'inputRoot'\n  | 'inputFocused'\n\nconst useStyles = makeStyles()(theme => ({\n  input: {},\n  inputBase: {},\n  typography: {\n    top: 6,\n    left: 2,\n    position: 'absolute',\n    whiteSpace: 'nowrap',\n    visibility: 'hidden',\n  },\n  inputRoot: {\n    padding: theme.spacing(0.5),\n  },\n  inputFocused: {\n    borderStyle: 'solid',\n    borderWidth: 2,\n  },\n}))\n\ninterface EditableTypographyPropTypes {\n  value: string\n  setValue: (value: string) => void\n  variant: Variant\n  classes?: Partial<Record<EditableTypographyClassKey, string>>\n}\n\n// using forwardRef so that MUI Tooltip can wrap this component\nconst EditableTypography = React.forwardRef(\n  (props: EditableTypographyPropTypes, ref: React.Ref<HTMLDivElement>) => {\n    const { value, setValue, variant, ...other } = props\n    const [editedValue, setEditedValue] = useState<string>()\n    const [width, setWidth] = useState(0)\n    const [sizerNode, setSizerNode] = useState<HTMLSpanElement | null>(null)\n    const [inputNode, setInputNode] = useState<HTMLInputElement | null>(null)\n    const [blur, setBlur] = useState(false)\n\n    useEffect(() => {\n      if (blur) {\n        inputNode && inputNode.blur()\n        setBlur(false)\n      }\n    }, [blur, inputNode])\n\n    // possibly tss-react does not understand the passing of props to\n    // useStyles, but it appears to work\n    // @ts-ignore\n    const { classes } = useStyles(props, { props })\n    const theme = useTheme()\n\n    const clientWidth = sizerNode?.clientWidth\n    if (clientWidth && clientWidth !== width) {\n      setWidth(clientWidth)\n    }\n\n    return (\n      <div {...other} ref={ref}>\n        <div style={{ position: 'relative' }}>\n          <Typography\n            ref={(node: HTMLSpanElement) => setSizerNode(node)}\n            component=\"span\"\n            variant={variant}\n            className={classes.typography}\n          >\n            {editedValue === undefined ? value : editedValue}\n          </Typography>\n        </div>\n        <InputBase\n          inputRef={node => setInputNode(node)}\n          className={classes.inputBase}\n          inputProps={{\n            style: {\n              width,\n              ...(variant && variant !== 'inherit'\n                ? theme.typography[variant]\n                : {}),\n            },\n          }}\n          classes={{\n            input: classes.input,\n            root: classes.inputRoot,\n            focused: classes.inputFocused,\n          }}\n          value={editedValue === undefined ? value : editedValue}\n          onChange={event => setEditedValue(event.target.value)}\n          onKeyDown={event => {\n            if (event.key === 'Enter') {\n              inputNode && inputNode.blur()\n            } else if (event.key === 'Escape') {\n              setEditedValue(undefined)\n              setBlur(true)\n            }\n          }}\n          onBlur={() => {\n            if (editedValue && editedValue !== value) {\n              setValue(editedValue)\n            }\n            setEditedValue(undefined)\n          }}\n        />\n      </div>\n    )\n  },\n)\n\nexport default EditableTypography\n","import React from 'react'\n\nconst ErrorMessage = ({ error }: { error: unknown }) => {\n  let snapshotError = ''\n  let str = `${error}`\n  const findStr = 'is not assignable'\n  const idx = str.indexOf(findStr)\n  if (idx !== -1) {\n    const trim = str.slice(0, idx + findStr.length)\n    // best effort to make a better error message than the default\n    // mobx-state-tree\n\n    // case 1. element has a path\n    const match = trim.match(\n      /.*at path \"(.*)\" snapshot `(.*)` is not assignable/m,\n    )\n    if (match) {\n      str = `Failed to load element at ${match[1]}...Failed element had snapshot`\n      snapshotError = match[2]\n    }\n\n    // case 2. element has no path\n    const match2 = trim.match(/.*snapshot `(.*)` is not assignable/)\n    if (match2) {\n      str = `Failed to load element...Failed element had snapshot`\n      snapshotError = match2[1]\n    }\n  }\n  return (\n    <div\n      style={{\n        padding: 4,\n        margin: 4,\n        overflow: 'auto',\n        maxHeight: 200,\n        background: '#f88',\n        border: '1px solid black',\n      }}\n    >\n      {str.slice(0, 10000)}\n      {snapshotError ? (\n        <pre\n          style={{\n            background: 'lightgrey',\n            border: '1px solid black',\n            margin: 20,\n          }}\n        >\n          {JSON.stringify(JSON.parse(snapshotError), null, 2)}\n        </pre>\n      ) : null}\n    </div>\n  )\n}\n\nexport default ErrorMessage\n","import Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogActions from '@mui/material/DialogActions'\nimport React from 'react'\n\nexport default ({\n  onClose,\n  open,\n  onFactoryReset,\n}: {\n  onClose: Function\n  open: boolean\n  onFactoryReset: Function\n}) => {\n  function handleDialogClose(action?: string) {\n    if (action === 'reset') {\n      onFactoryReset()\n    }\n    onClose()\n  }\n\n  return (\n    <Dialog open={open} onClose={() => handleDialogClose()}>\n      <DialogTitle id=\"alert-dialog-title\">Reset</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you want to reset? This will restore the default\n          configuration.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleDialogClose()} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => handleDialogClose('reset')}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Box,\n  FormHelperText,\n  InputLabel,\n  Menu,\n  MenuItem,\n  Tooltip,\n  ToggleButtonGroup,\n  ToggleButton,\n  ToggleButtonProps,\n} from '@mui/material'\n\n// locals\nimport {\n  FileLocation,\n  UriLocation,\n  AbstractRootModel,\n  isUriLocation,\n  isAppRootModel,\n} from '../../util/types'\nimport LocalFileChooser from './LocalFileChooser'\nimport UrlChooser from './UrlChooser'\n\n// icons\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\n\nfunction ToggleButtonWithTooltip(props: ToggleButtonProps) {\n  const { title, children, ...other } = props\n  return (\n    <Tooltip title={title || ''}>\n      <ToggleButton {...other}>{children}</ToggleButton>\n    </Tooltip>\n  )\n}\n\nfunction shorten(str: string, len: number) {\n  if (typeof str === 'string' && str.length > len) {\n    return `${str.substring(0, len)}…`\n  }\n  return str\n}\n\nconst FileSelector = observer(\n  (props: {\n    location?: FileLocation\n    setLocation: (param: FileLocation) => void\n    setName?: (str: string) => void\n    name?: string\n    description?: string\n    rootModel?: AbstractRootModel\n  }) => {\n    const { location, name, description, rootModel, setLocation } = props\n    const fileOrUrl = !location || isUriLocation(location) ? 'url' : 'file'\n    const [toggleButtonValue, setToggleButtonValue] = useState(\n      location && 'internetAccountId' in location && location.internetAccountId\n        ? location.internetAccountId\n        : fileOrUrl,\n    )\n    const accts = isAppRootModel(rootModel)\n      ? rootModel.internetAccounts.slice()\n      : []\n    const numShown = 2\n    const [shownAccts, setShownAccts] = useState(accts.slice(0, numShown))\n    const [hiddenAccts, setHiddenAccts] = useState(accts.slice(numShown))\n    const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n\n    const selectedAcct = accts.find(\n      ia => ia.internetAccountId === toggleButtonValue,\n    )\n\n    const setLocationWithAccount = (location: UriLocation) => {\n      setLocation({\n        ...location,\n        internetAccountId: selectedAcct\n          ? selectedAcct.internetAccountId\n          : undefined,\n      })\n    }\n\n    // if you swap account selection after inputting url\n    if (\n      location &&\n      selectedAcct &&\n      isUriLocation(location) &&\n      location.internetAccountId !== selectedAcct.internetAccountId\n    ) {\n      setLocationWithAccount(location)\n    }\n\n    let locationInput = (\n      <UrlChooser\n        {...props}\n        setLocation={setLocationWithAccount}\n        label={selectedAcct?.selectorLabel}\n      />\n    )\n    if (toggleButtonValue === 'file') {\n      locationInput = <LocalFileChooser {...props} />\n    }\n    if (selectedAcct?.SelectorComponent) {\n      const { SelectorComponent } = selectedAcct\n      locationInput = (\n        <SelectorComponent {...props} setLocation={setLocationWithAccount} />\n      )\n    }\n\n    return (\n      <>\n        <Box display=\"flex\">\n          <InputLabel shrink>{name}</InputLabel>\n        </Box>\n        <Box display=\"flex\" flexDirection=\"row\">\n          <Box>\n            <ToggleButtonGroup\n              value={toggleButtonValue}\n              exclusive\n              onChange={(_event, newState) => {\n                if (newState) {\n                  setToggleButtonValue(newState)\n                }\n                if (isUriLocation(location)) {\n                  setLocationWithAccount(location)\n                }\n              }}\n              aria-label=\"file, url, or account picker\"\n            >\n              {new URLSearchParams(window.location.search).get(\n                'adminKey',\n              ) ? null : (\n                <ToggleButton value=\"file\" aria-label=\"local file\">\n                  File\n                </ToggleButton>\n              )}\n              <ToggleButton value=\"url\" aria-label=\"url\">\n                URL\n              </ToggleButton>\n              {shownAccts.map(({ internetAccountId, toggleContents, name }) => (\n                <ToggleButtonWithTooltip\n                  key={internetAccountId}\n                  value={internetAccountId}\n                  aria-label={name}\n                  title={name}\n                >\n                  {typeof toggleContents === 'string'\n                    ? shorten(toggleContents, 5)\n                    : toggleContents || shorten(name, 5)}\n                </ToggleButtonWithTooltip>\n              ))}\n              {hiddenAccts.length ? (\n                // @ts-ignore\n                <ToggleButton\n                  onClick={event => setAnchorEl(event.target as HTMLElement)}\n                  selected={false}\n                >\n                  More\n                  <ArrowDropDownIcon />\n                </ToggleButton>\n              ) : null}\n            </ToggleButtonGroup>\n\n            <Menu\n              open={Boolean(anchorEl)}\n              anchorEl={anchorEl}\n              onClose={() => setAnchorEl(null)}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n              }}\n            >\n              {hiddenAccts?.map((acct, idx) => (\n                <MenuItem\n                  key={acct.internetAccountId}\n                  value={acct.internetAccountId}\n                  onClick={() => {\n                    const prev = shownAccts[shownAccts.length - 1]\n                    setShownAccts([\n                      ...shownAccts.slice(0, shownAccts.length - 1),\n                      acct,\n                    ])\n                    setHiddenAccts([\n                      prev,\n                      ...hiddenAccts.slice(0, idx),\n                      ...hiddenAccts.slice(idx + 1),\n                    ])\n                    setToggleButtonValue(acct.internetAccountId)\n                    setAnchorEl(null)\n                  }}\n                >\n                  {acct.name}\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Box>\n        {locationInput}\n        <FormHelperText>{description}</FormHelperText>\n      </>\n    )\n  },\n)\n\nexport default FileSelector\n","import FileSelector from './FileSelector'\n\nexport default FileSelector\n","import React, { useEffect, useRef, useState } from 'react'\nimport {\n  Divider,\n  Grow,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  MenuProps as MUIMenuProps,\n  MenuItem as MUIMenuItem,\n  MenuItemProps,\n  MenuList,\n  Paper,\n  Popover,\n  PopoverProps,\n  SvgIconProps,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n// icons\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight'\nimport CheckBoxIcon from '@mui/icons-material/CheckBox'\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank'\nimport RadioButtonCheckedIcon from '@mui/icons-material/RadioButtonChecked'\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked'\n\n// other\nimport { findLastIndex } from '../util'\n\nconst useStyles = makeStyles()({\n  paper: {\n    position: 'fixed',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    // So we see the popover when it's empty.\n    minWidth: 16,\n    minHeight: 16,\n    maxWidth: 'calc(100% - 32px)',\n    maxHeight: 'calc(100% - 32px)',\n    top: 0,\n    left: 0,\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n  },\n  menuItemEndDecoration: {\n    padding: 0,\n    margin: 0,\n    height: 16,\n  },\n})\n\ninterface MenuItemEndDecorationSubMenuProps {\n  type: 'subMenu'\n}\n\ninterface MenuItemEndDecorationSelectorProps {\n  type: 'checkbox' | 'radio'\n  checked: boolean\n  disabled?: boolean\n}\n\ntype MenuItemEndDecorationProps =\n  | MenuItemEndDecorationSubMenuProps\n  | MenuItemEndDecorationSelectorProps\n\nexport function MenuItemEndDecoration(props: MenuItemEndDecorationProps) {\n  const { classes } = useStyles()\n  const { type } = props\n  let checked\n  let disabled\n  if ('checked' in props) {\n    ;({ checked, disabled } = props)\n  }\n  let icon\n  if (type === 'subMenu') {\n    icon = <ArrowRightIcon color=\"action\" />\n  } else if (type === 'checkbox') {\n    if (checked) {\n      const color = disabled ? 'inherit' : 'secondary'\n      icon = <CheckBoxIcon color={color} />\n    } else {\n      icon = <CheckBoxOutlineBlankIcon color=\"action\" />\n    }\n  } else if (type === 'radio') {\n    if (checked) {\n      const color = disabled ? 'inherit' : 'secondary'\n      icon = <RadioButtonCheckedIcon color={color} />\n    } else {\n      icon = <RadioButtonUncheckedIcon color=\"action\" />\n    }\n  }\n  return <div className={classes.menuItemEndDecoration}>{icon}</div>\n}\n\nexport interface MenuDivider {\n  priority?: number\n  type: 'divider'\n}\n\nexport interface MenuSubHeader {\n  type: 'subHeader'\n  priority?: number\n  label: string\n}\n\nexport interface BaseMenuItem {\n  label: string\n  priority?: number\n  subLabel?: string\n  icon?: React.ComponentType<SvgIconProps>\n  disabled?: boolean\n}\n\nexport interface NormalMenuItem extends BaseMenuItem {\n  type?: 'normal'\n  onClick: Function\n}\n\nexport interface CheckboxMenuItem extends BaseMenuItem {\n  type: 'checkbox'\n  checked: boolean\n  onClick: Function\n}\n\nexport interface RadioMenuItem extends BaseMenuItem {\n  type: 'radio'\n  checked: boolean\n  onClick: Function\n}\n\nexport interface SubMenuItem extends BaseMenuItem {\n  type?: 'subMenu'\n  subMenu: MenuItem[]\n}\n\nexport type MenuItem =\n  | MenuDivider\n  | MenuSubHeader\n  | NormalMenuItem\n  | CheckboxMenuItem\n  | RadioMenuItem\n  | SubMenuItem\n\ntype AnchorElProp = MUIMenuProps['anchorEl']\ntype OpenProp = MUIMenuProps['open']\ntype OnCloseProp = MUIMenuProps['onClose']\n\ninterface MenuPageProps {\n  menuItems: MenuItem[]\n  onMenuItemClick: (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    callback: Function,\n  ) => void\n  anchorEl?: AnchorElProp\n  open: OpenProp\n  onClose: OnCloseProp\n  top?: boolean\n}\n\ntype MenuItemStyleProp = MenuItemProps['style']\n\nfunction findNextValidIdx(menuItems: MenuItem[], currentIdx: number) {\n  const idx = menuItems\n    .slice(currentIdx + 1)\n    .findIndex(\n      menuItem =>\n        menuItem.type !== 'divider' &&\n        menuItem.type !== 'subHeader' &&\n        !menuItem.disabled,\n    )\n  if (idx === -1) {\n    return idx\n  }\n  return currentIdx + 1 + idx\n}\n\nfunction findPreviousValidIdx(menuItems: MenuItem[], currentIdx: number) {\n  return findLastIndex(\n    menuItems.slice(0, currentIdx),\n    menuItem =>\n      menuItem.type !== 'divider' &&\n      menuItem.type !== 'subHeader' &&\n      !menuItem.disabled,\n  )\n}\n\nconst MenuPage = React.forwardRef<HTMLDivElement, MenuPageProps>(\n  (props, ref) => {\n    const [subMenuAnchorEl, setSubMenuAnchorEl] = useState<HTMLElement>()\n    const [openSubMenuIdx, setOpenSubMenuIdx] = useState<number>()\n    const [isSubMenuOpen, setIsSubMenuOpen] = useState(false)\n    const [selectedMenuItemIdx, setSelectedMenuItemIdx] = useState<number>()\n    const [position, setPosition] = useState<{\n      top?: number\n      left?: number\n    }>()\n    const paperRef = useRef<HTMLDivElement | null>(null)\n    const { classes } = useStyles()\n\n    const {\n      menuItems,\n      onMenuItemClick,\n      open,\n      onClose,\n      anchorEl,\n      top = false,\n    } = props\n\n    useEffect(() => {\n      if (!open) {\n        setSubMenuAnchorEl(undefined)\n        setOpenSubMenuIdx(undefined)\n      }\n    }, [open])\n\n    useEffect(() => {\n      const shouldSubMenuBeOpen = open && Boolean(subMenuAnchorEl)\n      let timer: ReturnType<typeof setTimeout>\n      if (shouldSubMenuBeOpen && !isSubMenuOpen) {\n        timer = setTimeout(() => {\n          setIsSubMenuOpen(true)\n        }, 300)\n      } else if (!shouldSubMenuBeOpen && isSubMenuOpen) {\n        timer = setTimeout(() => {\n          setIsSubMenuOpen(false)\n        }, 300)\n      }\n      return () => {\n        clearTimeout(timer)\n      }\n    }, [isSubMenuOpen, open, subMenuAnchorEl])\n\n    useEffect(() => {\n      if (anchorEl) {\n        const rect = (anchorEl as HTMLElement).getBoundingClientRect()\n        if (position) {\n          if (\n            rect.top !== position.top ||\n            rect.left + rect.width !== position.left\n          ) {\n            setPosition({ top: rect.top, left: rect.left + rect.width })\n          }\n        } else {\n          setPosition({ top: rect.top, left: rect.left + rect.width })\n        }\n      } else if (!position) {\n        setPosition({})\n      }\n    }, [position, anchorEl])\n\n    const hasIcon = menuItems.some(\n      menuItem => 'icon' in menuItem && menuItem.icon,\n    )\n    const menuItemStyle: MenuItemStyleProp = {}\n\n    function handleClick(callback: Function) {\n      return (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n        onMenuItemClick(event, callback)\n      }\n    }\n\n    const ListContents = (\n      <>\n        <MenuList autoFocusItem={open && !isSubMenuOpen} dense>\n          {menuItems\n            .sort((a, b) => (b.priority || 0) - (a.priority || 0))\n            .map((menuItem, idx) => {\n              if (menuItem.type === 'divider') {\n                return <Divider key={`divider-${idx}`} component=\"li\" />\n              }\n              if (menuItem.type === 'subHeader') {\n                return (\n                  <ListSubheader key={`subHeader-${menuItem.label}-${idx}`}>\n                    {menuItem.label}\n                  </ListSubheader>\n                )\n              }\n              let icon = null\n              let endDecoration = null\n              if (menuItem.icon) {\n                const Icon = menuItem.icon\n                icon = (\n                  <ListItemIcon>\n                    <Icon />\n                  </ListItemIcon>\n                )\n              }\n              if ('subMenu' in menuItem) {\n                endDecoration = <MenuItemEndDecoration type=\"subMenu\" />\n              } else if (\n                menuItem.type === 'checkbox' ||\n                menuItem.type === 'radio'\n              ) {\n                endDecoration = (\n                  <MenuItemEndDecoration\n                    type={menuItem.type}\n                    checked={menuItem.checked}\n                    disabled={menuItem.disabled}\n                  />\n                )\n              }\n              const onClick =\n                'onClick' in menuItem\n                  ? handleClick(menuItem.onClick)\n                  : undefined\n              return (\n                <MUIMenuItem\n                  key={menuItem.label}\n                  style={menuItemStyle}\n                  selected={idx === selectedMenuItemIdx}\n                  onClick={onClick}\n                  onMouseMove={e => {\n                    if (e.currentTarget !== document.activeElement) {\n                      e.currentTarget.focus()\n                      setSelectedMenuItemIdx(idx)\n                    }\n                    if ('subMenu' in menuItem) {\n                      if (openSubMenuIdx !== idx) {\n                        setSubMenuAnchorEl(e.currentTarget)\n                        setOpenSubMenuIdx(idx)\n                      }\n                    } else {\n                      setSubMenuAnchorEl(undefined)\n                      setOpenSubMenuIdx(undefined)\n                    }\n                  }}\n                  onKeyDown={e => {\n                    if (e.key === 'ArrowLeft' || e.key === 'Escape') {\n                      onClose && onClose(e, 'escapeKeyDown')\n                    } else if (e.key === 'ArrowUp') {\n                      setSelectedMenuItemIdx(\n                        findPreviousValidIdx(menuItems, idx),\n                      )\n                    } else if (e.key === 'ArrowDown') {\n                      const a = findNextValidIdx(menuItems, idx)\n                      setSelectedMenuItemIdx(a)\n                    } else if ('subMenu' in menuItem) {\n                      if (e.key === 'ArrowRight' || e.key === 'Enter') {\n                        setSubMenuAnchorEl(e.currentTarget)\n                        setOpenSubMenuIdx(idx)\n                        setIsSubMenuOpen(true)\n                      }\n                    }\n                  }}\n                  disabled={Boolean(menuItem.disabled)}\n                >\n                  {icon}\n                  <ListItemText\n                    primary={menuItem.label}\n                    secondary={menuItem.subLabel}\n                    inset={hasIcon && !menuItem.icon}\n                  />\n                  {endDecoration}\n                </MUIMenuItem>\n              )\n            })}\n        </MenuList>\n        {menuItems.map((menuItem, idx) => {\n          let subMenu = null\n          if ('subMenu' in menuItem) {\n            subMenu = (\n              <MenuPage\n                key={menuItem.label}\n                anchorEl={subMenuAnchorEl}\n                open={isSubMenuOpen && openSubMenuIdx === idx}\n                onClose={() => {\n                  setIsSubMenuOpen(false)\n                  setSubMenuAnchorEl(undefined)\n                }}\n                onMenuItemClick={onMenuItemClick}\n                menuItems={menuItem.subMenu}\n              />\n            )\n          }\n          return subMenu\n        })}\n      </>\n    )\n\n    return top ? (\n      ListContents\n    ) : (\n      <Grow in={open} style={{ transformOrigin: `0 0 0` }} ref={ref}>\n        <Paper\n          elevation={8}\n          ref={paperRef}\n          className={classes.paper}\n          style={{ ...position }}\n        >\n          {ListContents}\n        </Paper>\n      </Grow>\n    )\n  },\n)\n\ninterface MenuProps extends PopoverProps {\n  menuItems: MenuItem[]\n  onMenuItemClick: (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    callback: Function,\n  ) => void\n}\n\nfunction Menu(props: MenuProps) {\n  const { open, onClose, menuItems, onMenuItemClick, ...other } = props\n\n  return (\n    <Popover\n      transitionDuration={0}\n      open={open}\n      onClose={onClose}\n      BackdropProps={{ invisible: true }}\n      {...other}\n    >\n      <MenuPage\n        open={open}\n        onClose={onClose}\n        menuItems={menuItems}\n        onMenuItemClick={onMenuItemClick}\n        top\n      />\n    </Popover>\n  )\n}\n\nexport default Menu\n","import React, { useEffect, useState, useRef } from 'react'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  horizontalHandle: {\n    cursor: 'row-resize',\n    width: '100%',\n  },\n  verticalHandle: {\n    cursor: 'col-resize',\n    height: '100%',\n  },\n  flexbox_verticalHandle: {\n    cursor: 'col-resize',\n    alignSelf: 'stretch', // the height: 100% is actually unable to function inside flexbox\n  },\n  flexbox_horizontalHandle: {\n    cursor: 'row-resize',\n    alignSelf: 'stretch', // similar to above\n  },\n})\n\nfunction ResizeHandle({\n  onDrag,\n  vertical = false,\n  flexbox = false,\n  className: originalClassName,\n  ...props\n}: {\n  onDrag: (arg: number) => number\n  vertical?: boolean\n  flexbox?: boolean\n  className?: string\n  [props: string]: unknown\n}) {\n  const [mouseDragging, setMouseDragging] = useState(false)\n  const prevPos = useRef(0)\n  const { classes, cx } = useStyles()\n\n  useEffect(() => {\n    function mouseMove(event: MouseEvent) {\n      event.preventDefault()\n      const pos = vertical ? event.clientX : event.clientY\n      const distance = pos - prevPos.current\n      if (distance) {\n        onDrag(distance)\n        prevPos.current = pos\n      }\n    }\n\n    function mouseUp() {\n      setMouseDragging(false)\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', mouseMove, true)\n      window.addEventListener('mouseup', mouseUp, true)\n      return () => {\n        window.removeEventListener('mousemove', mouseMove, true)\n        window.removeEventListener('mouseup', mouseUp, true)\n      }\n    }\n    return () => {}\n  }, [mouseDragging, onDrag, vertical])\n\n  let className\n  if (flexbox) {\n    if (vertical) {\n      className = classes.flexbox_verticalHandle\n    } else {\n      className = classes.flexbox_horizontalHandle\n    }\n  } else if (vertical) {\n    className = classes.verticalHandle\n  } else {\n    className = classes.horizontalHandle\n  }\n\n  return (\n    <div\n      data-resizer=\"true\"\n      onMouseDown={event => {\n        event.preventDefault()\n        prevPos.current = vertical ? event.clientX : event.clientY\n        setMouseDragging(true)\n      }}\n      role=\"presentation\"\n      className={cx(className, originalClassName)}\n      {...props}\n    />\n  )\n}\n\nexport default ResizeHandle\n","import React from 'react'\nimport escapeHTML from 'escape-html'\nimport dompurify from 'dompurify'\n\n// source https://github.com/sindresorhus/html-tags/blob/master/html-tags.json\n// with some random uncommon ones removed. note: we just use this to run the content\n// through dompurify without escaping if we see an htmlTag from this list\n// otherwise we escape angle brackets and things prematurely because it might be\n// something like <TRA> in VCF. Ref #657\nconst htmlTags = [\n  'a',\n  'b',\n  'br',\n  'code',\n  'div',\n  'em',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'i',\n  'img',\n  'li',\n  'p',\n  'pre',\n  'span',\n  'small',\n  'strong',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'tr',\n  'u',\n  'ul',\n]\n\nlet added = false\n\n// adapted from is-html\n// https://github.com/sindresorhus/is-html/blob/master/index.js\nconst full = new RegExp(htmlTags.map(tag => `<${tag}\\\\b[^>]*>`).join('|'), 'i')\nexport function isHTML(str: string) {\n  return full.test(str)\n}\n\nexport default function SanitizedHTML({ html }: { html: string }) {\n  const value = isHTML(html) ? html : escapeHTML(html)\n  if (!added) {\n    added = true\n    // see https://github.com/cure53/DOMPurify/issues/317\n    // only have to add this once, and can't do it globally because dompurify\n    // not yet initialized at global scope\n    dompurify.addHook(\n      'afterSanitizeAttributes',\n      (node: {\n        tagName: string\n        setAttribute: (arg0: string, arg1: string) => void\n      }) => {\n        if (node.tagName === 'A') {\n          node.setAttribute('rel', 'noopener noreferrer')\n          node.setAttribute('target', '_blank')\n        }\n      },\n    )\n  }\n\n  return (\n    <div\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{\n        __html: dompurify.sanitize(value),\n      }}\n    />\n  )\n}\n","import { blue, green, red, amber } from '@mui/material/colors'\nimport { createTheme } from '@mui/material/styles'\nimport type { PaletteOptions } from '@mui/material/styles/createPalette'\nimport deepmerge from 'deepmerge'\n\ndeclare module '@mui/material/styles/createPalette' {\n  interface Palette {\n    tertiary: Palette['primary']\n    quaternary: Palette['primary']\n    bases: {\n      A: Palette['primary']\n      C: Palette['primary']\n      G: Palette['primary']\n      T: Palette['primary']\n    }\n  }\n  interface PaletteOptions {\n    tertiary?: PaletteOptions['primary']\n    quaternary?: PaletteOptions['primary']\n    bases?: {\n      A?: PaletteOptions['primary']\n      C?: PaletteOptions['primary']\n      G?: PaletteOptions['primary']\n      T?: PaletteOptions['primary']\n    }\n  }\n}\n\nconst midnight = '#0D233F'\nconst grape = '#721E63'\nconst forest = '#135560'\nconst mandarin = '#FFB11D'\n\nconst refTheme = createTheme()\n\nexport const jbrowseDefaultPalette = {\n  // type: 'dark',\n  primary: { main: midnight },\n  secondary: { main: grape },\n  tertiary: refTheme.palette.augmentColor({ color: { main: forest } }),\n  quaternary: refTheme.palette.augmentColor({ color: { main: mandarin } }),\n  stopCodon: '#e22',\n  startCodon: '#3e3',\n  bases: {\n    A: refTheme.palette.augmentColor({ color: green }),\n    C: refTheme.palette.augmentColor({ color: blue }),\n    G: refTheme.palette.augmentColor({ color: amber }),\n    T: refTheme.palette.augmentColor({ color: red }),\n  },\n}\n\nexport function createJBrowseDefaultProps(/* palette: PaletteOptions = {} */) {\n  return {\n    components: {\n      MuiButton: {\n        defaultProps: {\n          size: 'small',\n        },\n      },\n      MuiAccordion: {\n        defaultProps: {\n          disableGutters: true,\n          TransitionProps: { timeout: 150 },\n        },\n      },\n      MuiFilledInput: {\n        defaultProps: {\n          margin: 'dense',\n        },\n      },\n      MuiFormControl: {\n        defaultProps: {\n          margin: 'dense',\n          size: 'small',\n        },\n      },\n      MuiFormHelperText: {\n        defaultProps: {\n          margin: 'dense',\n        },\n      },\n\n      MuiIconButton: {\n        defaultProps: {\n          size: 'small',\n        },\n      },\n      MuiInputBase: {\n        defaultProps: {\n          margin: 'dense',\n        },\n      },\n      MuiAutocomplete: {\n        defaultProps: {\n          size: 'small',\n        },\n      },\n      MuiInputLabel: {\n        defaultProps: {\n          margin: 'dense',\n        },\n      },\n      MuiToolbar: {\n        defaultProps: {\n          variant: 'dense',\n        },\n      },\n      MuiListItem: {\n        defaultProps: {\n          dense: true,\n        },\n      },\n      MuiOutlinedInput: {\n        defaultProps: {\n          margin: 'dense',\n        },\n      },\n      MuiFab: {\n        defaultProps: {\n          size: 'small',\n        },\n      },\n      MuiTable: {\n        defaultProps: {\n          size: 'small',\n        },\n      },\n      MuiMenuList: {\n        defaultProps: {\n          dense: true,\n        },\n      },\n      MuiMenuItem: {\n        defaultProps: {\n          dense: true,\n        },\n      },\n\n      MuiTextField: {\n        defaultProps: {\n          margin: 'dense',\n          variant: 'standard',\n        },\n      },\n    },\n  }\n}\n\nexport function createJBrowseDefaultOverrides(palette: PaletteOptions = {}) {\n  const generatedPalette = deepmerge(jbrowseDefaultPalette, palette)\n  return {\n    components: {\n      MuiIconButton: {\n        styleOverrides: {\n          colorSecondary: {\n            color: generatedPalette.tertiary.main,\n          },\n        },\n      },\n      MuiButton: {\n        styleOverrides: {\n          textSecondary: {\n            color: generatedPalette.tertiary.main,\n          },\n        },\n      },\n      MuiFab: {\n        styleOverrides: {\n          secondary: {\n            backgroundColor: generatedPalette.quaternary.main,\n          },\n        },\n      },\n      MuiLink: {\n        styleOverrides: {\n          root: {\n            color: generatedPalette.tertiary.main,\n          },\n        },\n      },\n\n      MuiAccordionSummary: {\n        styleOverrides: {\n          root: {\n            backgroundColor: generatedPalette.tertiary.main,\n          },\n          content: {\n            color: generatedPalette.tertiary.contrastText,\n          },\n        },\n      },\n    },\n  }\n}\n\nexport const jbrowseBaseTheme = {\n  palette: jbrowseDefaultPalette,\n  typography: { fontSize: 12 },\n  spacing: 4,\n  ...deepmerge(createJBrowseDefaultProps(), createJBrowseDefaultOverrides()),\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function createJBrowseTheme(theme?: any) {\n  if (theme?.palette?.tertiary) {\n    theme = deepmerge(theme, {\n      palette: {\n        tertiary: refTheme.palette.augmentColor(\n          theme.palette.tertiary?.color\n            ? theme.palette.tertiary\n            : {\n                color: theme.palette.tertiary,\n              },\n        ),\n      },\n    })\n  }\n  if (theme?.palette?.quaternary) {\n    theme = deepmerge(theme, {\n      palette: {\n        quaternary: refTheme.palette.augmentColor(\n          theme.palette.quaternary?.color\n            ? theme.palette.quaternary\n            : {\n                color: theme.palette.quaternary,\n              },\n        ),\n      },\n    })\n  }\n\n  // @ts-ignore\n  return createTheme(deepmerge(jbrowseBaseTheme, theme || {}))\n}\n","import React from 'react'\n\ntype LogoVariant = 'color' | 'black' | 'white'\n\ninterface LogoProps {\n  variant?: LogoVariant\n}\n\nfunction getColors(variant?: LogoVariant) {\n  if (variant === 'black') {\n    return {\n      midnight: '#808080',\n      forrest: '#666666',\n      grape: '#4d4d4d',\n      mandarin: '#333333',\n      gray: '#1a1a1a',\n    }\n  }\n  if (variant === 'white') {\n    return {\n      midnight: '#ffffff',\n      forrest: '#e6e6e6',\n      grape: '#cccccc',\n      mandarin: '#b3b3b3',\n      gray: '#999999',\n    }\n  }\n  return {\n    midnight: '#0d233f',\n    forrest: '#135560',\n    grape: '#721e63',\n    mandarin: '#ffb11d',\n    gray: '#dadada',\n  }\n}\n\nexport function Logomark({ variant }: LogoProps) {\n  return (\n    <svg viewBox=\"0 0 175 175\">\n      <Icon variant={variant} />\n    </svg>\n  )\n}\n\nexport function LogoFull({ variant }: LogoProps) {\n  return (\n    <svg viewBox=\"0 0 641 175\">\n      <Text variant={variant} />\n      <Icon variant={variant} />\n    </svg>\n  )\n}\n\nfunction Icon({ variant }: LogoProps) {\n  const colors = getColors(variant)\n  return (\n    <>\n      <path\n        style={{ fill: colors.midnight }}\n        d=\"M120.5,57.5c.168,0,.333.012.5.013V40.506c-.167,0-.333-.006-.5-.006a98.325,98.325,0,0,0-77.4,37.565q-2.664,3.378-5.023,6.994l14.206,9.327Q54.043,91.709,56,89.179A81.363,81.363,0,0,1,120.5,57.5Z\"\n      />\n      <path\n        style={{ fill: colors.forrest }}\n        d=\"M148.668,86.223c.308.133.6.283.908.42l6.746-15.618c-.153-.067-.3-.143-.454-.21a81.36,81.36,0,0,0-71.777,3.5q-2.8,1.544-5.469,3.309l9.249,14.054A63.93,63.93,0,0,1,148.668,86.223Z\"\n      />\n      <path\n        style={{ fill: colors.grape }}\n        d=\"M170.894,109.37A63.929,63.929,0,0,0,113.4,88.861l2.336,15.474a48.456,48.456,0,0,1,44.322,15.42c.111.125.214.255.324.381l11.16-10C171.323,109.879,171.118,109.62,170.894,109.37Z\"\n      />\n      <path\n        style={{ fill: colors.mandarin }}\n        d=\"M150.921,150.314c.04.163.07.326.107.489l16.509-4.058c-.039-.163-.067-.326-.107-.489A48.457,48.457,0,0,0,135.575,111.8l-5.515,15.591A32.466,32.466,0,0,1,150.921,150.314Z\"\n      />\n      <path\n        style={{ fill: colors.gray }}\n        d=\"M134.1,138.129l-9.779,13.213a32.486,32.486,0,0,1,7.823,14.463l15.147.852c.012-.166.032-.331.041-.5A32.464,32.464,0,0,0,134.1,138.129Z\"\n      />\n    </>\n  )\n}\n\nfunction Text({ variant }: LogoProps) {\n  const colors = getColors(variant)\n  return (\n    <g\n      aria-label=\"JBrowse\"\n      transform=\"translate(213.084 144.241)\"\n      style={{ fill: colors.midnight }}\n    >\n      <path d=\"m 26.355,-71.505 v 54.075 2.835 q 0,6.825 -0.42,10.185 -0.735,5.67 -2.835,9.135 -3.255,5.355 -8.505,8.4 -4.83,2.73 -11.55,3.57 L 1.47,11.76 Q 7.35,10.185 9.24,4.2 10.605,-0.105 10.605,-9.975 v -5.565 -55.965 q 1.785,0 4.62,0.315 2.835,0.21 3.255,0.21 1.785,0 2.94,-0.105 4.515,-0.42 4.935,-0.42 z\" />\n      <path d=\"m 60.68836,-65.415 v 24.78 h 3.255 q 2.94,0 4.935,-0.525 2.1,-0.525 3.885,-2.1 2.31,-1.995 3.36,-4.83 1.155,-2.835 1.155,-6.09 0,-5.565 -2.94,-8.61 -2.94,-3.045 -8.295,-3.045 -2.52,0 -5.355,0.42 z m 0,30.87 V -6.09 h 5.25 q 4.725,0 8.505,-3.675 3.885,-3.78 3.885,-10.08 0,-8.19 -4.62,-11.655 -4.095,-3.045 -13.02,-3.045 z M 44.93836,0 v -71.505 h 27.09 q 9.135,0 14.385,3.255 6.51,3.99 6.51,12.6 0,7.035 -5.25,11.655 -4.62,4.095 -11.97,5.145 v 0.945 q 7.56,0.735 12.285,3.99 6.615,4.62 6.615,13.335 0,10.185 -7.98,15.75 -6.93,4.83 -17.43,4.83 z\" />\n      <path d=\"M 109.44281,0.525 V -50.4 q 1.785,0.21 3.99,0.42 2.31,0.105 3.255,0.105 2.31,0 4.2,-0.21 1.89,-0.21 3.045,-0.315 v 13.02 q 1.89,-6.51 5.46,-9.87 4.41,-4.095 11.655,-4.095 -0.315,2.73 -0.42,6.825 -0.105,3.99 -0.105,7.455 l -0.945,0.84 q -0.945,-0.735 -2.415,-1.05 -1.47,-0.315 -2.94,-0.315 -3.57,0 -6.195,1.89 -2.52,1.785 -3.465,5.04 -0.42,1.155 -0.525,3.15 -0.105,1.89 -0.105,4.515 v 4.515 19.005 q -1.785,-0.21 -2.625,-0.21 -3.675,-0.315 -4.62,-0.315 -2.31,0 -4.2,0.21 -1.89,0.21 -3.045,0.315 z\" />\n      <path d=\"m 173.77337,1.47 q -11.655,0 -18.585,-6.825 -6.93,-6.825 -6.93,-18.48 0,-12.6 6.72,-20.055 6.825,-7.455 18.9,-7.455 11.97,0 18.9,6.72 6.93,6.72 6.93,18.48 0,12.285 -6.72,19.74 -7.14,7.875 -19.215,7.875 z m 0.735,-48.09 q -5.88,0 -8.505,6.51 -2.205,5.565 -2.205,15.96 0,8.19 1.47,12.915 2.415,7.98 8.505,7.98 5.565,0 8.19,-7.875 2.205,-6.51 2.205,-16.695 0,-8.505 -2.1,-13.23 -2.52,-5.565 -7.56,-5.565 z\" />\n      <path d=\"m 222.03563,-50.4 10.5,36.015 q 3.675,-11.235 5.67,-17.85 2.415,-8.085 5.04,-18.165 1.05,0.105 3.045,0.315 2.1,0.21 2.835,0.21 1.995,0 3.15,-0.105 1.26,-0.21 2.73,-0.42 l 10.71,36.015 q 5.88,-17.43 10.71,-36.015 l 4.2,0.315 4.095,-0.315 q -5.145,13.125 -9.135,24.57 -5.04,14.28 -8.505,26.355 -1.89,-0.21 -3.36,-0.42 -1.365,-0.105 -2.205,-0.105 -1.89,0 -3.36,0.21 -1.365,0.21 -2.31,0.315 l -10.605,-34.755 q -4.41,13.65 -6.72,21.105 -2.31,7.35 -4.095,13.65 -1.89,-0.21 -3.36,-0.42 -1.365,-0.105 -2.31,-0.105 -1.995,0 -3.465,0.21 -1.365,0.21 -2.31,0.315 -3.78,-12.81 -5.04,-17.01 -2.205,-7.245 -5.46,-17.01 -2.835,-8.4 -5.88,-16.905 1.575,0 4.305,0.315 2.73,0.21 3.36,0.21 1.47,0 4.305,-0.21 2.835,-0.315 3.465,-0.315 z\" />\n      <path d=\"m 292.84172,-12.81 h 2.625 q 1.47,4.095 4.62,6.51 3.15,2.415 7.35,2.415 2.94,0 5.46,-1.785 2.625,-1.89 2.625,-4.62 0,-3.885 -6.195,-6.615 -10.395,-4.62 -11.655,-5.46 -6.405,-4.515 -6.405,-12.285 0,-7.77 5.25,-12.18 5.25,-4.515 12.81,-4.515 3.99,0 8.085,1.365 4.095,1.26 7.14,3.57 l -2.52,9.24 h -2.94 q -0.63,-3.57 -3.57,-6.195 -2.835,-2.625 -6.405,-2.625 -3.15,0 -5.46,1.575 -2.31,1.47 -2.31,4.515 0,3.885 6.405,6.51 10.185,4.095 11.865,5.25 6.405,4.41 6.405,12.81 0,7.455 -5.46,12.18 -5.355,4.62 -14.805,4.62 -8.19,0 -14.49,-4.305 z\" />\n      <path d=\"m 349.61228,-29.925 h 15.54 q 0,-6.51 -1.05,-10.395 -1.68,-6.3 -5.88,-6.3 -5.04,0 -7.14,6.195 -1.47,4.305 -1.47,10.5 z m 30.03,5.04 h -30.03 q 0,9.135 3.045,13.86 3.57,5.67 11.55,5.67 3.255,0 6.405,-1.26 3.15,-1.26 5.88,-3.465 l 1.26,0.945 -2.31,5.88 q -6.72,4.725 -15.015,4.725 -12.915,0 -19.635,-7.245 -6.72,-7.245 -6.72,-20.37 0,-11.235 6.405,-18.165 6.51,-7.035 17.64,-7.035 11.655,0 16.905,7.56 4.62,6.615 4.62,18.9 z\" />\n    </g>\n  )\n}\n","import React, { useState, Suspense } from 'react'\nimport {\n  AppBar,\n  Button,\n  Fab,\n  MenuItem,\n  Paper,\n  Select,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport LaunchIcon from '@mui/icons-material/Launch'\nimport { observer } from 'mobx-react'\nimport { getEnv } from 'mobx-state-tree'\n\n// locals\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\nimport DrawerWidget from './DrawerWidget'\nimport DropDownMenu from './DropDownMenu'\nimport EditableTypography from './EditableTypography'\nimport { LogoFull } from './Logo'\nimport Snackbar from './Snackbar'\nimport ViewContainer from './ViewContainer'\nimport {\n  NotificationLevel,\n  SessionWithDrawerWidgets,\n  SnackAction,\n} from '../util'\nimport { MenuItem as JBMenuItem } from './index'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    fontFamily: 'Roboto',\n    display: 'grid',\n    height: '100vh',\n    width: '100%',\n  },\n  fabLeft: {\n    zIndex: 10000,\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2),\n  },\n  fabRight: {\n    zIndex: 10000,\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  menuBarAndComponents: {\n    gridColumn: 'main',\n    display: 'grid',\n    gridTemplateRows: '[menubar] min-content [components] auto',\n    height: '100vh',\n  },\n  menuBar: {\n    gridRow: 'menubar',\n  },\n  components: {\n    overflowY: 'auto',\n    gridRow: 'components',\n  },\n  appBar: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  inputBase: {\n    color: theme.palette.primary.contrastText,\n  },\n  inputRoot: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  inputFocused: {\n    borderColor: theme.palette.secondary.main,\n    backgroundColor: theme.palette.primary.light,\n  },\n\n  selectPaper: {\n    padding: theme.spacing(4),\n  },\n}))\n\nconst Logo = observer(\n  ({ session }: { session: { configuration: AnyConfigurationModel } }) => {\n    const { configuration } = session\n    const logoPath = readConfObject(configuration, 'logoPath')\n    if (!logoPath?.uri) {\n      return <LogoFull variant=\"white\" />\n    } else {\n      return <img src={logoPath.uri} alt=\"Custom logo\" />\n    }\n  },\n)\n\ntype SnackbarMessage = [string, NotificationLevel, SnackAction]\n\nconst App = observer(\n  ({\n    session,\n    HeaderButtons = <div />,\n  }: {\n    HeaderButtons?: React.ReactElement\n    session: SessionWithDrawerWidgets & {\n      savedSessionNames: string[]\n      menus: { label: string; menuItems: JBMenuItem[] }[]\n      renameCurrentSession: (arg: string) => void\n      snackbarMessages: SnackbarMessage[]\n      popSnackbarMessage: () => unknown\n    }\n  }) => {\n    const { classes } = useStyles()\n    const { pluginManager } = getEnv(session)\n    const viewTypes = pluginManager.getElementTypeRecord('view').all()\n    const [value, setValue] = useState(viewTypes[0]?.name)\n    const {\n      visibleWidget,\n      drawerWidth,\n      minimized,\n      activeWidgets,\n      savedSessionNames,\n      name,\n      menus,\n      views,\n      drawerPosition,\n    } = session\n\n    function handleNameChange(newName: string) {\n      if (savedSessionNames?.includes(newName)) {\n        session.notify(\n          `Cannot rename session to \"${newName}\", a saved session with that name already exists`,\n          'warning',\n        )\n      } else {\n        session.renameCurrentSession(newName)\n      }\n    }\n\n    const drawerVisible = visibleWidget && !minimized\n\n    let grid\n    if (drawerPosition === 'right') {\n      grid = [\n        `[main] 1fr`,\n        drawerVisible ? `[drawer] ${drawerWidth}px` : undefined,\n      ]\n    } else if (drawerPosition === 'left') {\n      grid = [\n        drawerVisible ? `[drawer] ${drawerWidth}px` : undefined,\n        `[main] 1fr`,\n      ]\n    }\n    return (\n      <div\n        className={classes.root}\n        style={{\n          gridTemplateColumns: grid?.filter(f => !!f).join(' '),\n        }}\n      >\n        {drawerVisible && drawerPosition === 'left' ? (\n          <DrawerWidget session={session} />\n        ) : null}\n\n        {session.DialogComponent ? (\n          <Suspense fallback={<div />}>\n            <session.DialogComponent {...session.DialogProps} />\n          </Suspense>\n        ) : null}\n        <div className={classes.menuBarAndComponents}>\n          <div className={classes.menuBar}>\n            <AppBar className={classes.appBar} position=\"static\">\n              <Toolbar>\n                {menus.map(menu => (\n                  <DropDownMenu\n                    key={menu.label}\n                    menuTitle={menu.label}\n                    menuItems={menu.menuItems}\n                    session={session}\n                  />\n                ))}\n                <div className={classes.grow} />\n                <Tooltip title=\"Rename Session\" arrow>\n                  <EditableTypography\n                    value={name}\n                    setValue={handleNameChange}\n                    variant=\"body1\"\n                    classes={{\n                      inputBase: classes.inputBase,\n                      inputRoot: classes.inputRoot,\n                      inputFocused: classes.inputFocused,\n                    }}\n                  />\n                </Tooltip>\n                {HeaderButtons}\n                <div className={classes.grow} />\n                <div style={{ width: 150, maxHeight: 48 }}>\n                  <Logo session={session} />\n                </div>\n              </Toolbar>\n            </AppBar>\n          </div>\n          <div className={classes.components}>\n            {views.length ? (\n              views.map(view => {\n                const viewType = pluginManager.getViewType(view.type)\n                if (!viewType) {\n                  throw new Error(`unknown view type ${view.type}`)\n                }\n                const { ReactComponent } = viewType\n                return (\n                  <ViewContainer\n                    key={`view-${view.id}`}\n                    view={view}\n                    onClose={() => {\n                      session.removeView(view)\n                      session.notify(`A view has been closed`, 'info', {\n                        name: 'undo',\n                        onClick: () => {\n                          pluginManager.rootModel.history.undo()\n                        },\n                      })\n                    }}\n                  >\n                    <Suspense fallback={<div>Loading...</div>}>\n                      <ReactComponent\n                        model={view}\n                        session={session}\n                        getTrackType={pluginManager.getTrackType}\n                      />\n                    </Suspense>\n                  </ViewContainer>\n                )\n              })\n            ) : (\n              <Paper className={classes.selectPaper}>\n                <Typography>Select a view to launch</Typography>\n                <Select\n                  value={value}\n                  onChange={event => setValue(event.target.value)}\n                >\n                  {viewTypes.map(({ name }: { name: string }) => (\n                    <MenuItem key={name} value={name}>\n                      {name}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <Button\n                  onClick={() => {\n                    session.addView(value, {})\n                  }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Launch view\n                </Button>\n              </Paper>\n            )}\n\n            {/* blank space at the bottom of screen allows scroll */}\n            <div style={{ height: 300 }} />\n          </div>\n        </div>\n\n        {activeWidgets.size > 0 && minimized ? (\n          <Tooltip title=\"Open drawer widget\">\n            <Fab\n              className={\n                drawerPosition === 'right' ? classes.fabRight : classes.fabLeft\n              }\n              color=\"primary\"\n              data-testid=\"drawer-maximize\"\n              onClick={() => session.showWidgetDrawer()}\n            >\n              <LaunchIcon />\n            </Fab>\n          </Tooltip>\n        ) : null}\n\n        {drawerVisible && drawerPosition === 'right' ? (\n          <DrawerWidget session={session} />\n        ) : null}\n\n        <Snackbar session={session} />\n      </div>\n    )\n  },\n)\n\nexport default App\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  IconButton,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport CloseIcon from '@mui/icons-material/Close'\n\nconst useStyles = makeStyles()(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nfunction ReturnToImportFormDialog({\n  model,\n  handleClose,\n}: {\n  model: { clearView: Function }\n  handleClose: () => void\n}) {\n  const { classes } = useStyles()\n  return (\n    <Dialog maxWidth=\"xl\" open onClose={handleClose}>\n      <DialogTitle>\n        Reference sequence\n        {handleClose ? (\n          <IconButton\n            className={classes.closeButton}\n            onClick={() => handleClose()}\n            size=\"large\"\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <Divider />\n\n      <DialogContent>\n        <Typography>\n          Are you sure you want to return to the import form? This will lose\n          your current view\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            model.clearView()\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          onClick={() => handleClose()}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(ReturnToImportFormDialog)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport ReactPropTypes from 'prop-types'\nimport React, { useState, useRef, useEffect } from 'react'\nimport { drawImageOntoCanvasContext } from '../util/offscreenCanvasPonyfill'\n\nfunction PrerenderedCanvas(props: {\n  width: number\n  height: number\n  highResolutionScaling: number\n  style: any\n  imageData: any\n  showSoftClip?: boolean\n  blockKey?: string\n}) {\n  const {\n    width,\n    height,\n    highResolutionScaling,\n    style,\n    imageData,\n    blockKey,\n    showSoftClip,\n  } = props\n  const [done, setDone] = useState(false)\n\n  const featureCanvas = useRef<HTMLCanvasElement>(null)\n\n  useEffect(() => {\n    if (!imageData) {\n      return\n    }\n    const canvas = featureCanvas.current\n    if (!canvas) {\n      return\n    }\n    const context = canvas.getContext('2d')\n    if (!context) {\n      return\n    }\n    drawImageOntoCanvasContext(imageData, context)\n    setDone(true)\n  }, [imageData])\n\n  const softClipString = showSoftClip ? '_softclipped' : ''\n  const blockKeyStr = blockKey ? '_' + blockKey : ''\n  const testId = `prerendered_canvas${softClipString}${blockKeyStr}${\n    done ? '_done' : ''\n  }`\n  return (\n    <canvas\n      data-testid={testId}\n      ref={featureCanvas}\n      width={width * highResolutionScaling}\n      height={height * highResolutionScaling}\n      style={{ width, height, ...style }}\n    />\n  )\n}\n\nPrerenderedCanvas.propTypes = {\n  height: ReactPropTypes.number.isRequired,\n  width: ReactPropTypes.number.isRequired,\n  highResolutionScaling: ReactPropTypes.number,\n  style: ReactPropTypes.objectOf(ReactPropTypes.any),\n  imageData: ReactPropTypes.any,\n  // config: ReactPropTypes.objectOf(ReactPropTypes.any),\n}\nPrerenderedCanvas.defaultProps = {\n  imageData: undefined,\n  highResolutionScaling: 1,\n  style: {},\n  // config: {},\n}\n\nexport default PrerenderedCanvas\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { Feature } from '../util/simpleFeature'\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\n\nconst useStyles = makeStyles()({\n  hoverLabel: {\n    border: '1px solid black',\n    position: 'absolute',\n    background: '#fffa',\n    pointerEvents: 'none',\n    zIndex: 10000,\n  },\n})\n\nconst Tooltip = ({\n  offsetX,\n  offsetY,\n  configuration,\n  feature,\n  timeout = 300,\n}: {\n  offsetX: number\n  offsetY: number\n  configuration: AnyConfigurationModel\n  feature?: Feature\n  timeout?: number\n}) => {\n  const { classes } = useStyles()\n  const [shown, setShown] = useState(false)\n  useEffect(() => {\n    // only show the loading message after short timeout to prevent excessive\n    // flickering\n    const handle = setTimeout(() => setShown(true), timeout)\n    return () => clearTimeout(handle)\n  })\n  if (feature && shown) {\n    const text = readConfObject(configuration, 'mouseover', { feature })\n    return (\n      <div\n        className={classes.hoverLabel}\n        style={{ left: offsetX, top: offsetY }}\n      >\n        {text}\n      </div>\n    )\n  }\n  return null\n}\n\nexport default observer(Tooltip)\n","// vendored from quick-lru@6.1.1, didn't like being compiled as a 'pure-esm' nodejs dependency\n// the license is reproduced below https://github.com/sindresorhus/quick-lru/blob/main/license\n// MIT License\n\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nexport default class QuickLRU extends Map {\n  constructor(options = {}) {\n    super()\n\n    if (!(options.maxSize && options.maxSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0')\n    }\n\n    if (typeof options.maxAge === 'number' && options.maxAge === 0) {\n      throw new TypeError('`maxAge` must be a number greater than 0')\n    }\n\n    // TODO: Use private class fields when ESLint supports them.\n    this.maxSize = options.maxSize\n    this.maxAge = options.maxAge || Number.POSITIVE_INFINITY\n    this.onEviction = options.onEviction\n    this.cache = new Map()\n    this.oldCache = new Map()\n    this._size = 0\n  }\n\n  // TODO: Use private class methods when targeting Node.js 16.\n  _emitEvictions(cache) {\n    if (typeof this.onEviction !== 'function') {\n      return\n    }\n\n    for (const [key, item] of cache) {\n      this.onEviction(key, item.value)\n    }\n  }\n\n  _deleteIfExpired(key, item) {\n    if (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n      if (typeof this.onEviction === 'function') {\n        this.onEviction(key, item.value)\n      }\n\n      return this.delete(key)\n    }\n\n    return false\n  }\n\n  _getOrDeleteIfExpired(key, item) {\n    const deleted = this._deleteIfExpired(key, item)\n    if (deleted === false) {\n      return item.value\n    }\n  }\n\n  _getItemValue(key, item) {\n    return item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value\n  }\n\n  _peek(key, cache) {\n    const item = cache.get(key)\n\n    return this._getItemValue(key, item)\n  }\n\n  _set(key, value) {\n    this.cache.set(key, value)\n    this._size++\n\n    if (this._size >= this.maxSize) {\n      this._size = 0\n      this._emitEvictions(this.oldCache)\n      this.oldCache = this.cache\n      this.cache = new Map()\n    }\n  }\n\n  _moveToRecent(key, item) {\n    this.oldCache.delete(key)\n    this._set(key, item)\n  }\n\n  *_entriesAscending() {\n    for (const item of this.oldCache) {\n      const [key, value] = item\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value)\n        if (deleted === false) {\n          yield item\n        }\n      }\n    }\n\n    for (const item of this.cache) {\n      const [key, value] = item\n      const deleted = this._deleteIfExpired(key, value)\n      if (deleted === false) {\n        yield item\n      }\n    }\n  }\n\n  get(key) {\n    if (this.cache.has(key)) {\n      const item = this.cache.get(key)\n\n      return this._getItemValue(key, item)\n    }\n\n    if (this.oldCache.has(key)) {\n      const item = this.oldCache.get(key)\n      if (this._deleteIfExpired(key, item) === false) {\n        this._moveToRecent(key, item)\n        return item.value\n      }\n    }\n  }\n\n  set(key, value, { maxAge = this.maxAge } = {}) {\n    const expiry =\n      typeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY\n        ? Date.now() + maxAge\n        : undefined\n    if (this.cache.has(key)) {\n      this.cache.set(key, {\n        value,\n        expiry,\n      })\n    } else {\n      this._set(key, { value, expiry })\n    }\n  }\n\n  has(key) {\n    if (this.cache.has(key)) {\n      return !this._deleteIfExpired(key, this.cache.get(key))\n    }\n\n    if (this.oldCache.has(key)) {\n      return !this._deleteIfExpired(key, this.oldCache.get(key))\n    }\n\n    return false\n  }\n\n  peek(key) {\n    if (this.cache.has(key)) {\n      return this._peek(key, this.cache)\n    }\n\n    if (this.oldCache.has(key)) {\n      return this._peek(key, this.oldCache)\n    }\n  }\n\n  delete(key) {\n    const deleted = this.cache.delete(key)\n    if (deleted) {\n      this._size--\n    }\n\n    return this.oldCache.delete(key) || deleted\n  }\n\n  clear() {\n    this.cache.clear()\n    this.oldCache.clear()\n    this._size = 0\n  }\n\n  resize(newSize) {\n    if (!(newSize && newSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0')\n    }\n\n    const items = [...this._entriesAscending()]\n    const removeCount = items.length - newSize\n    if (removeCount < 0) {\n      this.cache = new Map(items)\n      this.oldCache = new Map()\n      this._size = items.length\n    } else {\n      if (removeCount > 0) {\n        this._emitEvictions(items.slice(0, removeCount))\n      }\n\n      this.oldCache = new Map(items.slice(removeCount))\n      this.cache = new Map()\n      this._size = 0\n    }\n\n    this.maxSize = newSize\n  }\n\n  *keys() {\n    for (const [key] of this) {\n      yield key\n    }\n  }\n\n  *values() {\n    for (const [, value] of this) {\n      yield value\n    }\n  }\n\n  *[Symbol.iterator]() {\n    for (const item of this.cache) {\n      const [key, value] = item\n      const deleted = this._deleteIfExpired(key, value)\n      if (deleted === false) {\n        yield [key, value.value]\n      }\n    }\n\n    for (const item of this.oldCache) {\n      const [key, value] = item\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value)\n        if (deleted === false) {\n          yield [key, value.value]\n        }\n      }\n    }\n  }\n\n  *entriesDescending() {\n    let items = [...this.cache]\n    for (let i = items.length - 1; i >= 0; --i) {\n      const item = items[i]\n      const [key, value] = item\n      const deleted = this._deleteIfExpired(key, value)\n      if (deleted === false) {\n        yield [key, value.value]\n      }\n    }\n\n    items = [...this.oldCache]\n    for (let i = items.length - 1; i >= 0; --i) {\n      const item = items[i]\n      const [key, value] = item\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value)\n        if (deleted === false) {\n          yield [key, value.value]\n        }\n      }\n    }\n  }\n\n  *entriesAscending() {\n    for (const [key, value] of this._entriesAscending()) {\n      yield [key, value.value]\n    }\n  }\n\n  get size() {\n    if (!this._size) {\n      return this.oldCache.size\n    }\n\n    let oldCacheSize = 0\n    for (const key of this.oldCache.keys()) {\n      if (!this.cache.has(key)) {\n        oldCacheSize++\n      }\n    }\n\n    return Math.min(this._size + oldCacheSize, this.maxSize)\n  }\n\n  entries() {\n    return this.entriesAscending()\n  }\n\n  forEach(callbackFunction, thisArgument = this) {\n    for (const [key, value] of this.entriesAscending()) {\n      callbackFunction.call(thisArgument, value, key, this)\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return JSON.stringify([...this.entriesAscending()])\n  }\n}\n","import { Observable, fromEvent } from 'rxjs'\n\nclass AbortError extends Error {\n  public code: string | undefined\n}\n\n/**\n * properly check if the given AbortSignal is aborted.\n * per the standard, if the signal reads as aborted,\n * this function throws either a DOMException AbortError, or a regular error\n * with a `code` attribute set to `ERR_ABORTED`.\n *\n * for convenience, passing `undefined` is a no-op\n *\n * @param signal -\n * @returns nothing\n */\nexport function checkAbortSignal(signal?: AbortSignal): void {\n  if (!signal) {\n    return\n  }\n\n  if (!(signal instanceof AbortSignal)) {\n    throw new TypeError('must pass an AbortSignal')\n  }\n\n  if (signal.aborted) {\n    throw makeAbortError()\n  }\n}\n\nfunction timeout(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n/**\n * Skips to the next tick, then runs `checkAbortSignal`.\n * Await this to inside an otherwise synchronous loop to\n * provide a place to break when an abort signal is received.\n */\nexport async function abortBreakPoint(signal?: AbortSignal) {\n  // it was observed that an actual timeout is needed to get the aborting (wrap\n  // hicrenderer in a try catch, console.error the error, and rethrow the error\n  // to see). using await Promise.resolve() did not appear to allow aborting to\n  // occur\n  await timeout(1)\n  checkAbortSignal(signal)\n}\n\nexport function makeAbortError() {\n  if (typeof DOMException !== 'undefined') {\n    return new DOMException('aborted', 'AbortError')\n  }\n  const e = new AbortError('aborted')\n  e.code = 'ERR_ABORTED'\n  return e\n}\n\nexport function observeAbortSignal(signal?: AbortSignal): Observable<Event> {\n  if (!signal) {\n    return Observable.create()\n  }\n  return fromEvent(signal, 'abort')\n}\n\n/**\n * check if the given exception was caused by an operation being intentionally aborted\n * @param exception -\n */\nexport function isAbortException(exception: unknown): boolean {\n  return (\n    exception instanceof Error &&\n    // DOMException\n    (exception.name === 'AbortError' ||\n      // standard-ish non-DOM abort exception\n      (exception as AbortError).code === 'ERR_ABORTED' ||\n      // message contains aborted for bubbling through RPC\n      // things we have seen that we want to catch here\n      // Error: aborted\n      // AbortError: aborted\n      // AbortError: The user aborted a request.\n      !!exception.message.match(/\\b(aborted|AbortError)\\b/i))\n  )\n}\n","// This file is a ponyfill for the HTML5 OffscreenCanvas API.\n\nimport isNode from 'detect-node'\n\nimport { CanvasSequence } from 'canvas-sequencer'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AbstractCanvas = any\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AbstractImageBitmap = any\n\nexport let createCanvas: (width: number, height: number) => AbstractCanvas\nexport let createImageBitmap: (\n  canvas: AbstractCanvas,\n) => Promise<AbstractImageBitmap>\n\n/** the JS class (constructor) for offscreen-generated image bitmap data */\nexport let ImageBitmapType: Function\n\nexport function drawImageOntoCanvasContext(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  imageData: any,\n  context: CanvasRenderingContext2D,\n) {\n  if (imageData.serializedCommands) {\n    const seq = new CanvasSequence(imageData.serializedCommands)\n    seq.execute(context)\n  } else {\n    context.drawImage(imageData as CanvasImageSource, 0, 0)\n  }\n}\n\nconst weHave = {\n  realOffscreenCanvas: typeof OffscreenCanvas === 'function',\n  node: isNode,\n}\n\nif (weHave.realOffscreenCanvas) {\n  createCanvas = (width, height) => new OffscreenCanvas(width, height)\n  // eslint-disable-next-line no-restricted-globals\n  createImageBitmap = window.createImageBitmap || self.createImageBitmap\n  // eslint-disable-next-line no-restricted-globals\n  ImageBitmapType = window.ImageBitmap || self.ImageBitmap\n} else if (weHave.node) {\n  // use node-canvas if we are running in node (i.e. automated tests)\n  createCanvas = (...args) => {\n    // @ts-ignore\n    // eslint-disable-next-line no-undef\n    return nodeCreateCanvas(...args)\n  }\n  createImageBitmap = async (canvas, ...otherargs) => {\n    if (otherargs.length) {\n      throw new Error(\n        'only one-argument uses of createImageBitmap are supported by the node offscreencanvas ponyfill',\n      )\n    }\n    const dataUri = canvas.toDataURL()\n    // @ts-ignore\n    // eslint-disable-next-line no-undef\n    const img = new nodeImage()\n    return new Promise((resolve, reject) => {\n      img.onload = () => resolve(img)\n      img.onerror = reject\n      img.src = dataUri\n    })\n  }\n} else {\n  createCanvas = (width: number, height: number) => {\n    const context = new CanvasSequence()\n    return {\n      width,\n      height,\n      getContext() {\n        return context\n      },\n    }\n  }\n  createImageBitmap = async canvas => {\n    const ctx = canvas.getContext('2d')\n    return {\n      height: canvas.height,\n      width: canvas.width,\n      serializedCommands: ctx.toJSON(),\n      containsNoTransferables: true,\n    }\n  }\n  ImageBitmapType = String\n}\n","import React from 'react'\nimport { CanvasSequence } from 'canvas-sequencer'\n\n// locals\nimport { createCanvas, createImageBitmap } from './offscreenCanvasPonyfill'\nimport { blobToDataURL } from './index'\n\nexport type RenderReturn = Record<string, unknown>\n\nexport async function renderToAbstractCanvas(\n  width: number,\n  height: number,\n  opts: {\n    exportSVG?: { rasterizeLayers?: boolean }\n    highResolutionScaling: number\n  },\n  cb: (\n    ctx: CanvasRenderingContext2D,\n  ) => Promise<RenderReturn | void> | RenderReturn | void,\n) {\n  const { exportSVG, highResolutionScaling: scaling = 1 } = opts\n\n  if (exportSVG) {\n    if (!exportSVG.rasterizeLayers) {\n      const fakeCtx = new CanvasSequence()\n      const result = await cb(fakeCtx)\n      return {\n        ...result,\n        canvasRecordedData: fakeCtx.toJSON(),\n      }\n    } else {\n      const scale = 4\n      const canvas = createCanvas(Math.ceil(width * scale), height * scale)\n      const ctx = canvas.getContext('2d')\n      if (!ctx) {\n        throw new Error('2d canvas rendering not supported on this platform')\n      }\n      ctx.scale(scale, scale)\n      const result = await cb(ctx)\n\n      // two methods needed for converting canvas to PNG, one for webworker\n      // offscreen canvas, one for main thread\n      return {\n        ...result,\n        reactElement: (\n          <image\n            width={width}\n            height={height}\n            xlinkHref={\n              'convertToBlob' in canvas\n                ? await blobToDataURL(\n                    await canvas.convertToBlob({\n                      type: 'image/png',\n                    }),\n                  )\n                : canvas.toDataURL()\n            }\n          />\n        ),\n      }\n    }\n  } else {\n    const canvas = createCanvas(Math.ceil(width * scaling), height * scaling)\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      throw new Error('2d canvas rendering not supported on this platform')\n    }\n    ctx.scale(scaling, scaling)\n    const result = await cb(ctx)\n    return { ...result, imageData: await createImageBitmap(canvas) }\n  }\n}\n","import React from 'react'\nimport {\n  isStateTreeNode,\n  Instance,\n  SnapshotIn,\n  IAnyStateTreeNode,\n  IStateTreeNode,\n  IType,\n} from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '../../configuration/configurationSchema'\n\nimport assemblyManager from '../../assemblyManager'\nimport TextSearchManager from '../../TextSearch/TextSearchManager'\nimport { MenuItem } from '../../ui'\nimport {\n  NoAssemblyRegion as MUNoAssemblyRegion,\n  Region as MUIRegion,\n  LocalPathLocation as MULocalPathLocation,\n  UriLocation as MUUriLocation,\n  BlobLocation as MUBlobLocation,\n} from './mst'\nimport RpcManager from '../../rpc/RpcManager'\nimport { Feature } from '../simpleFeature'\nimport { BaseInternetAccountModel } from '../../pluggableElementTypes/models'\n\nexport * from './util'\n\n/** abstract type for a model that contains multiple views */\nexport interface AbstractViewContainer\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  extends IStateTreeNode<IType<any, unknown, any>> {\n  views: AbstractViewModel[]\n  removeView(view: AbstractViewModel): void\n  addView(\n    typeName: string,\n    initialState?: Record<string, unknown>,\n  ): AbstractViewModel\n}\nexport function isViewContainer(\n  thing: unknown,\n): thing is AbstractViewContainer {\n  return (\n    isStateTreeNode(thing) &&\n    'removeView' in thing &&\n    'addView' in thing &&\n    'views' in thing\n  )\n}\n\nexport type NotificationLevel = 'error' | 'info' | 'warning' | 'success'\nexport interface SnackAction {\n  name: string\n  onClick: () => void\n}\n\nexport type AssemblyManager = Instance<ReturnType<typeof assemblyManager>>\nexport type { TextSearchManager }\nexport interface BasePlugin {\n  version?: string\n  name: string\n  url?: string\n}\n\nexport interface JBrowsePlugin {\n  name: string\n  authors: string[]\n  description: string\n  location: string\n  url?: string\n  umdUrl?: string\n  esmUrl?: string\n  cjsUrl?: string\n  license: string\n  image?: string\n}\n\nexport type DialogComponentType =\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  | React.LazyExoticComponent<React.FC<any>>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  | React.FC<any>\n\n/** minimum interface that all session state models must implement */\nexport interface AbstractSessionModel extends AbstractViewContainer {\n  drawerPosition?: string\n  setSelection(feature: Feature): void\n  clearSelection(): void\n  configuration: AnyConfigurationModel\n  rpcManager: RpcManager\n  assemblyNames: string[]\n  assemblies: AnyConfigurationModel[]\n  selection?: unknown\n  duplicateCurrentSession?(): void\n  notify(message: string, level?: NotificationLevel, action?: SnackAction): void\n  assemblyManager: AssemblyManager\n  version: string\n  getTrackActionMenuItems?: Function\n  addAssembly?: Function\n  removeAssembly?: Function\n  textSearchManager?: TextSearchManager\n  connections: AnyConfigurationModel[]\n  deleteConnection?: Function\n  sessionConnections?: AnyConfigurationModel[]\n  connectionInstances?: {\n    name: string\n    connectionId: string\n    tracks: AnyConfigurationModel[]\n  }[]\n  makeConnection?: Function\n  adminMode?: boolean\n  showWidget?: Function\n  addWidget?: Function\n\n  DialogComponent?: DialogComponentType\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  DialogProps: any\n  queueDialog: (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback: (doneCallback: Function) => [DialogComponentType, any],\n  ) => void\n  name: string\n  id?: string\n  tracks: AnyConfigurationModel[]\n}\nexport function isSessionModel(thing: unknown): thing is AbstractSessionModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'rpcManager' in thing &&\n    'configuration' in thing\n  )\n}\n\n/** abstract interface for a session allows editing configurations */\nexport interface SessionWithConfigEditing extends AbstractSessionModel {\n  editConfiguration(configuration: AnyConfigurationModel): void\n}\nexport function isSessionModelWithConfigEditing(\n  thing: unknown,\n): thing is SessionWithConfigEditing {\n  return isSessionModel(thing) && 'editConfiguration' in thing\n}\n\n/** abstract interface for a session allows adding tracks */\nexport interface SessionWithConfigEditing extends AbstractSessionModel {\n  addTrackConf(\n    configuration: AnyConfigurationModel | SnapshotIn<AnyConfigurationModel>,\n  ): void\n}\nexport function isSessionWithAddTracks(\n  thing: unknown,\n): thing is SessionWithConfigEditing {\n  return isSessionModel(thing) && 'addTrackConf' in thing\n}\n\nexport interface Widget {\n  type: string\n  id: string\n}\n\n/** abstract interface for a session that manages widgets */\nexport interface SessionWithWidgets extends AbstractSessionModel {\n  minimized: boolean\n  visibleWidget?: Widget\n  widgets: Map<string, Widget>\n  activeWidgets: Map<string, Widget>\n  addWidget(\n    typeName: string,\n    id: string,\n    initialState?: Record<string, unknown>,\n    configuration?: { type: string },\n  ): Widget\n  showWidget(widget: unknown): void\n  hideWidget(widget: unknown): void\n}\n\n/* only some sessions with widgets use a drawer widget */\nexport interface SessionWithDrawerWidgets extends SessionWithWidgets {\n  drawerWidth: number\n  resizeDrawer(arg: number): number\n  minimizeWidgetDrawer(): void\n  showWidgetDrawer: () => void\n  drawerPosition: string\n  setDrawerPosition(arg: string): void\n}\n\nexport function isSessionModelWithWidgets(\n  thing: unknown,\n): thing is SessionWithWidgets {\n  return isSessionModel(thing) && 'widgets' in thing\n}\n\ninterface SessionWithConnections {\n  addConnectionConf: (arg: AnyConfigurationModel) => void\n}\n\nexport function isSessionModelWithConnections(\n  thing: unknown,\n): thing is SessionWithConnections {\n  return isSessionModel(thing) && 'addConnectionConf' in thing\n}\n\nexport interface SessionWithSessionPlugins extends AbstractSessionModel {\n  sessionPlugins: JBrowsePlugin[]\n  addSessionPlugin: Function\n  removeSessionPlugin: Function\n}\nexport function isSessionWithSessionPlugins(\n  thing: unknown,\n): thing is SessionWithSessionPlugins {\n  return isSessionModel(thing) && 'sessionPlugins' in thing\n}\n\n/** abstract interface for a session that manages a global selection */\nexport interface SelectionContainer extends AbstractSessionModel {\n  selection?: unknown\n  setSelection(thing: unknown): void\n}\nexport function isSelectionContainer(\n  thing: unknown,\n): thing is SelectionContainer {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'selection' in thing &&\n    'setSelection' in thing\n  )\n}\n\n/** minimum interface that all view state models must implement */\nexport interface AbstractViewModel {\n  id: string\n  type: string\n  width: number\n  setWidth(width: number): void\n  displayName: string | undefined\n  setDisplayName: (arg: string) => void\n  menuItems: () => MenuItem[]\n}\nexport function isViewModel(thing: unknown): thing is AbstractViewModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'width' in thing &&\n    'setWidth' in thing\n  )\n}\n\nexport interface AbstractTrackModel {\n  displays: AbstractDisplayModel[]\n}\n\nexport function isTrackModel(thing: unknown): thing is AbstractTrackModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'configuration' in thing &&\n    // @ts-ignore\n    thing.configuration.trackId\n  )\n}\n\nexport interface AbstractDisplayModel {\n  id: string\n  parentTrack: AbstractTrackModel\n  renderDelay: number\n  rendererType: any // eslint-disable-line @typescript-eslint/no-explicit-any\n  cannotBeRenderedReason?: string\n}\nexport function isDisplayModel(thing: unknown): thing is AbstractDisplayModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'configuration' in thing &&\n    // @ts-ignore\n    thing.configuration.displayId\n  )\n}\n\nexport interface TrackViewModel extends AbstractViewModel {\n  showTrack(trackId: string): void\n  hideTrack(trackId: string): void\n}\nexport function isTrackViewModel(thing: unknown): thing is TrackViewModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'showTrack' in thing &&\n    'hideTrack' in thing\n  )\n}\n\n/** minimum interface for the root MST model of a JBrowse app */\nexport interface AbstractRootModel {\n  jbrowse: IAnyStateTreeNode\n  session?: AbstractSessionModel\n  setDefaultSession?(): void\n  adminMode?: boolean\n  error?: unknown\n}\n\n/** root model with more included for the heavier JBrowse web and desktop app */\nexport interface AppRootModel extends AbstractRootModel {\n  isAssemblyEditing: boolean\n  isDefaultSessionEditing: boolean\n  setAssemblyEditing: (arg: boolean) => boolean\n  setDefaultSessionEditing: (arg: boolean) => boolean\n  internetAccounts: BaseInternetAccountModel[]\n  findAppropriateInternetAccount(\n    location: UriLocation,\n  ): BaseInternetAccountModel | undefined\n}\n\nexport function isAppRootModel(thing: unknown): thing is AppRootModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'isAssemblyEditing' in thing &&\n    'findAppropriateInternetAccount' in thing\n  )\n}\n\n/** a root model that manages global menus */\nexport interface AbstractMenuManager {\n  appendMenu(menuName: string): void\n  insertMenu(menuName: string, position: number): number\n  insertInMenu(menuName: string, menuItem: MenuItem, position: number): number\n  appendToMenu(menuName: string, menuItem: MenuItem): number\n  appendToSubMenu(menuPath: string[], menuItem: MenuItem): number\n  insertInSubMenu(\n    menuPath: string[],\n    menuItem: MenuItem,\n    position: number,\n  ): number\n}\nexport function isAbstractMenuManager(\n  thing: unknown,\n): thing is AbstractMenuManager {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'appendMenu' in thing &&\n    'appendToSubMenu' in thing\n  )\n}\n\n// Empty interfaces required by mobx-state-tree\n// See https://mobx-state-tree.js.org/tips/typescript#using-a-mst-type-at-design-time\n/* eslint-disable @typescript-eslint/no-empty-interface */\n\nexport interface NoAssemblyRegion\n  extends SnapshotIn<typeof MUNoAssemblyRegion> {}\n\nexport interface Region extends SnapshotIn<typeof MUIRegion> {}\n\nexport interface AugmentedRegion extends Region {\n  originalRefName?: string\n}\n\nexport interface LocalPathLocation\n  extends SnapshotIn<typeof MULocalPathLocation> {}\n\nexport interface UriLocation extends SnapshotIn<typeof MUUriLocation> {}\n\nexport function isUriLocation(location: unknown): location is UriLocation {\n  return typeof location === 'object' && location !== null && 'uri' in location\n}\nexport class AuthNeededError extends Error {\n  constructor(public message: string, public url: string) {\n    super(message)\n    this.name = 'AuthNeededError'\n\n    Object.setPrototypeOf(this, AuthNeededError.prototype)\n  }\n}\n\nexport class RetryError extends Error {\n  constructor(public message: string, public internetAccountId: string) {\n    super(message)\n    this.name = 'RetryError'\n  }\n}\n\nexport function isAuthNeededException(\n  exception: unknown,\n): exception is AuthNeededError {\n  return (\n    exception instanceof Error &&\n    // DOMException\n    (exception.name === 'AuthNeededError' ||\n      (exception as AuthNeededError).url !== undefined)\n  )\n}\n\nexport function isRetryException(exception: Error): boolean {\n  return (\n    // DOMException\n    exception.name === 'RetryError' ||\n    (exception as RetryError).internetAccountId !== undefined\n  )\n}\n\nexport interface BlobLocation extends SnapshotIn<typeof MUBlobLocation> {}\n\nexport type FileLocation = LocalPathLocation | UriLocation | BlobLocation\n\n// These types are slightly different than the MST models representing a\n// location because a blob cannot be stored in a MST, so this is the\n// pre-processed file location\nexport type PreUriLocation = { uri: string }\nexport type PreLocalPathLocation = { localPath: string }\nexport type PreBlobLocation = { blob: File }\nexport type PreFileLocation =\n  | PreUriLocation\n  | PreLocalPathLocation\n  | PreBlobLocation\n","import { when as mobxWhen, IWhenOptions } from 'mobx'\nimport { makeAbortError } from './aborting'\n\ninterface WhenOpts extends IWhenOptions {\n  signal?: AbortSignal\n}\n\n/**\n * Wrapper for mobx `when` that adds timeout and aborting support.\n */\nexport function when(\n  getter: () => boolean,\n  { timeout, signal, name }: WhenOpts = {},\n) {\n  return new Promise((resolve, reject) => {\n    let finished = false\n\n    const whenPromise = mobxWhen(getter)\n\n    // set up timeout\n    let timeoutId: ReturnType<typeof setTimeout> | undefined\n    let finishTimeout = () => {}\n    if (timeout) {\n      timeoutId = setTimeout(() => {\n        if (!finished) {\n          finished = true\n          whenPromise.cancel()\n          reject(new Error(`timed out waiting for ${name || 'whenPresent'}`))\n        }\n      }, timeout)\n      finishTimeout = () => timeoutId && clearTimeout(timeoutId)\n    }\n\n    // set up aborting\n    if (signal) {\n      signal.addEventListener('abort', () => {\n        if (!finished) {\n          finished = true\n\n          // mobx when supports a cancel method\n          whenPromise.cancel()\n          finishTimeout()\n\n          reject(makeAbortError())\n        }\n      })\n    }\n\n    whenPromise\n      .then(() => {\n        if (!finished) {\n          finished = true\n          finishTimeout()\n\n          resolve(true)\n        }\n      })\n      .catch(err => {\n        if (!finished) {\n          finished = true\n          finishTimeout()\n\n          reject(err)\n        }\n      })\n  })\n}\n\n/**\n * Wrapper for mobx `when` that makes a promise for the return value\n * of the given function at the point in time when it becomes not\n * undefined and not null.\n */\nexport async function whenPresent<FUNCTION extends () => unknown>(\n  getter: FUNCTION,\n  opts: WhenOpts = {},\n): Promise<NonNullable<ReturnType<FUNCTION>>> {\n  await when(() => {\n    const val = getter()\n    return val !== undefined && val !== null\n  }, opts)\n\n  return getter() as NonNullable<ReturnType<FUNCTION>>\n}\n","import {\n  isModelType,\n  isType,\n  types,\n  IAnyType,\n  IAnyModelType,\n} from 'mobx-state-tree'\n\n// Pluggable elements\nimport PluggableElementBase from './pluggableElementTypes/PluggableElementBase'\nimport RendererType from './pluggableElementTypes/renderers/RendererType'\nimport AdapterType from './pluggableElementTypes/AdapterType'\nimport TrackType from './pluggableElementTypes/TrackType'\nimport DisplayType from './pluggableElementTypes/DisplayType'\nimport ViewType from './pluggableElementTypes/ViewType'\nimport WidgetType from './pluggableElementTypes/WidgetType'\nimport ConnectionType from './pluggableElementTypes/ConnectionType'\nimport RpcMethodType from './pluggableElementTypes/RpcMethodType'\nimport InternetAccountType from './pluggableElementTypes/InternetAccountType'\nimport TextSearchAdapterType from './pluggableElementTypes/TextSearchAdapterType'\nimport AddTrackWorkflowType from './pluggableElementTypes/AddTrackWorkflowType'\n\nimport {\n  ConfigurationSchema,\n  isBareConfigurationSchemaType,\n} from './configuration'\n\nimport Plugin from './Plugin'\nimport ReExports from './ReExports'\n\nimport {\n  PluggableElementType,\n  PluggableElementMember,\n} from './pluggableElementTypes'\nimport { AbstractRootModel } from './util'\nimport CorePlugin from './CorePlugin'\nimport createJexlInstance from './util/jexl'\nimport { PluginDefinition } from './PluginLoader'\n\n/** little helper class that keeps groups of callbacks that are\nthen run in a specified order by group */\nclass PhasedScheduler<PhaseName extends string> {\n  phaseCallbacks = new Map<PhaseName, Function[]>()\n\n  phaseOrder: PhaseName[] = []\n\n  constructor(...phaseOrder: PhaseName[]) {\n    this.phaseOrder = phaseOrder\n  }\n\n  add(phase: PhaseName, callback: Function) {\n    if (!this.phaseOrder.includes(phase)) {\n      throw new Error(`unknown phase ${phase}`)\n    }\n    let phaseCallbacks = this.phaseCallbacks.get(phase)\n    if (!phaseCallbacks) {\n      phaseCallbacks = []\n      this.phaseCallbacks.set(phase, phaseCallbacks)\n    }\n    phaseCallbacks.push(callback)\n  }\n\n  run() {\n    this.phaseOrder.forEach(phaseName => {\n      this.phaseCallbacks.get(phaseName)?.forEach(callback => callback())\n    })\n  }\n}\n\ntype PluggableElementTypeGroup =\n  | 'renderer'\n  | 'adapter'\n  | 'display'\n  | 'track'\n  | 'connection'\n  | 'view'\n  | 'widget'\n  | 'rpc method'\n  | 'internet account'\n  | 'text search adapter'\n  | 'add track workflow'\n\n/** internal class that holds the info for a certain element type */\nclass TypeRecord<ElementClass extends PluggableElementBase> {\n  registeredTypes: { [name: string]: ElementClass } = {}\n\n  constructor(\n    public typeName: string,\n    public baseClass: // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | { new (...args: any[]): ElementClass }\n      // covers abstract class case\n      | (Function & {\n          prototype: ElementClass\n        }),\n  ) {}\n\n  add(name: string, t: ElementClass) {\n    this.registeredTypes[name] = t\n  }\n\n  has(name: string) {\n    return name in this.registeredTypes\n  }\n\n  get(name: string) {\n    if (!this.has(name)) {\n      throw new Error(\n        `${this.typeName} '${name}' not found, perhaps its plugin is not loaded or its plugin has not added it.`,\n      )\n    }\n    return this.registeredTypes[name]\n  }\n\n  all() {\n    return Object.values(this.registeredTypes)\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnyFunction = (...args: any) => any\n\n/**\n * free-form string-to-unknown mapping of metadata related to the instance\n * of this plugin. `isCore` is typically set to `Boolean(true)` if the plugin was\n * loaded as part of the \"core\" set of plugins for this application.\n * Can also use this metadata to stash other things about why the plugin is\n * loaded, such as where it came from, what plugin depends on it, etc.\n */\nexport type PluginMetadata = Record<string, unknown>\n\nexport interface PluginLoadRecord {\n  metadata?: PluginMetadata\n  plugin: Plugin\n}\nexport interface RuntimePluginLoadRecord extends PluginLoadRecord {\n  definition: PluginDefinition\n}\n\nexport default class PluginManager {\n  plugins: Plugin[] = []\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  jexl: any = createJexlInstance()\n\n  pluginMetadata: Record<string, PluginMetadata> = {}\n\n  runtimePluginDefinitions: PluginDefinition[] = []\n\n  elementCreationSchedule = new PhasedScheduler<PluggableElementTypeGroup>(\n    'renderer',\n    'adapter',\n    'text search adapter',\n    'display',\n    'track',\n    'connection',\n    'view',\n    'widget',\n    'rpc method',\n    'internet account',\n    'add track workflow',\n  ) as PhasedScheduler<PluggableElementTypeGroup> | undefined\n\n  rendererTypes = new TypeRecord('RendererType', RendererType)\n\n  adapterTypes = new TypeRecord('AdapterType', AdapterType)\n\n  textSearchAdapterTypes = new TypeRecord(\n    'TextSearchAdapterType',\n    TextSearchAdapterType,\n  )\n\n  trackTypes = new TypeRecord('TrackType', TrackType)\n\n  displayTypes = new TypeRecord('DisplayType', DisplayType)\n\n  connectionTypes = new TypeRecord('ConnectionType', ConnectionType)\n\n  viewTypes = new TypeRecord('ViewType', ViewType)\n\n  widgetTypes = new TypeRecord('WidgetType', WidgetType)\n\n  rpcMethods = new TypeRecord('RpcMethodType', RpcMethodType)\n\n  addTrackWidgets = new TypeRecord('AddTrackWorkflow', AddTrackWorkflowType)\n\n  internetAccountTypes = new TypeRecord(\n    'InternetAccountType',\n    InternetAccountType,\n  )\n\n  configured = false\n\n  rootModel?: AbstractRootModel\n\n  extensionPoints: Map<string, Function[]> = new Map()\n\n  constructor(initialPlugins: (Plugin | PluginLoadRecord)[] = []) {\n    // add the core plugin\n    this.addPlugin({ plugin: new CorePlugin(), metadata: { isCore: true } })\n\n    // add all the initial plugins\n    initialPlugins.forEach(plugin => {\n      this.addPlugin(plugin)\n    })\n  }\n\n  pluginConfigurationSchemas() {\n    const configurationSchemas: { [key: string]: unknown } = {}\n    this.plugins.forEach(plugin => {\n      if (plugin.configurationSchema) {\n        configurationSchemas[plugin.name] = plugin.configurationSchema\n      }\n    })\n    return configurationSchemas\n  }\n\n  addPlugin(load: Plugin | PluginLoadRecord | RuntimePluginLoadRecord) {\n    if (this.configured) {\n      throw new Error('JBrowse already configured, cannot add plugins')\n    }\n    const [plugin, metadata = {}] =\n      load instanceof Plugin ? [load, {}] : [load.plugin, load.metadata]\n\n    if (this.plugins.includes(plugin)) {\n      throw new Error('plugin already installed')\n    }\n\n    this.pluginMetadata[plugin.name] = metadata\n    if ('definition' in load) {\n      this.runtimePluginDefinitions.push(load.definition)\n    }\n    plugin.install(this)\n    this.plugins.push(plugin)\n    return this\n  }\n\n  getPlugin(name: string) {\n    return this.plugins.find(p => p.name === name)\n  }\n\n  hasPlugin(name: string) {\n    return this.getPlugin(name) !== undefined\n  }\n\n  createPluggableElements() {\n    // run the creation callbacks for each element type in order.\n    // see elementCreationSchedule above for the creation order\n    if (this.elementCreationSchedule) {\n      this.elementCreationSchedule.run()\n      delete this.elementCreationSchedule\n    }\n    return this\n  }\n\n  setRootModel(rootModel: AbstractRootModel) {\n    this.rootModel = rootModel\n  }\n\n  configure() {\n    if (this.configured) {\n      throw new Error('already configured')\n    }\n\n    this.plugins.forEach(plugin => plugin.configure(this))\n\n    this.configured = true\n\n    // console.log(JSON.stringify(getSnapshot(model)))\n\n    return this\n  }\n\n  getElementTypeRecord(\n    groupName: PluggableElementTypeGroup,\n  ): TypeRecord<PluggableElementBase> {\n    switch (groupName) {\n      case 'adapter':\n        return this.adapterTypes\n      case 'text search adapter':\n        return this.textSearchAdapterTypes\n      case 'connection':\n        return this.connectionTypes\n      case 'widget':\n        return this.widgetTypes\n      case 'renderer':\n        return this.rendererTypes\n      case 'display':\n        return this.displayTypes\n      case 'track':\n        return this.trackTypes\n      case 'view':\n        return this.viewTypes\n      case 'rpc method':\n        return this.rpcMethods\n      case 'internet account':\n        return this.internetAccountTypes\n      case 'add track workflow':\n        return this.addTrackWidgets\n      default:\n        throw new Error(`invalid element type '${groupName}'`)\n    }\n  }\n\n  addElementType(\n    groupName: PluggableElementTypeGroup,\n    creationCallback: (pluginManager: PluginManager) => PluggableElementType,\n  ) {\n    if (typeof creationCallback !== 'function') {\n      throw new Error(\n        'must provide a callback function that returns the new type object',\n      )\n    }\n    const typeRecord = this.getElementTypeRecord(groupName)\n\n    this.elementCreationSchedule?.add(groupName, () => {\n      const newElement = creationCallback(this)\n      if (!newElement.name) {\n        throw new Error(`cannot add a ${groupName} with no name`)\n      }\n\n      if (typeRecord.has(newElement.name)) {\n        throw new Error(\n          `${groupName} ${newElement.name} already registered, cannot register it again`,\n        )\n      }\n\n      typeRecord.add(\n        newElement.name,\n        this.evaluateExtensionPoint(\n          'Core-extendPluggableElement',\n          newElement,\n        ) as PluggableElementType,\n      )\n    })\n\n    return this\n  }\n\n  getElementType(groupName: PluggableElementTypeGroup, typeName: string) {\n    return this.getElementTypeRecord(groupName).get(typeName)\n  }\n\n  getElementTypesInGroup(groupName: PluggableElementTypeGroup) {\n    return this.getElementTypeRecord(groupName).all()\n  }\n\n  /** get a MST type for the union of all specified pluggable MST types */\n  pluggableMstType(\n    groupName: PluggableElementTypeGroup,\n    fieldName: PluggableElementMember,\n    fallback: IAnyType = types.maybe(types.null),\n  ) {\n    const pluggableTypes = this.getElementTypeRecord(groupName)\n      .all()\n      // @ts-ignore\n      .map(t => t[fieldName])\n      .filter(t => isType(t) && isModelType(t)) as IAnyType[]\n\n    // try to smooth over the case when no types are registered, mostly\n    // encountered in tests\n    if (pluggableTypes.length === 0) {\n      console.warn(\n        `No pluggable types found matching ('${groupName}','${fieldName}')`,\n      )\n      return fallback\n    }\n    return types.union(...pluggableTypes)\n  }\n\n  /** get a MST type for the union of all specified pluggable config schemas */\n  pluggableConfigSchemaType(\n    typeGroup: PluggableElementTypeGroup,\n    fieldName: PluggableElementMember = 'configSchema',\n  ) {\n    const pluggableTypes = this.getElementTypeRecord(typeGroup)\n      .all()\n      // @ts-ignore\n      .map(t => t[fieldName])\n      .filter(t => isBareConfigurationSchemaType(t)) as IAnyType[]\n\n    if (pluggableTypes.length === 0) {\n      pluggableTypes.push(ConfigurationSchema('Null', {}))\n    }\n    return types.union(...pluggableTypes) as IAnyModelType\n  }\n\n  jbrequireCache = new Map()\n\n  lib = ReExports\n\n  load = <FTYPE extends AnyFunction>(lib: FTYPE): ReturnType<FTYPE> => {\n    if (!this.jbrequireCache.has(lib)) {\n      this.jbrequireCache.set(lib, lib(this))\n    }\n    return this.jbrequireCache.get(lib)\n  }\n\n  /**\n   * Get the re-exported version of the given package name.\n   * Throws an error if the package is not re-exported by the plugin manager.\n   *\n   * @returns the library's default export\n   */\n  jbrequire = (\n    lib: keyof typeof ReExports | AnyFunction | { default: AnyFunction },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any => {\n    if (typeof lib === 'string') {\n      const pack = this.lib[lib]\n      if (!pack) {\n        throw new TypeError(\n          `No jbrequire re-export defined for package '${lib}'. If this package must be shared between plugins, add it to ReExports.js. If it does not need to be shared, just import it normally.`,\n        )\n      }\n      return pack\n    }\n\n    if (typeof lib === 'function') {\n      return this.load(lib)\n    }\n\n    if (lib.default) {\n      return this.jbrequire(lib.default)\n    }\n\n    throw new TypeError(\n      'lib passed to jbrequire must be either a string or a function',\n    )\n  }\n\n  getRendererType(typeName: string): RendererType {\n    return this.rendererTypes.get(typeName)\n  }\n\n  getRendererTypes(): RendererType[] {\n    return this.rendererTypes.all()\n  }\n\n  getAdapterType(typeName: string): AdapterType {\n    return this.adapterTypes.get(typeName)\n  }\n\n  getTextSearchAdapterType(typeName: string): TextSearchAdapterType {\n    return this.textSearchAdapterTypes.get(typeName)\n  }\n\n  getTrackType(typeName: string): TrackType {\n    return this.trackTypes.get(typeName)\n  }\n\n  getDisplayType(typeName: string): DisplayType {\n    return this.displayTypes.get(typeName)\n  }\n\n  getViewType(typeName: string): ViewType {\n    return this.viewTypes.get(typeName)\n  }\n\n  getAddTrackWorkflow(typeName: string): AddTrackWorkflowType {\n    return this.addTrackWidgets.get(typeName)\n  }\n\n  getWidgetType(typeName: string): WidgetType {\n    return this.widgetTypes.get(typeName)\n  }\n\n  getConnectionType(typeName: string): ConnectionType {\n    return this.connectionTypes.get(typeName)\n  }\n\n  getRpcMethodType(methodName: string): RpcMethodType {\n    return this.rpcMethods.get(methodName)\n  }\n\n  getInternetAccountType(name: string): InternetAccountType {\n    return this.internetAccountTypes.get(name)\n  }\n\n  addRendererType(cb: (pm: PluginManager) => RendererType) {\n    return this.addElementType('renderer', cb)\n  }\n\n  addAdapterType(cb: (pm: PluginManager) => AdapterType) {\n    return this.addElementType('adapter', cb)\n  }\n\n  addTextSearchAdapterType(cb: (pm: PluginManager) => TextSearchAdapterType) {\n    return this.addElementType('text search adapter', cb)\n  }\n\n  addTrackType(cb: (pm: PluginManager) => TrackType) {\n    // Goes through the already-created displays and registers the ones that\n    // specify this track type\n    const callback = () => {\n      const track = cb(this)\n      const displays = this.getElementTypesInGroup('display') as DisplayType[]\n      displays.forEach(display => {\n        // track may have already added the displayType in its cb\n        if (\n          display.trackType === track.name &&\n          !track.displayTypes.includes(display)\n        ) {\n          track.addDisplayType(display)\n        }\n      })\n      return track\n    }\n    return this.addElementType('track', callback)\n  }\n\n  addDisplayType(cb: (pluginManager: PluginManager) => DisplayType) {\n    return this.addElementType('display', cb)\n  }\n\n  addViewType(cb: (pluginManager: PluginManager) => ViewType) {\n    const callback = () => {\n      const newView = cb(this)\n      const displays = this.getElementTypesInGroup('display') as DisplayType[]\n      displays.forEach(display => {\n        // view may have already added the displayType in its callback\n        if (\n          display.viewType === newView.name &&\n          !newView.displayTypes.includes(display)\n        ) {\n          newView.addDisplayType(display)\n        }\n      })\n      return newView\n    }\n    return this.addElementType('view', callback)\n  }\n\n  addWidgetType(cb: (pm: PluginManager) => WidgetType) {\n    return this.addElementType('widget', cb)\n  }\n\n  addConnectionType(cb: (pm: PluginManager) => ConnectionType) {\n    return this.addElementType('connection', cb)\n  }\n\n  addRpcMethod(cb: (pm: PluginManager) => RpcMethodType) {\n    return this.addElementType('rpc method', cb)\n  }\n\n  addInternetAccountType(cb: (pm: PluginManager) => InternetAccountType) {\n    return this.addElementType('internet account', cb)\n  }\n\n  addAddTrackWorkflowType(cb: (pm: PluginManager) => AddTrackWorkflowType) {\n    return this.addElementType('add track workflow', cb)\n  }\n\n  addToExtensionPoint<T>(\n    extensionPointName: string,\n    callback: (extendee: T) => T,\n  ) {\n    let callbacks = this.extensionPoints.get(extensionPointName)\n    if (!callbacks) {\n      callbacks = []\n      this.extensionPoints.set(extensionPointName, callbacks)\n    }\n    callbacks.push(callback)\n  }\n\n  evaluateExtensionPoint(extensionPointName: string, extendee: unknown) {\n    const callbacks = this.extensionPoints.get(extensionPointName)\n    let accumulator = extendee\n    if (callbacks) {\n      for (const callback of callbacks) {\n        try {\n          accumulator = callback(accumulator)\n        } catch (error) {\n          console.error(error)\n        }\n      }\n    }\n    return accumulator\n  }\n\n  async evaluateAsyncExtensionPoint(\n    extensionPointName: string,\n    extendee: unknown,\n  ) {\n    const callbacks = this.extensionPoints.get(extensionPointName)\n    let accumulator = extendee\n    if (callbacks) {\n      for (const callback of callbacks) {\n        try {\n          accumulator = await callback(accumulator)\n        } catch (error) {\n          console.error(error)\n        }\n      }\n    }\n    return accumulator\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { readConfObject } from '../configuration'\nimport { isElectron } from '../util'\n\ninterface AnalyticsObj {\n  [key: string]: any\n}\n\ninterface Track {\n  [key: string]: any\n}\n\nexport async function writeAWSAnalytics(\n  rootModel: any,\n  initialTimeStamp: number,\n  sessionQuery?: string | null,\n) {\n  try {\n    const url = 'https://analytics.jbrowse.org/api/v1'\n\n    const multiAssemblyTracks = rootModel.jbrowse.tracks.filter(\n      (track: any) => (readConfObject(track, 'assemblyNames') || []).length > 1,\n    ).length\n\n    const savedSessionCount = Object.keys(localStorage).filter(name =>\n      name.includes('localSaved-'),\n    ).length\n\n    const { jbrowse: config, session, version: ver } = rootModel\n    const { tracks, assemblies, plugins } = config\n\n    // stats to be recorded in db\n    const stats: AnalyticsObj = {\n      ver,\n      'plugins-count': plugins?.length || 0,\n      'plugin-names': plugins?.map((p: any) => p.name).join(','),\n      'assemblies-count': assemblies.length,\n      'tracks-count': tracks.length,\n      'session-tracks-count': session?.sessionTracks.length || 0,\n      'open-views': session?.views.length || 0,\n      'synteny-tracks-count': multiAssemblyTracks,\n      'saved-sessions-count': savedSessionCount,\n\n      // field if existing session param in query before autogenerated param\n      'existing-session-param-type': sessionQuery?.split('-')[0] || 'none',\n\n      // screen geometry\n      'scn-h': window.screen.height,\n      'scn-w': window.screen.width,\n\n      // window geometry\n      'win-h': window.innerHeight,\n      'win-w': window.innerWidth,\n\n      electron: isElectron,\n      loadTime: (Date.now() - initialTimeStamp) / 1000,\n      jb2: true,\n    }\n\n    // stringifies the track type counts, gets processed in lambda\n    tracks.forEach((track: Track) => {\n      const key = `track-types-${track.type}`\n      stats[key] = stats[key] + 1 || 1\n    })\n\n    // stringifies the session track type counts, gets processed in lambda\n    session?.sessionTracks.forEach((track: Track) => {\n      const key = `sessionTrack-types-${track.type}`\n      stats[key] = stats[key] + 1 || 1\n    })\n\n    // put stats into a query string for get request\n    const qs = Object.keys(stats)\n      .map(key => `${key}=${stats[key]}`)\n      .join('&')\n\n    await fetch(`${url}?${qs}`)\n  } catch (e) {\n    console.error('Failed to write analytics to AWS.', e)\n  }\n}\n\nexport async function writeGAAnalytics(\n  rootModel: any,\n  initialTimestamp: number,\n) {\n  const jbrowseUser = 'UA-7115575-5'\n  const stats: AnalyticsObj = {\n    'tracks-count': rootModel.jbrowse.tracks.length, // this is all possible tracks\n    ver: rootModel.version,\n    electron: isElectron,\n    loadTime: Date.now() - initialTimestamp,\n    pluginNames:\n      rootModel.jbrowse.plugins?.map((plugin: any) => plugin.name) || '',\n  }\n\n  // create script\n  let analyticsScript =\n    \"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\"\n  analyticsScript +=\n    '(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),'\n  analyticsScript +=\n    'm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)'\n  analyticsScript +=\n    \"})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\"\n  analyticsScript += `ga('create', '${jbrowseUser}', 'auto', 'jbrowseTracker');`\n\n  const gaData: AnalyticsObj = {}\n  const googleDimensions = 'tracks-count ver electron loadTime pluginNames'\n\n  googleDimensions.split(/\\s+/).forEach((key, index) => {\n    gaData[`dimension${index + 1}`] = stats[key]\n  })\n\n  gaData.metric1 = Math.round(stats.loadTime)\n\n  analyticsScript += `ga('jbrowseTracker.send', 'pageview',${JSON.stringify(\n    gaData,\n  )});`\n\n  const analyticsScriptNode = document.createElement('script')\n  analyticsScriptNode.innerHTML = analyticsScript\n\n  document.getElementsByTagName('head')[0].appendChild(analyticsScriptNode)\n}\n\nexport function doAnalytics(\n  rootModel: any,\n  initialTimestamp: number,\n  initialSessionQuery: string | null | undefined,\n) {\n  if (\n    rootModel &&\n    !readConfObject(rootModel.jbrowse.configuration, 'disableAnalytics')\n  ) {\n    writeAWSAnalytics(rootModel, initialTimestamp, initialSessionQuery)\n    writeGAAnalytics(rootModel, initialTimestamp)\n  }\n}\n","import { lazy } from 'react'\nimport ConnectionType from '@jbrowse/core/pluggableElementTypes/ConnectionType'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport {\n  configSchema as ucscConfigSchema,\n  modelFactory as ucscModelFactory,\n} from './ucsc-trackhub'\nimport {\n  stateModelFactory as AddTrackStateModelFactory,\n  configSchema as AddTrackConfigSchema,\n} from './AddTrackWidget'\nimport { AddTrackModel } from './AddTrackWidget/model'\nimport {\n  stateModel as AddConnectionStateModel,\n  configSchema as AddConnectionConfigSchema,\n} from './AddConnectionWidget'\nimport {\n  stateModelFactory as HierarchicalTrackSelectorStateModelFactory,\n  configSchema as HierarchicalTrackSelectorConfigSchema,\n  HierarchicalTrackSelectorModel,\n} from './HierarchicalTrackSelectorWidget'\nimport {\n  stateModelFactory as PluginStoreStateModelFactory,\n  configSchema as PluginStoreConfigSchema,\n} from './PluginStoreWidget'\n\nconst SetDefaultSession = lazy(() => import('./SetDefaultSession'))\n\nconst AssemblyManager = lazy(() => import('./AssemblyManager'))\n\nexport default class extends Plugin {\n  name = 'DataManagementPlugin'\n\n  exports = {\n    AssemblyManager,\n    SetDefaultSession,\n  }\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addConnectionType(\n      () =>\n        new ConnectionType({\n          name: 'UCSCTrackHubConnection',\n          configSchema: ucscConfigSchema,\n          stateModel: ucscModelFactory(pluginManager),\n          displayName: 'UCSC Track Hub',\n          description: 'A track or assembly hub in the Track Hub format',\n          url: '//genome.ucsc.edu/goldenPath/help/hgTrackHubHelp.html#Intro',\n        }),\n    )\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'HierarchicalTrackSelectorWidget',\n        heading: 'Available tracks',\n        configSchema: HierarchicalTrackSelectorConfigSchema,\n        stateModel: HierarchicalTrackSelectorStateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () =>\n            import(\n              './HierarchicalTrackSelectorWidget/components/HierarchicalTrackSelector'\n            ),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'AddTrackWidget',\n        heading: 'Add a track',\n        configSchema: AddTrackConfigSchema,\n        stateModel: AddTrackStateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () => import('./AddTrackWidget/components/AddTrackWidget'),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'AddConnectionWidget',\n        heading: 'Add a connection',\n        configSchema: AddConnectionConfigSchema,\n        stateModel: AddConnectionStateModel,\n        ReactComponent: lazy(\n          () => import('./AddConnectionWidget/components/AddConnectionWidget'),\n        ),\n      })\n    })\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'PluginStoreWidget',\n        heading: 'Plugin store',\n        configSchema: PluginStoreConfigSchema,\n        stateModel: PluginStoreStateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () => import('./PluginStoreWidget/components/PluginStoreWidget'),\n        ),\n      })\n    })\n  }\n\n  configure(_pluginManager: PluginManager) {}\n}\n\nexport { AssemblyManager, SetDefaultSession }\nexport type { HierarchicalTrackSelectorModel, AddTrackModel }\n","import Alignments from '@jbrowse/plugin-alignments'\nimport Authentication from '@jbrowse/plugin-authentication'\nimport Bed from '@jbrowse/plugin-bed'\nimport BreakpointSplitView from '@jbrowse/plugin-breakpoint-split-view'\nimport CircularView from '@jbrowse/plugin-circular-view'\nimport Config from '@jbrowse/plugin-config'\nimport ComparativeAdapters from '@jbrowse/plugin-comparative-adapters'\nimport DataManagement from '@jbrowse/plugin-data-management'\nimport DotplotView from '@jbrowse/plugin-dotplot-view'\nimport GtfPlugin from '@jbrowse/plugin-gtf'\nimport Gff3 from '@jbrowse/plugin-gff3'\nimport LegacyJBrowse from '@jbrowse/plugin-legacy-jbrowse'\nimport LinearGenomeView from '@jbrowse/plugin-linear-genome-view'\nimport LinearComparativeView from '@jbrowse/plugin-linear-comparative-view'\nimport Lollipop from '@jbrowse/plugin-lollipop'\nimport Arc from '@jbrowse/plugin-arc'\nimport Menus from '@jbrowse/plugin-menus'\nimport RDF from '@jbrowse/plugin-rdf'\nimport Sequence from '@jbrowse/plugin-sequence'\nimport SVG from '@jbrowse/plugin-svg'\nimport TrackHubRegistry from '@jbrowse/plugin-trackhub-registry'\nimport Variants from '@jbrowse/plugin-variants'\nimport Wiggle from '@jbrowse/plugin-wiggle'\nimport SpreadsheetViewPlugin from '@jbrowse/plugin-spreadsheet-view'\nimport SvInspectorPlugin from '@jbrowse/plugin-sv-inspector'\nimport HicPlugin from '@jbrowse/plugin-hic'\nimport TrixPlugin from '@jbrowse/plugin-trix'\nimport GridBookmarkPlugin from '@jbrowse/plugin-grid-bookmark'\n\nconst corePlugins = [\n  SVG,\n  LinearGenomeView,\n  Alignments,\n  Authentication,\n  Bed,\n  CircularView,\n  Config,\n  DataManagement,\n  DotplotView,\n  GtfPlugin,\n  Gff3,\n  LegacyJBrowse,\n  LinearComparativeView,\n  Lollipop,\n  Arc,\n  Menus,\n  RDF,\n  Sequence,\n  TrackHubRegistry,\n  Variants,\n  Wiggle,\n  SpreadsheetViewPlugin,\n  SvInspectorPlugin,\n  BreakpointSplitView,\n  HicPlugin,\n  TrixPlugin,\n  GridBookmarkPlugin,\n  ComparativeAdapters,\n]\n\nexport default corePlugins\n","import {\n  getPropertyMembers,\n  getChildType,\n  isArrayType,\n  isModelType,\n  isReferenceType,\n  isValidReference,\n  isMapType,\n  types,\n  IAnyType,\n  IAnyStateTreeNode,\n  Instance,\n} from 'mobx-state-tree'\n\n/**\n * Pad the end of a base64 string with \"=\" to make it valid\n * @param b64 - unpadded b64 string\n */\nexport function b64PadSuffix(b64: string): string {\n  let num = 0\n  const mo = b64.length % 4\n  switch (mo) {\n    case 3:\n      num = 1\n      break\n    case 2:\n      num = 2\n      break\n    case 0:\n      num = 0\n      break\n    default:\n      throw new Error('base64 not a valid length')\n  }\n  return b64 + '='.repeat(num)\n}\n\n/**\n * Decode and inflate a url-safe base64 to a string\n * See {@link https://en.wikipedia.org/wiki/Base64#URL_applications}\n * @param b64 - a base64 string to decode and inflate\n */\nexport async function fromUrlSafeB64(b64: string) {\n  const originalB64 = b64PadSuffix(b64.replace(/-/g, '+').replace(/_/g, '/'))\n  const { toByteArray } = await import('base64-js')\n  const { inflate } = await import('pako')\n  const bytes = toByteArray(originalB64)\n  const inflated = inflate(bytes)\n  return new TextDecoder().decode(inflated)\n}\n\n/**\n * Compress and encode a string as url-safe base64\n * See {@link https://en.wikipedia.org/wiki/Base64#URL_applications}\n * @param str-  a string to compress and encode\n */\nexport async function toUrlSafeB64(str: string) {\n  const bytes = new TextEncoder().encode(str)\n  const { deflate } = await import('pako')\n  const { fromByteArray } = await import('base64-js')\n  const deflated = deflate(bytes)\n  const encoded = fromByteArray(deflated)\n  const pos = encoded.indexOf('=')\n  return pos > 0\n    ? encoded.slice(0, pos).replace(/\\+/g, '-').replace(/\\//g, '_')\n    : encoded.replace(/\\+/g, '-').replace(/\\//g, '_')\n}\n\ntype MSTArray = Instance<ReturnType<typeof types.array>>\ntype MSTMap = Instance<ReturnType<typeof types.map>>\n\n// attempts to remove undefined references from the given MST model. can only actually\n// remove them from arrays and maps. throws MST undefined ref error if it encounters\n// undefined refs in model properties\nexport function filterSessionInPlace(node: IAnyStateTreeNode, type: IAnyType) {\n  // makes it work with session sharing\n  if (node === undefined) {\n    return\n  }\n  if (isArrayType(type)) {\n    const array = node as MSTArray\n    const childType = getChildType(node)\n    if (isReferenceType(childType)) {\n      // filter array elements\n      for (let i = 0; i < array.length; ) {\n        if (!isValidReference(() => array[i])) {\n          array.splice(i, 1)\n        } else {\n          i += 1\n        }\n      }\n    }\n    array.forEach(el => {\n      filterSessionInPlace(el, childType)\n    })\n  } else if (isMapType(type)) {\n    const map = node as MSTMap\n    const childType = getChildType(map)\n    if (isReferenceType(childType)) {\n      // filter the map members\n      for (const key in map.keys()) {\n        if (!isValidReference(() => map.get(key))) {\n          map.delete(key)\n        }\n      }\n    }\n    map.forEach(child => {\n      filterSessionInPlace(child, childType)\n    })\n  } else if (isModelType(type)) {\n    // iterate over children\n    const { properties } = getPropertyMembers(node)\n\n    Object.entries(properties).forEach(([pname, ptype]) => {\n      // @ts-ignore\n      filterSessionInPlace(node[pname], ptype)\n    })\n  }\n}\n","import { toUrlSafeB64 } from './util'\n\n// from https://stackoverflow.com/questions/1349404/\nfunction generateUID(length: number) {\n  return window\n    .btoa(\n      Array.from(window.crypto.getRandomValues(new Uint8Array(length * 2)))\n        .map(b => String.fromCharCode(b))\n        .join(''),\n    )\n    .replace(/[+/]/g, '')\n    .substring(0, length)\n}\n\nconst encrypt = async (text: string, password: string) => {\n  const AES = await import('crypto-js/aes')\n  return AES.encrypt(text, password).toString()\n}\n\nconst decrypt = async (text: string, password: string) => {\n  const AES = await import('crypto-js/aes')\n  const Utf8 = await import('crypto-js/enc-utf8')\n  const bytes = AES.decrypt(text, password)\n  return bytes.toString(Utf8)\n}\n\nfunction getErrorMsg(err: string) {\n  try {\n    const obj = JSON.parse(err)\n    return obj.message\n  } catch (e) {\n    return err\n  }\n}\n// writes the encrypted session, current datetime, and referer to DynamoDB\nexport async function shareSessionToDynamo(\n  session: unknown,\n  url: string,\n  referer: string,\n) {\n  const sess = await toUrlSafeB64(JSON.stringify(session))\n  const password = generateUID(5)\n  const encryptedSession = await encrypt(sess, password)\n\n  const data = new FormData()\n  data.append('session', encryptedSession)\n  data.append('dateShared', `${Date.now()}`)\n  data.append('referer', referer)\n\n  const response = await fetch(`${url}share`, {\n    method: 'POST',\n    mode: 'cors',\n    body: data,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n  const json = await response.json()\n  return {\n    json,\n    encryptedSession,\n    password,\n  }\n}\n\nexport async function readSessionFromDynamo(\n  baseUrl: string,\n  sessionQueryParam: string,\n  password: string,\n  signal?: AbortSignal,\n) {\n  const sessionId = sessionQueryParam.split('share-')[1]\n  const url = `${baseUrl}?sessionId=${sessionId}`\n  const response = await fetch(url, {\n    signal,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n\n  const json = await response.json()\n  return decrypt(json.session, password)\n}\n","import React, { useState, useEffect } from 'react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { observer } from 'mobx-react'\nimport copy from 'copy-to-clipboard'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  IconButton,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n} from '@mui/material'\n\nimport { alpha } from '@mui/material/styles'\nimport { makeStyles } from 'tss-react/mui'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\n\n// icons\nimport ShareIcon from '@mui/icons-material/Share'\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline'\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\n\n// locals\nimport { toUrlSafeB64 } from './util'\nimport { shareSessionToDynamo } from './sessionSharing'\n\nconst useStyles = makeStyles()(theme => ({\n  shareDiv: {\n    textAlign: 'center',\n    paddingLeft: '2px',\n  },\n  shareButton: {\n    backgroundColor: alpha(\n      theme.palette.primary.contrastText,\n      theme.palette.action.hoverOpacity,\n    ),\n    '&:hover': {\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n  loadingMessage: {\n    padding: theme.spacing(5),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\nconst SHARE_URL_LOCALSTORAGE_KEY = 'jbrowse-shareURL'\n\nfunction SettingsDialog(props: {\n  open: boolean\n  onClose: Function\n  currentSetting: string\n}) {\n  const { classes } = useStyles()\n  const { onClose, open, currentSetting } = props\n  const [setting, setSetting] = useState(currentSetting)\n  const [infoDialogOpen, setInfoDialogOpen] = useState(false)\n\n  const handleClose = () => {\n    localStorage.setItem(SHARE_URL_LOCALSTORAGE_KEY, setting)\n    onClose(setting)\n  }\n\n  return (\n    <>\n      <Dialog onClose={handleClose} open={open}>\n        <DialogTitle>\n          Configure session sharing\n          {handleClose ? (\n            <IconButton className={classes.closeButton} onClick={handleClose}>\n              <CloseIcon />\n            </IconButton>\n          ) : null}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Select between generating long or short URLs for the session sharing\n            <IconButton onClick={() => setInfoDialogOpen(true)}>\n              <HelpOutlineIcon />\n            </IconButton>\n          </DialogContentText>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              value={setting}\n              onChange={event => {\n                const val = event.target.value\n                setSetting(val)\n              }}\n            >\n              <FormControlLabel\n                value=\"short\"\n                control={<Radio />}\n                label=\"Short URL\"\n              />\n              <FormControlLabel\n                value=\"long\"\n                control={<Radio />}\n                label=\"Long URL\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n      </Dialog>\n      <InfoDialog\n        open={infoDialogOpen}\n        onClose={() => {\n          setInfoDialogOpen(false)\n        }}\n      />\n    </>\n  )\n}\nfunction InfoDialog(props: { open: boolean; onClose: Function }) {\n  const { classes } = useStyles()\n  const { onClose, open } = props\n\n  const handleClose = () => {\n    onClose()\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle id=\"simple-dialog-title\">\n        Info about session URLs\n        {onClose ? (\n          <IconButton className={classes.closeButton} onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Because everything about the JBrowse session is encoded in the URL\n          (e.g. state of the tracks, views, features selected, etc.) the\n          sessions can get very long. Therefore, we created a URL shortener,\n          both as a convenience and because long URLs can break some programs.\n          Note that both the long and short URLs encode the same data, but due\n          to long URLs causing problems with some programs, we recommend sharing\n          short URLs.\n        </DialogContentText>\n        <DialogContentText>\n          We generate the short URLs in a secure manner which involves\n          encrypting the session on the client side with a random password\n          string and uploading them to a central database. Then the random\n          password is added to the URL but is not uploaded to the central\n          database, making these short URLs effectively &quot;end-to-end\n          encrypted&quot;\n        </DialogContentText>\n        <DialogContentText>\n          Only users with a share link can read the session.\n        </DialogContentText>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst ShareDialog = observer(\n  ({\n    handleClose,\n    session,\n  }: {\n    handleClose: () => void\n    session: AbstractSessionModel & { shareURL: string }\n  }) => {\n    const { classes } = useStyles()\n    const [shortUrl, setShortUrl] = useState('')\n    const [longUrl, setLongUrl] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState<unknown>()\n    const [settingsDialogOpen, setSettingsDialogOpen] = useState(false)\n\n    const url = session.shareURL\n    const currentSetting =\n      localStorage.getItem(SHARE_URL_LOCALSTORAGE_KEY) || 'short'\n    const snap = getSnapshot(session)\n\n    useEffect(() => {\n      let cancelled = false\n      ;(async () => {\n        if (currentSetting === 'short') {\n          try {\n            setLoading(true)\n            const locationUrl = new URL(window.location.href)\n            const result = await shareSessionToDynamo(\n              snap,\n              url,\n              locationUrl.href,\n            )\n            if (!cancelled) {\n              const params = new URLSearchParams(locationUrl.search)\n              params.set('session', `share-${result.json.sessionId}`)\n              params.set('password', result.password)\n              locationUrl.search = params.toString()\n              setShortUrl(locationUrl.href)\n            }\n          } catch (e) {\n            setError(e)\n          } finally {\n            setLoading(false)\n          }\n        }\n      })()\n\n      return () => {\n        cancelled = true\n      }\n    }, [currentSetting, url, snap])\n\n    useEffect(() => {\n      let cancelled = false\n      ;(async () => {\n        try {\n          // generate long URL\n          const sess = await toUrlSafeB64(JSON.stringify(getSnapshot(session)))\n          const longUrl = new URL(window.location.href)\n          const longParams = new URLSearchParams(longUrl.search)\n          longParams.set('session', `encoded-${sess}`)\n          longUrl.search = longParams.toString()\n          if (!cancelled) {\n            setLongUrl(longUrl.toString())\n          }\n        } catch (e) {\n          setError(e)\n        }\n      })()\n      return () => {\n        cancelled = true\n      }\n    }, [session])\n\n    return (\n      <>\n        <Dialog\n          maxWidth=\"xl\"\n          open\n          onClose={handleClose}\n          data-testid=\"share-dialog\"\n        >\n          <DialogTitle>\n            JBrowse Shareable Link\n            {handleClose ? (\n              <IconButton className={classes.closeButton} onClick={handleClose}>\n                <CloseIcon />\n              </IconButton>\n            ) : null}\n          </DialogTitle>\n          <Divider />\n\n          <DialogContent>\n            <DialogContentText>\n              Copy the URL below to share your current JBrowse session.\n              <IconButton onClick={() => setSettingsDialogOpen(true)}>\n                <SettingsIcon />\n              </IconButton>\n            </DialogContentText>\n\n            {currentSetting === 'short' ? (\n              error ? (\n                <Typography color=\"error\">{`${error}`}</Typography>\n              ) : loading ? (\n                <Typography>Generating short URL...</Typography>\n              ) : (\n                <TextField\n                  label=\"URL\"\n                  value={shortUrl}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  inputProps={{ 'data-testid': 'share-url-text' }}\n                  variant=\"filled\"\n                  style={{ width: '100%' }}\n                  onClick={event => {\n                    const target = event.target as HTMLTextAreaElement\n                    target.select()\n                  }}\n                  data-testid=\"share-url-field\"\n                />\n              )\n            ) : (\n              <TextField\n                label=\"URL\"\n                value={longUrl}\n                InputProps={{\n                  readOnly: true,\n                }}\n                variant=\"filled\"\n                style={{ width: '100%' }}\n                onClick={event => {\n                  const target = event.target as HTMLTextAreaElement\n                  target.select()\n                }}\n              />\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                copy(shortUrl || longUrl.toString())\n                session.notify('Copied to clipboard', 'success')\n              }}\n              color=\"primary\"\n              startIcon={<ContentCopyIcon />}\n              disabled={currentSetting === 'short' && loading}\n            >\n              Copy URL to Clipboard\n            </Button>\n\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <SettingsDialog\n          open={settingsDialogOpen}\n          onClose={() => {\n            setSettingsDialogOpen(false)\n          }}\n          currentSetting={currentSetting}\n        />\n      </>\n    )\n  },\n)\n\nconst ShareButton = observer(\n  (props: { session: AbstractSessionModel & { shareURL: string } }) => {\n    const [open, setOpen] = useState(false)\n\n    const { session } = props\n    const { classes } = useStyles()\n\n    const handleClose = () => {\n      setOpen(false)\n    }\n\n    return (\n      <div className={classes.shareDiv}>\n        <Button\n          data-testid=\"share_button\"\n          onClick={async () => setOpen(true)}\n          size=\"small\"\n          color=\"inherit\"\n          startIcon={<ShareIcon />}\n          classes={{ root: classes.shareButton }}\n        >\n          Share\n        </Button>\n        {open ? (\n          <ShareDialog handleClose={handleClose} session={session} />\n        ) : null}\n      </div>\n    )\n  },\n)\n\nexport default ShareButton\n","import React from 'react'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport { AppRootModel } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport {\n  AssemblyManager,\n  SetDefaultSession,\n} from '@jbrowse/plugin-data-management'\n\nfunction AdminComponent({ pluginManager }: { pluginManager: PluginManager }) {\n  const { rootModel } = pluginManager\n\n  const {\n    isAssemblyEditing,\n    isDefaultSessionEditing,\n    setDefaultSessionEditing,\n    setAssemblyEditing,\n  } = rootModel as AppRootModel\n\n  return (\n    <>\n      {isAssemblyEditing ? (\n        <AssemblyManager\n          rootModel={rootModel}\n          onClose={() => setAssemblyEditing(false)}\n        />\n      ) : null}\n      {isDefaultSessionEditing ? (\n        <SetDefaultSession\n          rootModel={rootModel}\n          onClose={() => setDefaultSessionEditing(false)}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default observer(AdminComponent)\n","import React, { useEffect } from 'react'\nimport { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport { useQueryParam, StringParam } from 'use-query-params'\nimport { CssBaseline } from '@mui/material'\nimport { ThemeProvider } from '@mui/material/styles'\n\n// core\nimport { getConf } from '@jbrowse/core/configuration'\nimport { App, createJBrowseTheme } from '@jbrowse/core/ui'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\n// locals\nimport ShareButton from './ShareButton'\nimport AdminComponent from './AdminComponent'\nimport { SessionModel } from './sessionModelFactory'\n\nimport './JBrowse.css'\n\nconst JBrowse = observer(\n  ({ pluginManager }: { pluginManager: PluginManager }) => {\n    const [adminKey] = useQueryParam('adminKey', StringParam)\n    const [adminServer] = useQueryParam('adminServer', StringParam)\n    const [configPath] = useQueryParam('config', StringParam)\n    const [, setSessionId] = useQueryParam('session', StringParam)\n    const { rootModel } = pluginManager\n    const { error, jbrowse } = rootModel || {}\n    const session = rootModel?.session as SessionModel\n    const currentSessionId = session.id\n\n    useEffect(() => {\n      setSessionId(`local-${currentSessionId}`)\n      // @ts-ignore\n      window.JBrowseRootModel = rootModel\n      // @ts-ignore\n      window.JBrowseSession = session\n    }, [currentSessionId, rootModel, session, setSessionId])\n\n    useEffect(() => {\n      if (!jbrowse) {\n        return\n      }\n      onSnapshot(jbrowse, async snapshot => {\n        if (adminKey) {\n          const response = await fetch(adminServer || `/updateConfig`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              adminKey,\n              configPath,\n              config: snapshot,\n            }),\n          })\n          if (!response.ok) {\n            const message = await response.text()\n            if (session) {\n              session.notify(\n                `Admin server error: ${response.status} (${\n                  response.statusText\n                }) ${message || ''}`,\n              )\n            }\n          }\n        }\n      })\n    }, [jbrowse, session, adminKey, adminServer, configPath])\n\n    if (error) {\n      throw error\n    }\n    if (!rootModel) {\n      throw new Error('No rootModel found')\n    }\n    if (!session) {\n      throw new Error('No session found')\n    }\n\n    const theme = getConf(rootModel.jbrowse, 'theme')\n    return (\n      <ThemeProvider theme={createJBrowseTheme(theme)}>\n        <CssBaseline />\n        <App\n          session={session}\n          HeaderButtons={<ShareButton session={session} />}\n        />\n        {adminKey ? <AdminComponent pluginManager={pluginManager} /> : null}\n      </ThemeProvider>\n    )\n  },\n)\n\nexport default JBrowse\n","// this is in a separate module here so it can be mocked out by jest. the\n// import.meta.url is not well recognized by jest and we use MainThreadRpc in\n// tests anyways right now\n//\n// note: this uses webpack 5 native worker modules\n//\n// see https://github.com/cmdcolin/cra-webpack5-web-worker-example for simple example\n// and docs https://webpack.js.org/guides/web-workers/\n//\n// also note: the craco config for webpack publicPath: 'auto' is needed for\n// these workers\nexport default function makeWorkerInstance() {\n  return new Worker(new URL('./rpc.worker.ts', import.meta.url))\n}\n","import jsonStableStringify from 'json-stable-stringify'\nimport { getParent, types, Instance, IAnyType } from 'mobx-state-tree'\nimport AbortablePromiseCache from 'abortable-promise-cache'\n\n// locals\nimport { getConf, AnyConfigurationModel } from '../configuration'\nimport {\n  BaseRefNameAliasAdapter,\n  RegionsAdapter,\n} from '../data_adapters/BaseAdapter'\nimport PluginManager from '../PluginManager'\nimport { makeAbortableReaction, when, Region, Feature } from '../util'\nimport QuickLRU from '../util/QuickLRU'\n\nconst refNameRegex = new RegExp(\n  '[0-9A-Za-z!#$%&+./:;?@^_|~-][0-9A-Za-z!#$%&*+./:;=?@^_|~-]*',\n)\n\n// Based on the UCSC Genome Browser chromosome color palette:\n// https://github.com/ucscGenomeBrowser/kent/blob/a50ed53aff81d6fb3e34e6913ce18578292bc24e/src/hg/inc/chromColors.h\n// Some colors darkened to have at least a 3:1 contrast ratio on a white\n// background\nconst refNameColors = [\n  'rgb(153, 102, 0)',\n  'rgb(102, 102, 0)',\n  'rgb(153, 153, 30)',\n  'rgb(204, 0, 0)',\n  'rgb(255, 0, 0)',\n  'rgb(255, 0, 204)',\n  'rgb(165, 132, 132)', // originally 'rgb(255, 204, 204)'\n  'rgb(204, 122, 0)', // originally rgb(255, 153, 0)'\n  'rgb(178, 142, 0)', // originally 'rgb(255, 204, 0)'\n  'rgb(153, 153, 0)', // originally 'rgb(255, 255, 0)'\n  'rgb(122, 153, 0)', // originally 'rgb(204, 255, 0)'\n  'rgb(0, 165, 0)', // originally 'rgb(0, 255, 0)'\n  'rgb(53, 128, 0)',\n  'rgb(0, 0, 204)',\n  'rgb(96, 145, 242)', // originally 'rgb(102, 153, 255)'\n  'rgb(107, 142, 178)', // originally 'rgb(153, 204, 255)'\n  'rgb(0, 165, 165)', // originally 'rgb(0, 255, 255)'\n  'rgb(122, 153, 153)', // originally 'rgb(204, 255, 255)'\n  'rgb(153, 0, 204)',\n  'rgb(204, 51, 255)',\n  'rgb(173, 130, 216)', // originally 'rgb(204, 153, 255)'\n  'rgb(102, 102, 102)',\n  'rgb(145, 145, 145)', // originally 'rgb(153, 153, 153)'\n  'rgb(142, 142, 142)', // originally 'rgb(204, 204, 204)'\n  'rgb(142, 142, 107)', // originally 'rgb(204, 204, 153)'\n  'rgb(96, 163, 48)', // originally 'rgb(121, 204, 61)'\n]\n\nasync function loadRefNameMap(\n  assembly: Assembly,\n  adapterConfig: unknown,\n  options: BaseOptions,\n  signal?: AbortSignal,\n) {\n  const { sessionId } = options\n  await when(() => Boolean(assembly.regions && assembly.refNameAliases), {\n    signal,\n    name: 'when assembly ready',\n  })\n\n  const refNames = (await assembly.rpcManager.call(\n    sessionId,\n    'CoreGetRefNames',\n    {\n      adapterConfig,\n      signal,\n      ...options,\n    },\n    { timeout: 1000000 },\n  )) as string[]\n\n  const { refNameAliases } = assembly\n  if (!refNameAliases) {\n    throw new Error(`error loading assembly ${assembly.name}'s refNameAliases`)\n  }\n\n  const refNameMap = Object.fromEntries(\n    refNames.map(name => {\n      checkRefName(name)\n      return [assembly.getCanonicalRefName(name), name]\n    }),\n  )\n\n  // make the reversed map too\n  const reversed = Object.fromEntries(\n    Object.entries(refNameMap).map(([canonicalName, adapterName]) => [\n      adapterName,\n      canonicalName,\n    ]),\n  )\n\n  return {\n    forwardMap: refNameMap,\n    reverseMap: reversed,\n  }\n}\n\n// Valid refName pattern from https://samtools.github.io/hts-specs/SAMv1.pdf\nfunction checkRefName(refName: string) {\n  if (!refName.match(refNameRegex)) {\n    throw new Error(`Encountered invalid refName: \"${refName}\"`)\n  }\n}\n\nfunction getAdapterId(adapterConf: unknown) {\n  return jsonStableStringify(adapterConf)\n}\n\ntype RefNameAliases = Record<string, string>\n\nexport interface BaseOptions {\n  signal?: AbortSignal\n  sessionId: string\n  statusCallback?: Function\n}\ninterface CacheData {\n  adapterConf: unknown\n  self: Assembly\n  sessionId: string\n  options: BaseOptions\n}\n\nexport interface BasicRegion {\n  start: number\n  end: number\n  refName: string\n  assemblyName: string\n}\nexport default function assemblyFactory(\n  assemblyConfigType: IAnyType,\n  pluginManager: PluginManager,\n) {\n  const adapterLoads = new AbortablePromiseCache<\n    CacheData,\n    {\n      forwardMap: { [key: string]: string }\n      reverseMap: { [key: string]: string }\n    }\n  >({\n    cache: new QuickLRU({ maxSize: 1000 }),\n    async fill(\n      args: CacheData,\n      signal?: AbortSignal,\n      statusCallback?: Function,\n    ) {\n      const { adapterConf, self, options } = args\n      return loadRefNameMap(\n        self,\n        adapterConf,\n        { ...options, statusCallback },\n        signal,\n      )\n    },\n  })\n\n  return types\n    .model({\n      configuration: types.safeReference(assemblyConfigType),\n    })\n    .volatile(() => ({\n      error: undefined as Error | undefined,\n      regions: undefined as BasicRegion[] | undefined,\n      refNameAliases: undefined as RefNameAliases | undefined,\n      lowerCaseRefNameAliases: undefined as RefNameAliases | undefined,\n      cytobands: undefined as Feature[] | undefined,\n    }))\n    .views(self => ({\n      get initialized() {\n        return !!self.refNameAliases\n      },\n      get name(): string {\n        return getConf(self, 'name')\n      },\n\n      get aliases(): string[] {\n        return getConf(self, 'aliases')\n      },\n\n      get displayName(): string | undefined {\n        return getConf(self, 'displayName')\n      },\n\n      hasName(name: string) {\n        return this.allAliases.includes(name)\n      },\n\n      get allAliases() {\n        return [this.name, ...this.aliases]\n      },\n      get refNames() {\n        return self.regions?.map(region => region.refName)\n      },\n\n      // note: lowerCaseRefNameAliases not included here: this allows the list\n      // of refnames to be just the \"normal casing\", but things like\n      // getCanonicalRefName can resolve a lower-case name if needed\n      get allRefNames() {\n        return !self.refNameAliases\n          ? undefined\n          : Object.keys(self.refNameAliases)\n      },\n\n      get lowerCaseRefNames() {\n        return !self.lowerCaseRefNameAliases\n          ? undefined\n          : Object.keys(self.lowerCaseRefNameAliases || {})\n      },\n\n      get allRefNamesWithLowerCase() {\n        return this.allRefNames && this.lowerCaseRefNames\n          ? [...new Set([...this.allRefNames, ...this.lowerCaseRefNames])]\n          : undefined\n      },\n      get rpcManager() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return getParent<any>(self, 2).rpcManager\n      },\n      get refNameColors() {\n        const colors: string[] = getConf(self, 'refNameColors')\n        return colors.length === 0 ? refNameColors : colors\n      },\n    }))\n    .views(self => ({\n      getCanonicalRefName(refName: string) {\n        if (!self.refNameAliases || !self.lowerCaseRefNameAliases) {\n          throw new Error(\n            'aliases not loaded, we expect them to be loaded before getCanonicalRefName can be called',\n          )\n        }\n        return (\n          self.refNameAliases[refName] || self.lowerCaseRefNameAliases[refName]\n        )\n      },\n      getRefNameColor(refName: string) {\n        const idx = self.refNames?.findIndex(r => r === refName)\n        if (idx === undefined || idx === -1) {\n          return undefined\n        }\n        return self.refNameColors[idx % self.refNameColors.length]\n      },\n      isValidRefName(refName: string) {\n        if (!self.refNameAliases) {\n          throw new Error(\n            'isValidRefName cannot be called yet, the assembly has not finished loading',\n          )\n        }\n        return !!this.getCanonicalRefName(refName)\n      },\n    }))\n    .actions(self => ({\n      setLoading() {},\n      setLoaded({\n        adapterRegionsWithAssembly,\n        refNameAliases,\n        lowerCaseRefNameAliases,\n        cytobands,\n      }: {\n        adapterRegionsWithAssembly: Region[]\n        refNameAliases: RefNameAliases\n        lowerCaseRefNameAliases: RefNameAliases\n        cytobands: Feature[]\n      }) {\n        this.setRegions(adapterRegionsWithAssembly)\n        this.setRefNameAliases(refNameAliases, lowerCaseRefNameAliases)\n        this.setCytobands(cytobands)\n      },\n      setError(e: Error) {\n        console.error(e)\n        self.error = e\n      },\n      setRegions(regions: Region[]) {\n        self.regions = regions\n      },\n      setRefNameAliases(\n        refNameAliases: RefNameAliases,\n        lowerCaseRefNameAliases: RefNameAliases,\n      ) {\n        self.refNameAliases = refNameAliases\n        self.lowerCaseRefNameAliases = lowerCaseRefNameAliases\n      },\n      setCytobands(cytobands: Feature[]) {\n        self.cytobands = cytobands\n      },\n      afterAttach() {\n        makeAbortableReaction(\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          self as any,\n          // @ts-ignore\n          makeLoadAssemblyData(pluginManager),\n          loadAssemblyReaction,\n          { name: `${self.name} assembly loading`, fireImmediately: true },\n          this.setLoading,\n          this.setLoaded,\n          this.setError,\n        )\n      },\n    }))\n    .views(self => ({\n      getAdapterMapEntry(adapterConf: unknown, options: BaseOptions) {\n        const { signal, statusCallback, ...rest } = options\n        if (!options.sessionId) {\n          throw new Error('sessionId is required')\n        }\n        const adapterId = getAdapterId(adapterConf)\n        return adapterLoads.get(\n          adapterId,\n          {\n            adapterConf,\n            self: self as Assembly,\n            options: rest,\n          } as CacheData,\n\n          // signal intentionally not passed here, fixes issues like #2221.\n          // alternative fix #2540 was proposed but non-working currently\n          undefined,\n          statusCallback,\n        )\n      },\n\n      /**\n       * get Map of `canonical-name -> adapter-specific-name`\n       */\n      async getRefNameMapForAdapter(adapterConf: unknown, opts: BaseOptions) {\n        if (!opts || !opts.sessionId) {\n          throw new Error('sessionId is required')\n        }\n        const map = await this.getAdapterMapEntry(adapterConf, opts)\n        return map.forwardMap\n      },\n\n      /**\n       * get Map of `adapter-specific-name -> canonical-name`\n       */\n      async getReverseRefNameMapForAdapter(\n        adapterConf: unknown,\n        opts: BaseOptions,\n      ) {\n        const map = await this.getAdapterMapEntry(adapterConf, opts)\n        return map.reverseMap\n      },\n    }))\n}\n\nfunction makeLoadAssemblyData(pluginManager: PluginManager) {\n  return (self: Assembly) => {\n    if (self.configuration) {\n      // use full configuration instead of snapshot of the config, the\n      // rpcManager normally receives a snapshot but we bypass rpcManager here\n      // to avoid spinning up a webworker\n      const { sequence, refNameAliases, cytobands } = self.configuration\n      const sequenceAdapterConfig = sequence.adapter\n      const refNameAliasesAdapterConfig = refNameAliases?.adapter\n      const cytobandAdapterConfig = cytobands?.adapter\n      return {\n        sequenceAdapterConfig,\n        assemblyName: self.name,\n        refNameAliasesAdapterConfig,\n        cytobandAdapterConfig,\n        pluginManager,\n      }\n    }\n    return undefined\n  }\n}\nasync function loadAssemblyReaction(\n  props: ReturnType<ReturnType<typeof makeLoadAssemblyData>> | undefined,\n  signal: AbortSignal,\n) {\n  if (!props) {\n    return\n  }\n\n  const {\n    sequenceAdapterConfig,\n    assemblyName,\n    refNameAliasesAdapterConfig,\n    cytobandAdapterConfig,\n    pluginManager,\n  } = props\n\n  const adapterRegions = await getAssemblyRegions(\n    sequenceAdapterConfig,\n    pluginManager,\n    signal,\n  )\n  const adapterRegionsWithAssembly = adapterRegions.map(adapterRegion => {\n    checkRefName(adapterRegion.refName)\n    return { ...adapterRegion, assemblyName }\n  })\n  const refNameAliases: RefNameAliases = {}\n\n  const aliases = await getRefNameAliases(\n    refNameAliasesAdapterConfig,\n    pluginManager,\n    signal,\n  )\n  const cytobands = await getCytobands(cytobandAdapterConfig, pluginManager)\n  aliases.forEach(({ refName, aliases }) => {\n    aliases.forEach(alias => {\n      checkRefName(alias)\n      refNameAliases[alias] = refName\n    })\n  })\n  // add identity to the refNameAliases list\n  adapterRegionsWithAssembly.forEach(region => {\n    refNameAliases[region.refName] = region.refName\n  })\n\n  const lowerCaseRefNameAliases = Object.fromEntries(\n    Object.entries(refNameAliases).map(([key, val]) => [\n      key.toLowerCase(),\n      val,\n    ]),\n  )\n\n  return {\n    adapterRegionsWithAssembly,\n    refNameAliases,\n    lowerCaseRefNameAliases,\n    cytobands,\n  }\n}\n\nasync function getRefNameAliases(\n  config: AnyConfigurationModel,\n  pluginManager: PluginManager,\n  signal?: AbortSignal,\n) {\n  const type = pluginManager.getAdapterType(config.type)\n  const CLASS = await type.getAdapterClass?.()\n  const adapter = new CLASS(\n    config,\n    undefined,\n    pluginManager,\n  ) as BaseRefNameAliasAdapter\n  return adapter.getRefNameAliases({\n    signal,\n  })\n}\n\nasync function getCytobands(\n  config: AnyConfigurationModel,\n  pluginManager: PluginManager,\n) {\n  const type = pluginManager.getAdapterType(config.type)\n  const CLASS = await type.getAdapterClass()\n  const adapter = new CLASS(config, undefined, pluginManager)\n\n  // @ts-ignore\n  return adapter.getData()\n}\n\nasync function getAssemblyRegions(\n  config: AnyConfigurationModel,\n  pluginManager: PluginManager,\n  signal?: AbortSignal,\n) {\n  const type = pluginManager.getAdapterType(config.type)\n  const CLASS = await type.getAdapterClass()\n  const adapter = new CLASS(config, undefined, pluginManager) as RegionsAdapter\n  return adapter.getRegions({ signal })\n}\n\nexport type AssemblyModel = ReturnType<typeof assemblyFactory>\nexport type Assembly = Instance<AssemblyModel>\n","import { reaction } from 'mobx'\nimport {\n  addDisposer,\n  cast,\n  getParent,\n  types,\n  Instance,\n  IAnyType,\n} from 'mobx-state-tree'\nimport { when } from '../util'\nimport { readConfObject } from '../configuration'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\n\nimport assemblyFactory from './assembly'\nimport PluginManager from '../PluginManager'\n\nexport default function assemblyManagerFactory(\n  assemblyConfigType: IAnyType,\n  pluginManager: PluginManager,\n) {\n  const Assembly = assemblyFactory(assemblyConfigType, pluginManager)\n  return types\n    .model({\n      assemblies: types.array(Assembly),\n    })\n    .views(self => ({\n      get(assemblyName: string) {\n        return self.assemblies.find(assembly => assembly.hasName(assemblyName))\n      },\n\n      get assemblyNamesList() {\n        return this.assemblyList.map(asm => asm.name)\n      },\n\n      get assemblyList() {\n        // name is the explicit identifier and can be accessed without getConf,\n        // hence the union with {name:string}\n        const {\n          jbrowse: { assemblies },\n          session: { sessionAssemblies = [] } = {},\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        } = getParent<any>(self)\n        return [\n          ...assemblies,\n          ...sessionAssemblies,\n        ] as (AnyConfigurationModel & { name: string })[]\n      },\n\n      get rpcManager() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return getParent<any>(self).rpcManager\n      },\n      get pluginManager() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return getParent<any>(self).pluginManager\n      },\n      get allPossibleRefNames() {\n        let refNames: string[] = []\n        for (const assembly of self.assemblies) {\n          if (!assembly.allRefNames) {\n            return undefined\n          }\n          refNames = refNames.concat(assembly.allRefNames)\n        }\n        return refNames\n      },\n    }))\n    .views(self => ({\n      // use this method instead of assemblyManager.get(assemblyName)\n      // get an assembly with regions loaded\n      async waitForAssembly(assemblyName: string) {\n        if (!assemblyName) {\n          throw new Error('no assembly name supplied to waitForAssembly')\n        }\n        let assembly = self.get(assemblyName)\n        if (!assembly) {\n          try {\n            await when(() => Boolean(self.get(assemblyName)), { timeout: 1000 })\n            assembly = self.get(assemblyName)\n          } catch (e) {\n            // ignore\n          }\n        }\n        if (!assembly) {\n          return undefined\n        }\n        await when(\n          () =>\n            Boolean(assembly?.regions && assembly.refNameAliases) ||\n            !!assembly?.error,\n        )\n        if (assembly.error) {\n          throw assembly.error\n        }\n        return assembly\n      },\n\n      async getRefNameMapForAdapter(\n        adapterConf: unknown,\n        assemblyName: string | undefined,\n        opts: { signal?: AbortSignal; sessionId: string },\n      ) {\n        if (assemblyName) {\n          const asm = await this.waitForAssembly(assemblyName)\n          return asm?.getRefNameMapForAdapter(adapterConf, opts)\n        }\n        return {}\n      },\n      async getReverseRefNameMapForAdapter(\n        adapterConf: unknown,\n        assemblyName: string | undefined,\n        opts: { signal?: AbortSignal; sessionId: string },\n      ) {\n        if (assemblyName) {\n          const asm = await this.waitForAssembly(assemblyName)\n          return asm?.getReverseRefNameMapForAdapter(adapterConf, opts)\n        }\n        return {}\n      },\n      isValidRefName(refName: string, assemblyName?: string) {\n        if (assemblyName) {\n          const assembly = self.get(assemblyName)\n          if (assembly) {\n            return assembly.isValidRefName(refName)\n          }\n          throw new Error(\n            `isValidRefName for ${assemblyName} failed, assembly does not exist`,\n          )\n        }\n        if (!self.allPossibleRefNames) {\n          throw new Error(\n            `isValidRefName not available, assemblyManager has not yet finished loading. If you are looking for a refname in a specific assembly, pass assembly argument`,\n          )\n        }\n        return self.allPossibleRefNames.includes(refName)\n      },\n    }))\n    .actions(self => ({\n      removeAssembly(asm: Instance<typeof Assembly>) {\n        self.assemblies.remove(asm)\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          reaction(\n            // have to slice it to be properly reacted to\n            () => self.assemblyList,\n            assemblyConfigs => {\n              self.assemblies.forEach(asm => {\n                if (!asm.configuration) {\n                  this.removeAssembly(asm)\n                }\n              })\n              assemblyConfigs.forEach(assemblyConfig => {\n                const existingAssemblyIdx = self.assemblies.findIndex(\n                  assembly =>\n                    assembly.name === readConfObject(assemblyConfig, 'name'),\n                )\n                if (existingAssemblyIdx === -1) {\n                  this.addAssembly(assemblyConfig)\n                }\n              })\n            },\n            { fireImmediately: true, name: 'assemblyManagerAfterAttach' },\n          ),\n        )\n      },\n\n      // this can take an active instance of an assembly, in which case it is\n      // referred to, or it can take an identifier e.g. assembly name, which is\n      // used as a reference. snapshots cannot be used\n      addAssembly(\n        assemblyConfig: Instance<typeof assemblyConfigType> | string,\n      ) {\n        self.assemblies.push({ configuration: assemblyConfig })\n      },\n\n      replaceAssembly(\n        idx: number,\n        assemblyConfig: Instance<typeof assemblyConfigType> | string,\n      ) {\n        self.assemblies[idx] = cast({\n          configuration: assemblyConfig,\n        })\n      },\n    }))\n}\n","import { ConfigurationSchema } from '../configuration'\nimport PluginManager from '../PluginManager'\n\nexport default (pluginManager: PluginManager) => {\n  return ConfigurationSchema(\n    'BaseAssembly',\n    {\n      aliases: {\n        type: 'stringArray',\n        defaultValue: [],\n        description: 'Other possible names for the assembly',\n      },\n      sequence: pluginManager.getTrackType('ReferenceSequenceTrack')\n        .configSchema,\n\n      refNameColors: {\n        type: 'stringArray',\n        defaultValue: [],\n        description:\n          'Define custom colors for each reference sequence. Will cycle through this list if there are not enough colors for every sequence.',\n      },\n      refNameAliases: ConfigurationSchema(\n        'RefNameAliases',\n        {\n          adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n        },\n        {\n          preProcessSnapshot: snap => {\n            // allow refNameAliases to be unspecified\n            // @ts-ignore\n            if (!snap.adapter) {\n              return { adapter: { type: 'RefNameAliasAdapter' } }\n            }\n            return snap\n          },\n        },\n      ),\n      cytobands: ConfigurationSchema(\n        'Cytoband',\n        {\n          adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n        },\n        {\n          preProcessSnapshot: snap => {\n            // allow cytoBand to be unspecified\n            // @ts-ignore\n            if (!snap.adapter) {\n              return { adapter: { type: 'CytobandAdapter' } }\n            }\n            return snap\n          },\n        },\n      ),\n      displayName: {\n        type: 'string',\n        defaultValue: '',\n        description:\n          'A human readable display name for the assembly e.g. \"Homo sapiens (hg38)\" while the assembly name may just be \"hg38\"',\n      },\n    },\n    {\n      explicitIdentifier: 'name',\n    },\n  )\n}\n","import { types } from 'mobx-state-tree'\nimport { ConfigurationSchema } from '../configuration'\n\nconst BaseRpcDriverConfigSchema = ConfigurationSchema(\n  'BaseRpcDriver',\n  {\n    workerCount: {\n      type: 'number',\n      description:\n        'The number of workers to use. If 0 (the default) JBrowse will decide how many workers to use.',\n      defaultValue: 0,\n    },\n  },\n  { explicitlyTyped: true },\n)\nconst MainThreadRpcDriverConfigSchema = ConfigurationSchema(\n  'MainThreadRpcDriver',\n  {},\n  { explicitlyTyped: true, baseConfiguration: BaseRpcDriverConfigSchema },\n)\nconst WebWorkerRpcDriverConfigSchema = ConfigurationSchema(\n  'WebWorkerRpcDriver',\n  {},\n  { explicitlyTyped: true, baseConfiguration: BaseRpcDriverConfigSchema },\n)\n\nexport default ConfigurationSchema(\n  'RpcOptions',\n  {\n    defaultDriver: {\n      type: 'string',\n      description:\n        'the RPC driver to use for tracks and tasks that are not configured to use a specific RPC backend',\n      defaultValue: 'MainThreadRpcDriver',\n    },\n    drivers: types.optional(\n      types.map(\n        types.union(\n          MainThreadRpcDriverConfigSchema,\n          WebWorkerRpcDriverConfigSchema,\n        ),\n      ),\n      { MainThreadRpcDriver: { type: 'MainThreadRpcDriver' } },\n    ),\n  },\n  {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    actions: (self: any) => ({\n      addDriverConfig(configName: string, configSnapshot: { type: string }) {\n        self.drivers.set(configName, configSnapshot)\n      },\n    }),\n  },\n)\n","import { isAlive, isStateTreeNode } from 'mobx-state-tree'\nimport { clamp } from '../util'\nimport { serializeAbortSignal } from './remoteAbortSignals'\nimport PluginManager from '../PluginManager'\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\n\nexport interface WorkerHandle {\n  status?: string\n  error?: Error\n  on?: (channel: string, callback: (message: string) => void) => void\n  off?: (channel: string, callback: (message: string) => void) => void\n  destroy(): void\n  call(\n    functionName: string,\n    args?: unknown,\n    options?: {\n      statusCallback?(message: string): void\n      timeout?: number\n      rpcDriverClassName: string\n    },\n  ): Promise<unknown>\n}\n\nexport interface RpcDriverConstructorArgs {\n  config: AnyConfigurationModel\n}\n\nfunction isClonable(thing: unknown): boolean {\n  if (typeof thing === 'function') {\n    return false\n  }\n  if (thing instanceof Error) {\n    return false\n  }\n  return true\n}\n\n// watches the given worker object, returns a promise that will be rejected if\n// the worker times out\nexport async function watchWorker(\n  worker: WorkerHandle,\n  pingTime: number,\n  rpcDriverClassName: string,\n) {\n  // after first ping succeeds, apply wait for timeout\n  return new Promise((_resolve, reject) => {\n    function delay() {\n      setTimeout(async () => {\n        try {\n          await worker.call('ping', [], {\n            timeout: pingTime * 2,\n            rpcDriverClassName,\n          })\n          delay()\n        } catch (e) {\n          reject(e)\n        }\n      }, pingTime)\n    }\n    delay()\n  })\n}\n\nfunction detectHardwareConcurrency() {\n  const mainThread = typeof window !== 'undefined'\n  const canDetect = mainThread && 'hardwareConcurrency' in window.navigator\n  if (mainThread && canDetect) {\n    return window.navigator.hardwareConcurrency\n  }\n  return 1\n}\nclass LazyWorker {\n  workerP?: Promise<WorkerHandle> | undefined\n\n  constructor(public driver: BaseRpcDriver) {}\n\n  async getWorker() {\n    if (!this.workerP) {\n      this.workerP = this.driver\n        .makeWorker()\n        .then(worker => {\n          watchWorker(worker, this.driver.maxPingTime, this.driver.name).catch(\n            error => {\n              if (worker) {\n                console.error(\n                  'worker did not respond, killing and generating new one',\n                )\n                console.error(error)\n                worker.destroy()\n                worker.status = 'killed'\n                worker.error = error\n                this.workerP = undefined\n              }\n            },\n          )\n          return worker\n        })\n        .catch(e => {\n          this.workerP = undefined\n          throw e\n        })\n    }\n    return this.workerP\n  }\n}\n\nexport default abstract class BaseRpcDriver {\n  abstract name: string\n\n  private lastWorkerAssignment = -1\n\n  private workerAssignments = new Map<string, number>() // sessionId -> worker number\n\n  abstract makeWorker(): Promise<WorkerHandle>\n\n  private workerPool?: LazyWorker[]\n\n  maxPingTime = 30000\n\n  workerCheckFrequency = 5000\n\n  config: AnyConfigurationModel\n\n  constructor(args: RpcDriverConstructorArgs) {\n    this.config = args.config\n  }\n\n  // filter the given object and just remove any non-clonable things from it\n  filterArgs<THING_TYPE>(thing: THING_TYPE, sessionId: string): THING_TYPE {\n    if (Array.isArray(thing)) {\n      return thing\n        .filter(isClonable)\n        .map(t => this.filterArgs(t, sessionId)) as unknown as THING_TYPE\n    }\n    if (typeof thing === 'object' && thing !== null) {\n      // AbortSignals are specially handled\n      if (thing instanceof AbortSignal) {\n        return serializeAbortSignal(\n          thing,\n          this.remoteAbort.bind(this, sessionId),\n        ) as unknown as THING_TYPE\n      }\n\n      if (isStateTreeNode(thing) && !isAlive(thing)) {\n        throw new Error('dead state tree node passed to RPC call')\n      }\n\n      // special case, don't try to iterate the file's subelements as the\n      // object entries below would\n      if (thing instanceof File) {\n        return thing\n      }\n\n      return Object.fromEntries(\n        Object.entries(thing)\n          .filter(e => isClonable(e[1]))\n          .map(([k, v]) => [k, this.filterArgs(v, sessionId)]),\n      ) as THING_TYPE\n    }\n    return thing\n  }\n\n  async remoteAbort(sessionId: string, functionName: string, signalId: number) {\n    const worker = await this.getWorker(sessionId)\n    worker.call(\n      functionName,\n      { signalId },\n      { timeout: 1000000, rpcDriverClassName: this.name },\n    )\n  }\n\n  createWorkerPool(): LazyWorker[] {\n    const hardwareConcurrency = detectHardwareConcurrency()\n\n    const workerCount =\n      readConfObject(this.config, 'workerCount') ||\n      clamp(1, Math.max(1, hardwareConcurrency - 1), 5)\n\n    return [...new Array(workerCount)].map(() => new LazyWorker(this))\n  }\n\n  getWorkerPool() {\n    if (!this.workerPool) {\n      const res = this.createWorkerPool()\n      this.workerPool = res\n      return res // making this several steps makes TS happy\n    }\n    return this.workerPool\n  }\n\n  async getWorker(sessionId: string): Promise<WorkerHandle> {\n    const workers = this.getWorkerPool()\n    let workerNumber = this.workerAssignments.get(sessionId)\n    if (workerNumber === undefined) {\n      const workerAssignment = (this.lastWorkerAssignment + 1) % workers.length\n      this.workerAssignments.set(sessionId, workerAssignment)\n      this.lastWorkerAssignment = workerAssignment\n      workerNumber = workerAssignment\n    }\n\n    // console.log(`${sessionId} -> worker ${workerNumber}`)\n    const worker = workers[workerNumber].getWorker()\n    if (!worker) {\n      throw new Error('no web workers registered for RPC')\n    }\n    return worker\n  }\n\n  async call(\n    pluginManager: PluginManager,\n    sessionId: string,\n    functionName: string,\n    args: { statusCallback?: (message: string) => void },\n    options = {},\n  ) {\n    if (!sessionId) {\n      throw new TypeError('sessionId is required')\n    }\n    let done = false\n    const worker = await this.getWorker(sessionId)\n    const rpcMethod = pluginManager.getRpcMethodType(functionName)\n    const serializedArgs = await rpcMethod.serializeArguments(args, this.name)\n    const filteredAndSerializedArgs = this.filterArgs(serializedArgs, sessionId)\n\n    // now actually call the worker\n    const callP = worker\n      .call(functionName, filteredAndSerializedArgs, {\n        timeout: 5 * 60 * 1000, // 5 minutes\n        statusCallback: args.statusCallback,\n        rpcDriverClassName: this.name,\n        ...options,\n      })\n      .finally(() => {\n        done = true\n      })\n\n    // check every 5 seconds to see if the worker has been killed, and\n    // reject the killedP promise if it has\n    let killedCheckInterval: ReturnType<typeof setInterval>\n    const killedP = new Promise((resolve, reject) => {\n      killedCheckInterval = setInterval(() => {\n        // must've been killed\n        if (worker.status === 'killed') {\n          reject(\n            new Error(\n              `operation timed out, worker process stopped responding, ${worker.error}`,\n            ),\n          )\n        } else if (done) {\n          resolve(true)\n        }\n      }, this.workerCheckFrequency)\n    }).finally(() => {\n      clearInterval(killedCheckInterval)\n    })\n\n    // the result is a race between the actual result promise, and the \"killed\"\n    // promise. the killed promise will only actually win if the worker was\n    // killed before the call could return\n    const resultP = Promise.race([callP, killedP])\n    return rpcMethod.deserializeReturn(resultP, args, this.name)\n  }\n}\n","import Rpc from 'librpc-web-mod'\nimport shortid from 'shortid'\nimport BaseRpcDriver, { RpcDriverConstructorArgs } from './BaseRpcDriver'\nimport { PluginDefinition } from '../PluginLoader'\n\ninterface WebWorkerRpcDriverConstructorArgs extends RpcDriverConstructorArgs {\n  makeWorkerInstance: () => Worker\n}\n\nclass WebWorkerHandle extends Rpc.Client {\n  destroy(): void {\n    this.workers[0].terminate()\n  }\n\n  async call(\n    functionName: string,\n    args: Record<string, unknown>,\n    opts: {\n      statusCallback?: (arg0: string) => void\n      rpcDriverClassName: string\n    },\n  ) {\n    const { statusCallback, rpcDriverClassName } = opts\n    const channel = `message-${shortid.generate()}`\n    const listener = (message: string) => {\n      if (statusCallback) {\n        statusCallback(message)\n      }\n    }\n    this.on(channel, listener)\n    const result = await super.call(\n      functionName,\n      { ...args, channel, rpcDriverClassName },\n      opts,\n    )\n    this.off(channel, listener)\n    return result\n  }\n}\n\nexport default class WebWorkerRpcDriver extends BaseRpcDriver {\n  name = 'WebWorkerRpcDriver'\n\n  makeWorkerInstance: () => Worker\n\n  constructor(\n    args: WebWorkerRpcDriverConstructorArgs,\n    public workerBootConfiguration: { plugins: PluginDefinition[] },\n  ) {\n    super(args)\n    this.makeWorkerInstance = args.makeWorkerInstance\n  }\n\n  async makeWorker() {\n    // note that we are making a Rpc.Client connection with a worker pool of\n    // one for each worker, because we want to do our own state-group-aware\n    // load balancing rather than using librpc's builtin round-robin\n    const instance = this.makeWorkerInstance()\n\n    const worker = new WebWorkerHandle({ workers: [instance] })\n\n    // send the worker its boot configuration using info from the pluginManager\n    const p = new Promise((resolve: (w: WebWorkerHandle) => void, reject) => {\n      worker.workers[0].onmessage = e => {\n        if (e.data === 'ready') {\n          resolve(worker)\n        } else if (e.data === 'readyForConfig') {\n          worker.workers[0].postMessage(this.workerBootConfiguration)\n        } else {\n          reject()\n        }\n      }\n    })\n\n    return p\n  }\n}\n","import BaseRpcDriver, { RpcDriverConstructorArgs } from './BaseRpcDriver'\nimport PluginManager from '../PluginManager'\n\nclass DummyHandle {\n  destroy(): void {}\n\n  async call(\n    _functionName: string,\n    _filteredArgs?: {},\n    _options = {},\n  ): Promise<unknown> {\n    return undefined\n  }\n}\n\n/**\n * Stub RPC driver class that runs RPC functions in-band in the main thread.\n *\n * @param rpcFuncs - object containing runnable rpc functions\n */\nexport default class MainThreadRpcDriver extends BaseRpcDriver {\n  name = 'MainThreadRpcDriver'\n\n  makeWorker: () => Promise<DummyHandle>\n\n  constructor(args: RpcDriverConstructorArgs) {\n    super(args)\n    this.makeWorker = async (): Promise<DummyHandle> => new DummyHandle()\n  }\n\n  async call(\n    pluginManager: PluginManager,\n    sessionId: string,\n    functionName: string,\n    args: {},\n  ): Promise<unknown> {\n    if (!sessionId) {\n      throw new TypeError('sessionId is required')\n    }\n    const rpcMethod = pluginManager.getRpcMethodType(functionName)\n    const serializedArgs = await rpcMethod.serializeArguments(args, this.name)\n    const result = await rpcMethod.execute(serializedArgs, this.name)\n    return rpcMethod.deserializeReturn(result, args, this.name)\n  }\n}\n","import PluginManager from '../PluginManager'\nimport { readConfObject } from '../configuration'\n\nimport rpcConfigSchema from './configSchema'\nimport WebWorkerRpcDriver from './WebWorkerRpcDriver'\nimport MainThreadRpcDriver from './MainThreadRpcDriver'\nimport { AnyConfigurationModel } from '../configuration/configurationSchema'\n\ntype DriverClass = WebWorkerRpcDriver | MainThreadRpcDriver\ntype BackendConfigurations = {\n  WebWorkerRpcDriver?: Omit<\n    ConstructorParameters<typeof WebWorkerRpcDriver>[0],\n    'config'\n  >\n  MainThreadRpcDriver?: Omit<\n    ConstructorParameters<typeof MainThreadRpcDriver>[0],\n    'config'\n  >\n}\nconst DriverClasses = {\n  WebWorkerRpcDriver,\n  MainThreadRpcDriver,\n}\n\nexport default class RpcManager {\n  static configSchema = rpcConfigSchema\n\n  driverObjects: Map<string, DriverClass>\n\n  constructor(\n    public pluginManager: PluginManager,\n    public mainConfiguration: AnyConfigurationModel,\n    public backendConfigurations: BackendConfigurations,\n  ) {\n    if (!mainConfiguration) {\n      throw new Error('RpcManager requires at least a main configuration')\n    }\n    this.driverObjects = new Map()\n  }\n\n  getDriver(backendName: keyof typeof DriverClasses) {\n    const driver = this.driverObjects.get(backendName)\n    if (driver) {\n      return driver\n    }\n    let newDriver\n    const config = this.mainConfiguration.drivers.get('WebWorkerRpcDriver')\n    if (backendName === 'MainThreadRpcDriver') {\n      const backendConfiguration =\n        this.backendConfigurations.MainThreadRpcDriver\n\n      if (!backendConfiguration) {\n        throw new Error(\n          `requested RPC driver \"${backendName}\" is missing config`,\n        )\n      }\n      newDriver = new MainThreadRpcDriver({ ...backendConfiguration, config })\n    } else if (backendName === 'WebWorkerRpcDriver') {\n      const backendConfiguration = this.backendConfigurations.WebWorkerRpcDriver\n      if (!backendConfiguration) {\n        throw new Error(\n          `requested RPC driver \"${backendName}\" is missing config`,\n        )\n      }\n      newDriver = new WebWorkerRpcDriver(\n        { ...backendConfiguration, config },\n        { plugins: this.pluginManager.runtimePluginDefinitions },\n      )\n    } else {\n      throw new Error(`requested RPC driver \"${backendName}\" is not installed`)\n    }\n    this.driverObjects.set(backendName, newDriver)\n    return newDriver\n  }\n\n  async getDriverForCall(\n    _sessionId: string,\n    _functionName: string,\n    args: { rpcDriverName?: string },\n  ) {\n    const backendName =\n      args.rpcDriverName ||\n      readConfObject(this.mainConfiguration, 'defaultDriver')\n\n    return this.getDriver(backendName)\n  }\n\n  async call(sessionId: string, functionName: string, args: {}, opts = {}) {\n    if (!sessionId) {\n      throw new Error('sessionId is required')\n    }\n    const driverForCall = await this.getDriverForCall(\n      sessionId,\n      functionName,\n      args,\n    )\n    return driverForCall.call(\n      this.pluginManager,\n      sessionId,\n      functionName,\n      args,\n      opts,\n    )\n  }\n}\n","import BaseResult from './BaseResults'\nimport PluginManager from '../PluginManager'\nimport QuickLRU from '../util/QuickLRU'\nimport { SearchType, BaseTextSearchAdapter } from '../data_adapters/BaseAdapter'\nimport { readConfObject, AnyConfigurationModel } from '../configuration'\n\nexport interface BaseArgs {\n  queryString: string\n  searchType?: SearchType\n  signal?: AbortSignal\n  limit?: number\n  pageNumber?: number\n}\n\nexport interface SearchScope {\n  includeAggregateIndexes: boolean\n  assemblyName: string\n  tracks?: Array<string>\n}\n\nexport default class TextSearchManager {\n  adapterCache = new QuickLRU<string, BaseTextSearchAdapter>({\n    maxSize: 15,\n  })\n\n  constructor(public pluginManager: PluginManager) {}\n\n  loadTextSearchAdapters(searchScope: SearchScope) {\n    const pm = this.pluginManager\n    return this.relevantAdapters(searchScope).map(conf => {\n      const adapterId = readConfObject(conf, 'textSearchAdapterId')\n      const r = this.adapterCache.get(adapterId)\n      if (r) {\n        return r\n      } else {\n        const { AdapterClass } = pm.getTextSearchAdapterType(conf.type)\n        const a = new AdapterClass(conf, undefined, pm) as BaseTextSearchAdapter\n        this.adapterCache.set(adapterId, a)\n        return a\n      }\n    })\n  }\n\n  relevantAdapters(searchScope: SearchScope) {\n    const pm = this.pluginManager\n    const { aggregateTextSearchAdapters, tracks } = pm.rootModel?.jbrowse as {\n      tracks: AnyConfigurationModel[]\n      aggregateTextSearchAdapters: AnyConfigurationModel[]\n    }\n\n    const { assemblyName } = searchScope\n\n    return [\n      ...this.getAdaptersWithAssembly(\n        assemblyName,\n        aggregateTextSearchAdapters,\n      ),\n      ...this.getTrackAdaptersWithAssembly(assemblyName, tracks),\n    ]\n  }\n\n  getAdaptersWithAssembly(\n    assemblyName: string,\n    confs: AnyConfigurationModel[],\n  ): AnyConfigurationModel[] {\n    return confs.filter(c =>\n      readConfObject(c, 'assemblyNames')?.includes(assemblyName),\n    )\n  }\n\n  getTrackAdaptersWithAssembly(\n    assemblyName: string,\n    confs: AnyConfigurationModel[],\n  ) {\n    return confs\n      .filter(conf =>\n        readConfObject(conf, [\n          'textSearching',\n          'textSearchAdapter',\n          'assemblyNames',\n        ])?.includes(assemblyName),\n      )\n      .map(\n        conf => conf.textSearching.textSearchAdapter as AnyConfigurationModel,\n      )\n  }\n\n  /**\n   * Returns list of relevant results given a search query and options\n   * @param args - search options/arguments include: search query\n   * limit of results to return, searchType...prefix | full | exact\", etc.\n   */\n  async search(\n    args: BaseArgs,\n    searchScope: SearchScope,\n    rankFn: (results: BaseResult[]) => BaseResult[],\n  ) {\n    const adapters = this.loadTextSearchAdapters(searchScope)\n    const results = await Promise.all(adapters.map(a => a.searchIndex(args)))\n    return this.sortResults(results.flat(), rankFn)\n  }\n\n  /**\n   * Returns array of revelevant and sorted results\n   * @param results - array of results from all text search adapters\n   * @param rankFn - function that updates results scores\n   * based on more relevance\n   */\n  sortResults(\n    results: BaseResult[],\n    rankFn: (results: BaseResult[]) => BaseResult[],\n  ) {\n    return rankFn(\n      results.sort((a, b) => -b.getLabel().localeCompare(a.getLabel())),\n    ).sort((r1, r2) => r1.getScore() - r2.getScore())\n  }\n}\n","// adapted from https://github.com/mobxjs/mobx-state-tree/blob/master/packages/mst-middlewares/src/time-traveller.ts\nimport {\n  types,\n  resolvePath,\n  getEnv,\n  onSnapshot,\n  getSnapshot,\n  applySnapshot,\n  IDisposer,\n  IAnyStateTreeNode,\n} from 'mobx-state-tree'\n\nconst MAX_HISTORY_LENGTH = 20\n\nfunction debounce(func: (...args: unknown[]) => void, timeout = 300) {\n  let timer: ReturnType<typeof setTimeout>\n  return (...args: unknown[]) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => func(...args), timeout)\n  }\n}\n\nconst TimeTraveller = types\n  .model('TimeTraveller', {\n    undoIdx: -1,\n    targetPath: '',\n  })\n  .volatile(() => ({\n    history: [] as unknown[],\n    notTrackingUndo: false,\n  }))\n  .views(self => ({\n    get canUndo() {\n      return self.undoIdx > 0 && !self.notTrackingUndo\n    },\n    get canRedo() {\n      return self.undoIdx < self.history.length - 1 && !self.notTrackingUndo\n    },\n  }))\n  .actions(self => {\n    let targetStore: IAnyStateTreeNode\n    let snapshotDisposer: IDisposer\n    let skipNextUndoState = false\n\n    return {\n      // allows user code to (temporarily) stop tracking undo states\n      stopTrackingUndo() {\n        self.notTrackingUndo = true\n      },\n      // allows user code to resume tracking undo states\n      resumeTrackingUndo() {\n        self.notTrackingUndo = false\n      },\n      addUndoState(todos: unknown) {\n        if (self.notTrackingUndo) {\n          return\n        }\n        if (skipNextUndoState) {\n          // skip recording if this state was caused by undo / redo\n          skipNextUndoState = false\n          return\n        }\n        self.history.splice(self.undoIdx + 1)\n        self.history.push(todos)\n        if (self.history.length > MAX_HISTORY_LENGTH) {\n          self.history.shift()\n        }\n        self.undoIdx = self.history.length - 1\n      },\n\n      beforeDestroy() {\n        snapshotDisposer()\n      },\n      initialize() {\n        targetStore = self.targetPath\n          ? resolvePath(self, self.targetPath)\n          : getEnv(self).targetStore\n\n        if (!targetStore) {\n          throw new Error(\n            'Failed to find target store for TimeTraveller. Please provide `targetPath` property, or a `targetStore` in the environment',\n          )\n        }\n\n        snapshotDisposer = onSnapshot(\n          targetStore,\n          debounce((snapshot: unknown) => this.addUndoState(snapshot), 300),\n        )\n        if (self.history.length === 0) {\n          this.addUndoState(getSnapshot(targetStore))\n        }\n      },\n      undo() {\n        self.undoIdx--\n        skipNextUndoState = true\n        applySnapshot(targetStore, self.history[self.undoIdx])\n      },\n      redo() {\n        self.undoIdx++\n        skipNextUndoState = true\n        applySnapshot(targetStore, self.history[self.undoIdx])\n      },\n    }\n  })\n\nexport default TimeTraveller\n","import {\n  ConfigurationSchema,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { PluginDefinition } from '@jbrowse/core/PluginLoader'\nimport {\n  getParent,\n  getRoot,\n  getSnapshot,\n  resolveIdentifier,\n  types,\n  cast,\n} from 'mobx-state-tree'\nimport { toJS } from 'mobx'\nimport { SessionStateModel } from './sessionModelFactory'\nimport {\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n} from '@jbrowse/core/configuration/configurationSchema'\nimport clone from 'clone'\n\n// poke some things for testing (this stuff will eventually be removed)\n// @ts-ignore\nwindow.getSnapshot = getSnapshot\n// @ts-ignore\nwindow.resolveIdentifier = resolveIdentifier\n\nfunction removeAttr(obj: Record<string, unknown>, attr: string) {\n  for (const prop in obj) {\n    if (prop === attr) {\n      delete obj[prop]\n    } else if (typeof obj[prop] === 'object') {\n      removeAttr(obj[prop] as Record<string, unknown>, attr)\n    }\n  }\n  return obj\n}\n\nexport default function JBrowseWeb(\n  pluginManager: PluginManager,\n  Session: SessionStateModel,\n  assemblyConfigSchemasType: AnyConfigurationSchemaType,\n) {\n  const JBrowseModel = types\n    .model('JBrowseWeb', {\n      configuration: ConfigurationSchema('Root', {\n        rpc: RpcManager.configSchema,\n        // possibly consider this for global config editor\n        highResolutionScaling: {\n          type: 'number',\n          defaultValue: 2,\n        },\n        shareURL: {\n          type: 'string',\n          defaultValue: 'https://share.jbrowse.org/api/v1/',\n        },\n        featureDetails: ConfigurationSchema('FeatureDetails', {\n          sequenceTypes: {\n            type: 'stringArray',\n            defaultValue: ['mRNA', 'transcript'],\n          },\n        }),\n        disableAnalytics: {\n          type: 'boolean',\n          defaultValue: false,\n        },\n        theme: { type: 'frozen', defaultValue: {} },\n        logoPath: {\n          type: 'fileLocation',\n          defaultValue: { uri: '', locationType: 'UriLocation' },\n        },\n        ...pluginManager.pluginConfigurationSchemas(),\n      }),\n      plugins: types.array(types.frozen<PluginDefinition>()),\n      assemblies: types.array(assemblyConfigSchemasType),\n      // track configuration is an array of track config schemas. multiple\n      // instances of a track can exist that use the same configuration\n      tracks: types.array(pluginManager.pluggableConfigSchemaType('track')),\n      internetAccounts: types.array(\n        pluginManager.pluggableConfigSchemaType('internet account'),\n      ),\n      aggregateTextSearchAdapters: types.array(\n        pluginManager.pluggableConfigSchemaType('text search adapter'),\n      ),\n      connections: types.array(\n        pluginManager.pluggableConfigSchemaType('connection'),\n      ),\n      defaultSession: types.optional(types.frozen(Session), {\n        name: `New session`,\n      }),\n    })\n\n    .views(self => ({\n      get assemblyNames() {\n        return self.assemblies.map(assembly => readConfObject(assembly, 'name'))\n      },\n      get rpcManager() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return getParent<any>(self).rpcManager\n      },\n    }))\n    .actions(self => ({\n      afterCreate() {\n        const seen = [] as string[]\n        self.assemblyNames.forEach(assemblyName => {\n          if (!assemblyName) {\n            throw new Error('Encountered an assembly with no \"name\" defined')\n          }\n          if (seen.includes(assemblyName)) {\n            throw new Error(\n              `Found two assemblies with the same name: ${assemblyName}`,\n            )\n          } else {\n            seen.push(assemblyName)\n          }\n        })\n      },\n      addAssemblyConf(assemblyConf: AnyConfigurationModel) {\n        const { name } = assemblyConf\n        if (!name) {\n          throw new Error('Can\\'t add assembly with no \"name\"')\n        }\n        const assembly = self.assemblies.find(asm => asm.name === name)\n        if (assembly) {\n          return assembly\n        }\n        const length = self.assemblies.push({\n          ...assemblyConf,\n          sequence: {\n            type: 'ReferenceSequenceTrack',\n            trackId: `${name}-${Date.now()}`,\n            ...(assemblyConf.sequence || {}),\n          },\n        })\n        return self.assemblies[length - 1]\n      },\n      removeAssemblyConf(assemblyName: string) {\n        const toRemove = self.assemblies.find(\n          assembly => assembly.name === assemblyName,\n        )\n        if (toRemove) {\n          self.assemblies.remove(toRemove)\n        }\n      },\n      addTrackConf(trackConf: AnyConfigurationModel) {\n        const { type } = trackConf\n        if (!type) {\n          throw new Error(`unknown track type ${type}`)\n        }\n        const track = self.tracks.find(t => t.trackId === trackConf.trackId)\n        if (track) {\n          return track\n        }\n        const length = self.tracks.push(trackConf)\n        return self.tracks[length - 1]\n      },\n      addDisplayConf(trackId: string, displayConf: AnyConfigurationModel) {\n        const { type } = displayConf\n        if (!type) {\n          throw new Error(`unknown display type ${type}`)\n        }\n        const track = self.tracks.find(t => t.trackId === trackId)\n        if (!track) {\n          throw new Error(`could not find track with id ${trackId}`)\n        }\n        return track.addDisplayConf(displayConf)\n      },\n      addConnectionConf(connectionConf: AnyConfigurationModel) {\n        const { type } = connectionConf\n        if (!type) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const length = self.connections.push(connectionConf)\n        return self.connections[length - 1]\n      },\n\n      deleteConnectionConf(configuration: AnyConfigurationModel) {\n        const idx = self.connections.findIndex(\n          conn => conn.id === configuration.id,\n        )\n        if (idx === -1) {\n          return undefined\n        }\n        return self.connections.splice(idx, 1)\n      },\n\n      deleteTrackConf(trackConf: AnyConfigurationModel) {\n        const { trackId } = trackConf\n        const idx = self.tracks.findIndex(t => t.trackId === trackId)\n        if (idx === -1) {\n          return undefined\n        }\n\n        return self.tracks.splice(idx, 1)\n      },\n      setDefaultSessionConf(sessionConf: AnyConfigurationModel) {\n        let newDefault\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (getParent<any>(self).session.name === sessionConf.name) {\n          newDefault = getSnapshot(sessionConf)\n        } else {\n          newDefault = toJS(sessionConf)\n        }\n\n        if (!newDefault.name) {\n          throw new Error(`unable to set default session to ${newDefault.name}`)\n        }\n\n        // @ts-ignore complains about name missing, but above line checks this\n        self.defaultSession = cast(newDefault)\n      },\n      addPlugin(pluginDefinition: PluginDefinition) {\n        self.plugins.push(pluginDefinition)\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        getRoot<any>(self).setPluginsUpdated(true)\n      },\n\n      removePlugin(pluginDefinition: PluginDefinition) {\n        self.plugins = cast(\n          self.plugins.filter(\n            plugin =>\n              plugin.url !== pluginDefinition.url ||\n              plugin.umdUrl !== pluginDefinition.umdUrl ||\n              plugin.cjsUrl !== pluginDefinition.cjsUrl ||\n              plugin.esmUrl !== pluginDefinition.esmUrl,\n          ),\n        )\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        getParent<any>(self).setPluginsUpdated(true)\n      },\n\n      addInternetAccountConf(config: AnyConfigurationModel) {\n        const { type } = config\n        if (!type) {\n          throw new Error(`unknown internetAccount type ${type}`)\n        }\n        const length = self.internetAccounts.push(config)\n        return self.internetAccounts[length - 1]\n      },\n      deleteInternetAccountConf(config: AnyConfigurationModel) {\n        const idx = self.internetAccounts.findIndex(a => a.id === config.id)\n        if (idx === -1) {\n          return undefined\n        }\n        return self.internetAccounts.splice(idx, 1)\n      },\n    }))\n\n  return types.snapshotProcessor(JBrowseModel, {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    postProcessor(snapshot: { [key: string]: any }) {\n      return removeAttr(clone(snapshot), 'baseUri')\n    },\n  })\n}\n","import { IModelType, ModelProperties } from 'mobx-state-tree'\nimport { IObservableArray, observable } from 'mobx'\nimport { NotificationLevel, SnackAction } from '../util/types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction makeExtension(snackbarMessages: IObservableArray<any>) {\n  return {\n    views: {\n      get snackbarMessages() {\n        return snackbarMessages\n      },\n    },\n    actions: {\n      notify(message: string, level?: NotificationLevel, action?: SnackAction) {\n        this.pushSnackbarMessage(message, level, action)\n        if (level === 'info' || level === 'success') {\n          setTimeout(() => {\n            this.removeSnackbarMessage(message)\n          }, 5000)\n        }\n      },\n\n      pushSnackbarMessage(\n        message: string,\n        level?: NotificationLevel,\n        action?: SnackAction,\n      ) {\n        return snackbarMessages.push([message, level, action])\n      },\n\n      popSnackbarMessage() {\n        return snackbarMessages.pop()\n      },\n\n      removeSnackbarMessage(message: string) {\n        const element = snackbarMessages.find(f => f[0] === message)\n        if (element) {\n          snackbarMessages.remove(element)\n        }\n      },\n    },\n  }\n}\n\nexport default function addSnackbarToModel<\n  PROPS extends ModelProperties,\n  OTHERS,\n>(\n  tree: IModelType<PROPS, OTHERS>,\n): IModelType<\n  PROPS,\n  OTHERS &\n    ReturnType<typeof makeExtension>['actions'] &\n    ReturnType<typeof makeExtension>['views']\n> {\n  return tree.extend(() => {\n    const snackbarMessages = observable.array()\n\n    return makeExtension(snackbarMessages)\n  })\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { lazy } from 'react'\nimport clone from 'clone'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport { PluginDefinition } from '@jbrowse/core/PluginLoader'\nimport {\n  readConfObject,\n  getConf,\n  isConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport {\n  Region,\n  AbstractSessionModel,\n  TrackViewModel,\n  JBrowsePlugin,\n  DialogComponentType,\n} from '@jbrowse/core/util/types'\n\nimport addSnackbarToModel from '@jbrowse/core/ui/SnackbarModel'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { observable } from 'mobx'\nimport {\n  getMembers,\n  getParent,\n  getRoot,\n  getSnapshot,\n  getType,\n  isAlive,\n  isModelType,\n  isReferenceType,\n  types,\n  walk,\n  cast,\n  IAnyStateTreeNode,\n  Instance,\n  SnapshotIn,\n} from 'mobx-state-tree'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport TextSearchManager from '@jbrowse/core/TextSearch/TextSearchManager'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport CopyIcon from '@mui/icons-material/FileCopy'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport InfoIcon from '@mui/icons-material/Info'\nimport shortid from 'shortid'\n\nconst AboutDialog = lazy(() => import('@jbrowse/core/ui/AboutDialog'))\n\nexport declare interface ReferringNode {\n  node: IAnyStateTreeNode\n  key: string\n}\n\nexport declare interface ReactProps {\n  [key: string]: any\n}\n\nexport default function sessionModelFactory(\n  pluginManager: PluginManager,\n  assemblyConfigSchemasType = types.frozen(), // if not using sessionAssemblies\n) {\n  const minDrawerWidth = 128\n  const sessionModel = types\n    .model('JBrowseWebSessionModel', {\n      id: types.optional(types.identifier, shortid()),\n      name: types.string,\n      margin: 0,\n      drawerWidth: types.optional(\n        types.refinement(types.integer, width => width >= minDrawerWidth),\n        384,\n      ),\n      views: types.array(pluginManager.pluggableMstType('view', 'stateModel')),\n      widgets: types.map(\n        pluginManager.pluggableMstType('widget', 'stateModel'),\n      ),\n      activeWidgets: types.map(\n        types.safeReference(\n          pluginManager.pluggableMstType('widget', 'stateModel'),\n        ),\n      ),\n      connectionInstances: types.array(\n        pluginManager.pluggableMstType('connection', 'stateModel'),\n      ),\n      sessionTracks: types.array(\n        pluginManager.pluggableConfigSchemaType('track'),\n      ),\n      sessionConnections: types.array(\n        pluginManager.pluggableConfigSchemaType('connection'),\n      ),\n      sessionAssemblies: types.array(assemblyConfigSchemasType),\n      sessionPlugins: types.array(types.frozen()),\n      minimized: types.optional(types.boolean, false),\n\n      drawerPosition: types.optional(\n        types.string,\n        localStorage.getItem('drawerPosition') || 'right',\n      ),\n    })\n    .volatile((/* self */) => ({\n      /**\n       * this is the globally \"selected\" object. can be anything.\n       * code that wants to deal with this should examine it to see what\n       * kind of thing it is.\n       */\n      selection: undefined,\n      /**\n       * this is the current \"task\" that is being performed in the UI.\n       * this is usually an object of the form\n       * `{ taskName: \"configure\", target: thing_being_configured }`\n       */\n      task: undefined,\n\n      queueOfDialogs: observable.array(\n        [] as [DialogComponentType, ReactProps][],\n      ),\n    }))\n    .views(self => ({\n      get DialogComponent() {\n        if (self.queueOfDialogs.length) {\n          const firstInQueue = self.queueOfDialogs[0]\n          return firstInQueue && firstInQueue[0]\n        }\n        return undefined\n      },\n      get DialogProps() {\n        if (self.queueOfDialogs.length) {\n          const firstInQueue = self.queueOfDialogs[0]\n          return firstInQueue && firstInQueue[1]\n        }\n        return undefined\n      },\n      get shareURL() {\n        return getConf(getParent<any>(self).jbrowse, 'shareURL')\n      },\n      get rpcManager() {\n        return getParent<any>(self).jbrowse.rpcManager as RpcManager\n      },\n      get configuration() {\n        return getParent<any>(self).jbrowse.configuration\n      },\n      get assemblies() {\n        return getParent<any>(self).jbrowse.assemblies\n      },\n      get assemblyNames() {\n        return getParent<any>(self).jbrowse.assemblyNames\n      },\n      get tracks() {\n        return [...self.sessionTracks, ...getParent<any>(self).jbrowse.tracks]\n      },\n      get textSearchManager(): TextSearchManager {\n        return getParent<any>(self).textSearchManager\n      },\n      get connections() {\n        return [\n          ...self.sessionConnections,\n          ...getParent<any>(self).jbrowse.connections,\n        ]\n      },\n      get adminMode() {\n        return getParent<any>(self).adminMode\n      },\n      get savedSessions() {\n        return getParent<any>(self).savedSessions\n      },\n      get previousAutosaveId() {\n        return getParent<any>(self).previousAutosaveId\n      },\n      get savedSessionNames() {\n        return getParent<any>(self).savedSessionNames\n      },\n      get history() {\n        return getParent<any>(self).history\n      },\n      get menus() {\n        return getParent<any>(self).menus\n      },\n      get assemblyManager() {\n        return getParent<any>(self).assemblyManager\n      },\n      get version() {\n        return getParent<any>(self).version\n      },\n\n      renderProps() {\n        return { theme: readConfObject(this.configuration, 'theme') }\n      },\n\n      get visibleWidget() {\n        if (isAlive(self)) {\n          // returns most recently added item in active widgets\n          return Array.from(self.activeWidgets.values())[\n            self.activeWidgets.size - 1\n          ]\n        }\n        return undefined\n      },\n      /**\n       * See if any MST nodes currently have a types.reference to this object.\n       * @param object - object\n       * @returns An array where the first element is the node referring\n       * to the object and the second element is they property name the node is\n       * using to refer to the object\n       */\n      getReferring(object: IAnyStateTreeNode) {\n        const refs: ReferringNode[] = []\n        walk(getParent<any>(self), node => {\n          if (isModelType(getType(node))) {\n            const members = getMembers(node)\n            Object.entries(members.properties).forEach(([key, value]) => {\n              // @ts-ignore\n              if (isReferenceType(value) && node[key] === object) {\n                refs.push({ node, key })\n              }\n            })\n          }\n        })\n        return refs\n      },\n    }))\n    .actions(self => ({\n      setDrawerPosition(arg: string) {\n        self.drawerPosition = arg\n        localStorage.setItem('drawerPosition', arg)\n      },\n      queueDialog(\n        callback: (\n          doneCallback: () => void,\n        ) => [DialogComponentType, ReactProps],\n      ): void {\n        const [component, props] = callback(() => {\n          self.queueOfDialogs.shift()\n        })\n        self.queueOfDialogs.push([component, props])\n      },\n      setName(str: string) {\n        self.name = str\n      },\n\n      addAssembly(assemblyConfig: AnyConfigurationModel) {\n        const asm = self.sessionAssemblies.find(\n          f => f.name === assemblyConfig.name,\n        )\n        if (asm) {\n          console.warn(`Assembly ${assemblyConfig.name} was already existing`)\n          return asm\n        }\n        const length = self.sessionAssemblies.push(assemblyConfig)\n        return self.sessionAssemblies[length - 1]\n      },\n      addSessionPlugin(plugin: JBrowsePlugin) {\n        if (self.sessionPlugins.find(p => p.name === plugin.name)) {\n          throw new Error('session plugin cannot be installed twice')\n        }\n        self.sessionPlugins.push(plugin)\n        getRoot<any>(self).setPluginsUpdated(true)\n      },\n      removeAssembly(assemblyName: string) {\n        const index = self.sessionAssemblies.findIndex(\n          asm => asm.name === assemblyName,\n        )\n        if (index !== -1) {\n          self.sessionAssemblies.splice(index, 1)\n        }\n      },\n      removeSessionPlugin(pluginDefinition: PluginDefinition) {\n        self.sessionPlugins = cast(\n          self.sessionPlugins.filter(\n            plugin =>\n              plugin.url !== pluginDefinition.url ||\n              plugin.umdUrl !== pluginDefinition.umdUrl ||\n              plugin.cjsUrl !== pluginDefinition.cjsUrl ||\n              plugin.esmUrl !== pluginDefinition.esmUrl,\n          ),\n        )\n        const rootModel = getParent<any>(self)\n        rootModel.setPluginsUpdated(true)\n      },\n      makeConnection(\n        configuration: AnyConfigurationModel,\n        initialSnapshot = {},\n      ) {\n        const { type } = configuration\n        if (!type) {\n          throw new Error('track configuration has no `type` listed')\n        }\n        const name = readConfObject(configuration, 'name')\n        const connectionType = pluginManager.getConnectionType(type)\n        if (!connectionType) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const connectionData = {\n          ...initialSnapshot,\n          name,\n          type,\n          configuration,\n        }\n        const length = self.connectionInstances.push(connectionData)\n        return self.connectionInstances[length - 1]\n      },\n\n      removeReferring(\n        referring: any,\n        track: any,\n        callbacks: Function[],\n        dereferenceTypeCount: Record<string, number>,\n      ) {\n        referring.forEach(({ node }: ReferringNode) => {\n          let dereferenced = false\n          try {\n            // If a view is referring to the track config, remove the track\n            // from the view\n            const type = 'open track(s)'\n            const view = getContainingView(node) as TrackViewModel\n            callbacks.push(() => view.hideTrack(track.trackId))\n            dereferenced = true\n            if (!dereferenceTypeCount[type]) {\n              dereferenceTypeCount[type] = 0\n            }\n            dereferenceTypeCount[type] += 1\n          } catch (err1) {\n            // ignore\n          }\n\n          // @ts-ignore\n          if (self.widgets.has(node.id)) {\n            // If a configuration editor widget has the track config\n            // open, close the widget\n            const type = 'configuration editor widget(s)'\n            callbacks.push(() => this.hideWidget(node))\n            dereferenced = true\n            if (!dereferenceTypeCount[type]) {\n              dereferenceTypeCount[type] = 0\n            }\n            dereferenceTypeCount[type] += 1\n          }\n          if (!dereferenced) {\n            throw new Error(\n              `Error when closing this connection, the following node is still referring to a track configuration: ${JSON.stringify(\n                getSnapshot(node),\n              )}`,\n            )\n          }\n        })\n      },\n\n      prepareToBreakConnection(configuration: AnyConfigurationModel) {\n        const callbacksToDereferenceTrack: Function[] = []\n        const dereferenceTypeCount: Record<string, number> = {}\n        const name = readConfObject(configuration, 'name')\n        const connection = self.connectionInstances.find(c => c.name === name)\n        if (connection) {\n          connection.tracks.forEach((track: any) => {\n            const referring = self.getReferring(track)\n            this.removeReferring(\n              referring,\n              track,\n              callbacksToDereferenceTrack,\n              dereferenceTypeCount,\n            )\n          })\n          const safelyBreakConnection = () => {\n            callbacksToDereferenceTrack.forEach(cb => cb())\n            this.breakConnection(configuration)\n          }\n          return [safelyBreakConnection, dereferenceTypeCount]\n        }\n        return undefined\n      },\n\n      breakConnection(configuration: AnyConfigurationModel) {\n        const name = readConfObject(configuration, 'name')\n        const connection = self.connectionInstances.find(c => c.name === name)\n        self.connectionInstances.remove(connection)\n      },\n\n      deleteConnection(configuration: AnyConfigurationModel) {\n        let deletedConn\n        if (self.adminMode) {\n          deletedConn =\n            getParent<any>(self).jbrowse.deleteConnectionConf(configuration)\n        }\n        if (!deletedConn) {\n          const { connectionId } = configuration\n          const idx = self.sessionConnections.findIndex(\n            c => c.connectionId === connectionId,\n          )\n          if (idx === -1) {\n            return undefined\n          }\n          return self.sessionConnections.splice(idx, 1)\n        }\n        return deletedConn\n      },\n\n      updateDrawerWidth(drawerWidth: number) {\n        if (drawerWidth === self.drawerWidth) {\n          return self.drawerWidth\n        }\n        let newDrawerWidth = drawerWidth\n        if (newDrawerWidth < minDrawerWidth) {\n          newDrawerWidth = minDrawerWidth\n        }\n        self.drawerWidth = newDrawerWidth\n        return newDrawerWidth\n      },\n\n      resizeDrawer(distance: number) {\n        if (self.drawerPosition === 'left') {\n          distance *= -1\n        }\n        const oldDrawerWidth = self.drawerWidth\n        const newDrawerWidth = this.updateDrawerWidth(oldDrawerWidth - distance)\n        const actualDistance = oldDrawerWidth - newDrawerWidth\n        return actualDistance\n      },\n\n      addView(typeName: string, initialState = {}) {\n        const typeDefinition = pluginManager.getElementType('view', typeName)\n        if (!typeDefinition) {\n          throw new Error(`unknown view type ${typeName}`)\n        }\n\n        const length = self.views.push({\n          ...initialState,\n          type: typeName,\n        })\n        return self.views[length - 1]\n      },\n\n      removeView(view: any) {\n        for (const [, widget] of self.activeWidgets) {\n          if (widget.view && widget.view.id === view.id) {\n            this.hideWidget(widget)\n          }\n        }\n        self.views.remove(view)\n      },\n\n      addAssemblyConf(assemblyConf: AnyConfigurationModel) {\n        return getParent<any>(self).jbrowse.addAssemblyConf(assemblyConf)\n      },\n\n      addTrackConf(trackConf: AnyConfigurationModel) {\n        if (self.adminMode) {\n          return getParent<any>(self).jbrowse.addTrackConf(trackConf)\n        }\n        const { trackId, type } = trackConf\n        if (!type) {\n          throw new Error(`unknown track type ${type}`)\n        }\n        const track = self.sessionTracks.find((t: any) => t.trackId === trackId)\n        if (track) {\n          return track\n        }\n        const length = self.sessionTracks.push(trackConf)\n        return self.sessionTracks[length - 1]\n      },\n\n      deleteTrackConf(trackConf: AnyConfigurationModel) {\n        const callbacksToDereferenceTrack: Function[] = []\n        const dereferenceTypeCount: Record<string, number> = {}\n        const referring = self.getReferring(trackConf)\n        this.removeReferring(\n          referring,\n          trackConf,\n          callbacksToDereferenceTrack,\n          dereferenceTypeCount,\n        )\n        callbacksToDereferenceTrack.forEach(cb => cb())\n        if (self.adminMode) {\n          return getParent<any>(self).jbrowse.deleteTrackConf(trackConf)\n        }\n        const { trackId } = trackConf\n        const idx = self.sessionTracks.findIndex(t => t.trackId === trackId)\n        if (idx === -1) {\n          return undefined\n        }\n        return self.sessionTracks.splice(idx, 1)\n      },\n\n      addConnectionConf(connectionConf: any) {\n        if (self.adminMode) {\n          return getParent<any>(self).jbrowse.addConnectionConf(connectionConf)\n        }\n        const { connectionId, type } = connectionConf\n        if (!type) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const connection = self.sessionTracks.find(\n          (c: any) => c.connectionId === connectionId,\n        )\n        if (connection) {\n          return connection\n        }\n        const length = self.sessionConnections.push(connectionConf)\n        return self.sessionConnections[length - 1]\n      },\n\n      addLinearGenomeViewOfAssembly(assemblyName: string, initialState = {}) {\n        return this.addViewOfAssembly(\n          'LinearGenomeView',\n          assemblyName,\n          initialState,\n        )\n      },\n\n      addViewOfAssembly(\n        viewType: any,\n        assemblyName: string,\n        initialState: any = {},\n      ) {\n        const assembly = self.assemblies.find(\n          (s: AnyConfigurationModel) =>\n            readConfObject(s, 'name') === assemblyName,\n        )\n        if (!assembly) {\n          throw new Error(\n            `Could not add view of assembly \"${assemblyName}\", assembly name not found`,\n          )\n        }\n        initialState.displayRegionsFromAssemblyName = readConfObject(\n          assembly,\n          'name',\n        )\n        return this.addView(viewType, initialState)\n      },\n\n      addViewFromAnotherView(\n        viewType: string,\n        otherView: any,\n        initialState: { displayedRegions?: Region[] } = {},\n      ) {\n        const state = { ...initialState }\n        state.displayedRegions = getSnapshot(otherView.displayedRegions)\n        return this.addView(viewType, state)\n      },\n\n      addWidget(\n        typeName: string,\n        id: string,\n        initialState = {},\n        configuration = { type: typeName },\n      ) {\n        const typeDefinition = pluginManager.getElementType('widget', typeName)\n        if (!typeDefinition) {\n          throw new Error(`unknown widget type ${typeName}`)\n        }\n        const data = {\n          ...initialState,\n          id,\n          type: typeName,\n          configuration,\n        }\n        self.widgets.set(id, data)\n        return self.widgets.get(id)\n      },\n\n      showWidget(widget: any) {\n        if (self.activeWidgets.has(widget.id)) {\n          self.activeWidgets.delete(widget.id)\n        }\n        self.activeWidgets.set(widget.id, widget)\n        self.minimized = false\n      },\n\n      hasWidget(widget: any) {\n        return self.activeWidgets.has(widget.id)\n      },\n\n      hideWidget(widget: any) {\n        self.activeWidgets.delete(widget.id)\n      },\n      minimizeWidgetDrawer() {\n        self.minimized = true\n      },\n      showWidgetDrawer() {\n        self.minimized = false\n      },\n      hideAllWidgets() {\n        self.activeWidgets.clear()\n      },\n\n      /**\n       * set the global selection, i.e. the globally-selected object.\n       * can be a feature, a view, just about anything\n       * @param thing -\n       */\n      setSelection(thing: any) {\n        self.selection = thing\n      },\n\n      /**\n       * clears the global selection\n       */\n      clearSelection() {\n        self.selection = undefined\n      },\n\n      clearConnections() {\n        self.connectionInstances.length = 0\n      },\n\n      addSavedSession(sessionSnapshot: SnapshotIn<typeof self>) {\n        return getParent<any>(self).addSavedSession(sessionSnapshot)\n      },\n\n      removeSavedSession(sessionSnapshot: any) {\n        return getParent<any>(self).removeSavedSession(sessionSnapshot)\n      },\n\n      renameCurrentSession(sessionName: string) {\n        return getParent<any>(self).renameCurrentSession(sessionName)\n      },\n\n      duplicateCurrentSession() {\n        return getParent<any>(self).duplicateCurrentSession()\n      },\n      activateSession(sessionName: any) {\n        return getParent<any>(self).activateSession(sessionName)\n      },\n      setDefaultSession() {\n        return getParent<any>(self).setDefaultSession()\n      },\n      saveSessionToLocalStorage() {\n        return getParent<any>(self).saveSessionToLocalStorage()\n      },\n      loadAutosaveSession() {\n        return getParent<any>(self).loadAutosaveSession()\n      },\n      setSession(sessionSnapshot: SnapshotIn<typeof self>) {\n        return getParent<any>(self).setSession(sessionSnapshot)\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * opens a configuration editor to configure the given thing,\n       * and sets the current task to be configuring it\n       * @param configuration -\n       */\n      editConfiguration(configuration: AnyConfigurationModel) {\n        if (!isConfigurationModel(configuration)) {\n          throw new Error(\n            'must pass a configuration model to editConfiguration',\n          )\n        }\n        const editableConfigSession = self\n        const editor = editableConfigSession.addWidget(\n          'ConfigurationEditorWidget',\n          'configEditor',\n          { target: configuration },\n        )\n        editableConfigSession.showWidget(editor)\n      },\n      editTrackConfiguration(configuration: AnyConfigurationModel) {\n        const { adminMode, sessionTracks } = self\n        if (!adminMode && sessionTracks.indexOf(configuration) === -1) {\n          throw new Error(\"Can't edit the configuration of a non-session track\")\n        }\n        this.editConfiguration(configuration)\n      },\n    }))\n    .views(self => ({\n      getTrackActionMenuItems(config: AnyConfigurationModel) {\n        const { adminMode, sessionTracks } = self\n        const canEdit =\n          adminMode || sessionTracks.find(t => t.trackId === config.trackId)\n\n        // disable if it is a reference sequence track\n        const isRefSeq =\n          readConfObject(config, 'type') === 'ReferenceSequenceTrack'\n        return [\n          {\n            label: 'About track',\n            onClick: () => {\n              self.queueDialog(handleClose => [\n                AboutDialog,\n                { config, handleClose },\n              ])\n            },\n            icon: InfoIcon,\n          },\n          {\n            label: 'Settings',\n            disabled: !canEdit,\n            onClick: () => self.editTrackConfiguration(config),\n            icon: SettingsIcon,\n          },\n          {\n            label: 'Delete track',\n            disabled: !canEdit || isRefSeq,\n            onClick: () => self.deleteTrackConf(config),\n            icon: DeleteIcon,\n          },\n          {\n            label: 'Copy track',\n            disabled: isRefSeq,\n            onClick: () => {\n              const snap = clone(getSnapshot(config)) as any\n              const now = Date.now()\n              snap.trackId += `-${now}`\n              snap.displays.forEach((display: { displayId: string }) => {\n                display.displayId += `-${now}`\n              })\n              // the -sessionTrack suffix to trackId is used as metadata for\n              // the track selector to store the track in a special category,\n              // and default category is also cleared\n              if (!self.adminMode) {\n                snap.trackId += '-sessionTrack'\n                snap.category = undefined\n              }\n              snap.name += ' (copy)'\n              self.addTrackConf(snap)\n            },\n            icon: CopyIcon,\n          },\n        ]\n      },\n    }))\n\n  const extendedSessionModel = pluginManager.evaluateExtensionPoint(\n    'Core-extendSession',\n    sessionModel,\n  ) as typeof sessionModel\n\n  return types.snapshotProcessor(addSnackbarToModel(extendedSessionModel), {\n    // @ts-ignore\n    preProcessor(snapshot) {\n      if (snapshot) {\n        // @ts-ignore\n        const { connectionInstances, ...rest } = snapshot || {}\n        // connectionInstances schema changed from object to an array, so any\n        // old connectionInstances as object is in snapshot, filter it out\n        // https://github.com/GMOD/jbrowse-components/issues/1903\n        if (!Array.isArray(connectionInstances)) {\n          return rest\n        }\n      }\n      return snapshot\n    },\n  })\n}\n\nexport type SessionStateModel = ReturnType<typeof sessionModelFactory>\nexport type SessionModel = Instance<SessionStateModel>\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction z(x: Instance<SessionStateModel>): AbstractSessionModel {\n  // this function's sole purpose is to get typescript to check\n  // that the session model implements all of AbstractSessionModel\n  return x\n}\n","import {\n  addDisposer,\n  cast,\n  getSnapshot,\n  getType,\n  resolveIdentifier,\n  types,\n  IAnyStateTreeNode,\n  SnapshotIn,\n  IAnyModelType,\n} from 'mobx-state-tree'\n\nimport makeWorkerInstance from './makeWorkerInstance'\n\nimport { saveAs } from 'file-saver'\nimport { observable, autorun } from 'mobx'\nimport assemblyManagerFactory from '@jbrowse/core/assemblyManager'\nimport assemblyConfigSchemaFactory from '@jbrowse/core/assemblyManager/assemblyConfigSchema'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport TextSearchManager from '@jbrowse/core/TextSearch/TextSearchManager'\nimport TimeTraveller from '@jbrowse/core/util/TimeTraveller'\nimport { UriLocation } from '@jbrowse/core/util/types'\nimport { AbstractSessionModel, SessionWithWidgets } from '@jbrowse/core/util'\nimport { MenuItem } from '@jbrowse/core/ui'\n\n// icons\nimport AddIcon from '@mui/icons-material/Add'\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport AppsIcon from '@mui/icons-material/Apps'\nimport FileCopyIcon from '@mui/icons-material/FileCopy'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport GetAppIcon from '@mui/icons-material/GetApp'\nimport PublishIcon from '@mui/icons-material/Publish'\nimport ExtensionIcon from '@mui/icons-material/Extension'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport SaveIcon from '@mui/icons-material/Save'\nimport UndoIcon from '@mui/icons-material/Undo'\nimport RedoIcon from '@mui/icons-material/Redo'\nimport { Cable } from '@jbrowse/core/ui/Icons'\n\n// other\nimport corePlugins from './corePlugins'\nimport jbrowseWebFactory from './jbrowseModel'\nimport sessionModelFactory from './sessionModelFactory'\nimport { filterSessionInPlace } from './util'\n\ninterface Menu {\n  label: string\n  menuItems: MenuItem[]\n}\n\nexport default function RootModel(\n  pluginManager: PluginManager,\n  adminMode = false,\n) {\n  const assemblyConfigSchema = assemblyConfigSchemaFactory(pluginManager)\n  const Session = sessionModelFactory(pluginManager, assemblyConfigSchema)\n  const assemblyManagerType = assemblyManagerFactory(\n    assemblyConfigSchema,\n    pluginManager,\n  )\n  return types\n    .model('Root', {\n      jbrowse: jbrowseWebFactory(pluginManager, Session, assemblyConfigSchema),\n      configPath: types.maybe(types.string),\n      session: types.maybe(Session),\n      assemblyManager: assemblyManagerType,\n      version: types.maybe(types.string),\n      internetAccounts: types.array(\n        pluginManager.pluggableMstType('internet account', 'stateModel'),\n      ),\n      history: types.optional(TimeTraveller, { targetPath: '../session' }),\n    })\n    .volatile(self => ({\n      isAssemblyEditing: false,\n      isDefaultSessionEditing: false,\n      pluginsUpdated: false,\n      rpcManager: new RpcManager(\n        pluginManager,\n        self.jbrowse.configuration.rpc,\n        {\n          WebWorkerRpcDriver: {\n            makeWorkerInstance,\n          },\n          MainThreadRpcDriver: {},\n        },\n      ),\n      savedSessionsVolatile: observable.map({}),\n      textSearchManager: new TextSearchManager(pluginManager),\n      pluginManager,\n      error: undefined as unknown,\n    }))\n    .views(self => ({\n      get savedSessions() {\n        return Array.from(self.savedSessionsVolatile.values())\n      },\n      localStorageId(name: string) {\n        return `localSaved-${name}-${self.configPath}`\n      },\n      get autosaveId() {\n        return `autosave-${self.configPath}`\n      },\n      get previousAutosaveId() {\n        return `previousAutosave-${self.configPath}`\n      },\n    }))\n    .views(self => ({\n      get savedSessionNames() {\n        return self.savedSessions.map(session => session.name)\n      },\n      get currentSessionId() {\n        const locationUrl = new URL(window.location.href)\n        const params = new URLSearchParams(locationUrl.search)\n        return params?.get('session')?.split('local-')[1]\n      },\n    }))\n\n    .actions(self => ({\n      afterCreate() {\n        document.addEventListener('keydown', event => {\n          if (self.history.canRedo) {\n            if (\n              // ctrl+shift+z or cmd+shift+z\n              ((event.ctrlKey || event.metaKey) &&\n                event.shiftKey &&\n                event.code === 'KeyZ') ||\n              // ctrl+y\n              (event.ctrlKey && !event.shiftKey && event.code === 'KeyY')\n            ) {\n              self.history.redo()\n            }\n          } else if (self.history.canUndo) {\n            if (\n              // ctrl+z or cmd+z\n              (event.ctrlKey || event.metaKey) &&\n              !event.shiftKey &&\n              event.code === 'KeyZ'\n            ) {\n              self.history.undo()\n            }\n          }\n        })\n\n        Object.entries(localStorage)\n          .filter(([key, _val]) => key.startsWith('localSaved-'))\n          .filter(\n            ([key, _val]) => key.indexOf(self.configPath || 'undefined') !== -1,\n          )\n          .forEach(([key, val]) => {\n            try {\n              const { session } = JSON.parse(val)\n              self.savedSessionsVolatile.set(key, session)\n            } catch (e) {\n              console.error('bad session encountered', key, val)\n            }\n          })\n        addDisposer(\n          self,\n          autorun(() => {\n            for (const [, val] of self.savedSessionsVolatile.entries()) {\n              try {\n                const key = self.localStorageId(val.name)\n                localStorage.setItem(key, JSON.stringify({ session: val }))\n              } catch (e) {\n                // @ts-ignore\n                if (e.code === '22' || e.code === '1024') {\n                  alert(\n                    'Local storage is full! Please use the \"Open sessions\" panel to remove old sessions',\n                  )\n                }\n              }\n            }\n          }),\n        )\n\n        addDisposer(\n          self,\n          autorun(() => {\n            if (self.session) {\n              // we use a specific initialization routine after session is\n              // created to get it to start tracking itself sort of related\n              // issue here\n              // https://github.com/mobxjs/mobx-state-tree/issues/1089#issuecomment-441207911\n              self.history.initialize()\n            }\n          }),\n        )\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              if (self.session) {\n                const noSession = { name: 'empty' }\n                const snapshot = getSnapshot(self.session) || noSession\n                sessionStorage.setItem(\n                  'current',\n                  JSON.stringify({ session: snapshot }),\n                )\n\n                localStorage.setItem(\n                  `autosave-${self.configPath}`,\n                  JSON.stringify({\n                    session: {\n                      ...snapshot,\n                      name: `${snapshot.name}-autosaved`,\n                    },\n                  }),\n                )\n                if (self.pluginsUpdated) {\n                  // reload app to get a fresh plugin manager\n                  window.location.reload()\n                }\n              }\n            },\n            { delay: 400 },\n          ),\n        )\n        addDisposer(\n          self,\n          autorun(() => {\n            self.jbrowse.internetAccounts.forEach(account => {\n              this.initializeInternetAccount(account.internetAccountId)\n            })\n          }),\n        )\n      },\n      setSession(sessionSnapshot?: SnapshotIn<typeof Session>) {\n        const oldSession = self.session\n        self.session = cast(sessionSnapshot)\n        if (self.session) {\n          // validate all references in the session snapshot\n          try {\n            filterSessionInPlace(self.session, getType(self.session))\n          } catch (error) {\n            // throws error if session filtering failed\n            self.session = oldSession\n            throw error\n          }\n        }\n      },\n      initializeInternetAccount(\n        internetAccountId: string,\n        initialSnapshot = {},\n      ) {\n        const internetAccountConfigSchema =\n          pluginManager.pluggableConfigSchemaType('internet account')\n        const configuration = resolveIdentifier(\n          internetAccountConfigSchema as IAnyModelType,\n          self,\n          internetAccountId,\n        )\n\n        const internetAccountType = pluginManager.getInternetAccountType(\n          configuration.type,\n        )\n        if (!internetAccountType) {\n          throw new Error(`unknown internet account type ${configuration.type}`)\n        }\n\n        const internetAccount = internetAccountType.stateModel.create({\n          ...initialSnapshot,\n          type: configuration.type,\n          configuration,\n        })\n        self.internetAccounts.push(internetAccount)\n        return internetAccount\n      },\n      createEphemeralInternetAccount(\n        internetAccountId: string,\n        initialSnapshot = {},\n        url: string,\n      ) {\n        let hostUri\n\n        try {\n          hostUri = new URL(url).origin\n        } catch (e) {\n          // ignore\n        }\n        // id of a custom new internaccount is `${type}-${name}`\n        const internetAccountSplit = internetAccountId.split('-')\n        const configuration = {\n          type: internetAccountSplit[0],\n          internetAccountId: internetAccountId,\n          name: internetAccountSplit.slice(1).join('-'),\n          description: '',\n          domains: hostUri ? [hostUri] : [],\n        }\n        const internetAccountType = pluginManager.getInternetAccountType(\n          configuration.type,\n        )\n        const internetAccount = internetAccountType.stateModel.create({\n          ...initialSnapshot,\n          type: configuration.type,\n          configuration,\n        })\n        self.internetAccounts.push(internetAccount)\n        return internetAccount\n      },\n      setAssemblyEditing(flag: boolean) {\n        self.isAssemblyEditing = flag\n      },\n      setDefaultSessionEditing(flag: boolean) {\n        self.isDefaultSessionEditing = flag\n      },\n      setPluginsUpdated(flag: boolean) {\n        self.pluginsUpdated = flag\n      },\n      setDefaultSession() {\n        const { defaultSession } = self.jbrowse\n        const newSession = {\n          ...defaultSession,\n          name: `${defaultSession.name} ${new Date().toLocaleString()}`,\n        }\n\n        this.setSession(newSession)\n      },\n      renameCurrentSession(sessionName: string) {\n        if (self.session) {\n          const snapshot = JSON.parse(JSON.stringify(getSnapshot(self.session)))\n          snapshot.name = sessionName\n          this.setSession(snapshot)\n        }\n      },\n\n      addSavedSession(session: { name: string }) {\n        const key = self.localStorageId(session.name)\n        self.savedSessionsVolatile.set(key, session)\n      },\n\n      removeSavedSession(session: { name: string }) {\n        const key = self.localStorageId(session.name)\n        localStorage.removeItem(key)\n        self.savedSessionsVolatile.delete(key)\n      },\n\n      duplicateCurrentSession() {\n        if (self.session) {\n          const snapshot = JSON.parse(JSON.stringify(getSnapshot(self.session)))\n          let newSnapshotName = `${self.session.name} (copy)`\n          if (self.savedSessionNames.includes(newSnapshotName)) {\n            let newSnapshotCopyNumber = 2\n            do {\n              newSnapshotName = `${self.session.name} (copy ${newSnapshotCopyNumber})`\n              newSnapshotCopyNumber += 1\n            } while (self.savedSessionNames.includes(newSnapshotName))\n          }\n          snapshot.name = newSnapshotName\n          this.setSession(snapshot)\n        }\n      },\n      activateSession(name: string) {\n        const localId = self.localStorageId(name)\n        const newSessionSnapshot = localStorage.getItem(localId)\n        if (!newSessionSnapshot) {\n          throw new Error(\n            `Can't activate session ${name}, it is not in the savedSessions`,\n          )\n        }\n\n        this.setSession(JSON.parse(newSessionSnapshot).session)\n      },\n      saveSessionToLocalStorage() {\n        if (self.session) {\n          const key = self.localStorageId(self.session.name)\n          self.savedSessionsVolatile.set(key, getSnapshot(self.session))\n        }\n      },\n      loadAutosaveSession() {\n        const previousAutosave = localStorage.getItem(self.previousAutosaveId)\n        const autosavedSession = previousAutosave\n          ? JSON.parse(previousAutosave).session\n          : {}\n        const { name } = autosavedSession\n        autosavedSession.name = `${name.replace('-autosaved', '')}-restored`\n        this.setSession(autosavedSession)\n      },\n\n      setError(error?: unknown) {\n        self.error = error\n      },\n      findAppropriateInternetAccount(location: UriLocation) {\n        // find the existing account selected from menu\n        const selectedId = location.internetAccountId\n        if (selectedId) {\n          const selectedAccount = self.internetAccounts.find(account => {\n            return account.internetAccountId === selectedId\n          })\n          if (selectedAccount) {\n            return selectedAccount\n          }\n        }\n\n        // if no existing account or not found, try to find working account\n        for (const account of self.internetAccounts) {\n          const handleResult = account.handlesLocation(location)\n          if (handleResult) {\n            return account\n          }\n        }\n\n        // if still no existing account, create ephemeral config to use\n        return selectedId\n          ? this.createEphemeralInternetAccount(selectedId, {}, location.uri)\n          : null\n      },\n    }))\n    .volatile(self => ({\n      menus: [\n        {\n          label: 'File',\n          menuItems: [\n            {\n              label: 'New session',\n              icon: AddIcon,\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              onClick: (session: any) => {\n                const lastAutosave = localStorage.getItem(self.autosaveId)\n                if (lastAutosave) {\n                  localStorage.setItem(self.previousAutosaveId, lastAutosave)\n                }\n                session.setDefaultSession()\n              },\n            },\n            {\n              label: 'Import session…',\n              icon: PublishIcon,\n              onClick: (session: SessionWithWidgets) => {\n                const widget = session.addWidget(\n                  'ImportSessionWidget',\n                  'importSessionWidget',\n                )\n                session.showWidget(widget)\n              },\n            },\n            {\n              label: 'Export session',\n              icon: GetAppIcon,\n              onClick: (session: IAnyStateTreeNode) => {\n                const sessionBlob = new Blob(\n                  [JSON.stringify({ session: getSnapshot(session) }, null, 2)],\n                  { type: 'text/plain;charset=utf-8' },\n                )\n                saveAs(sessionBlob, 'session.json')\n              },\n            },\n            {\n              label: 'Open session…',\n              icon: FolderOpenIcon,\n              onClick: (session: SessionWithWidgets) => {\n                const widget = session.addWidget(\n                  'SessionManager',\n                  'sessionManager',\n                )\n                session.showWidget(widget)\n              },\n            },\n            {\n              label: 'Save session',\n              icon: SaveIcon,\n              onClick: (session: SessionWithWidgets) => {\n                self.saveSessionToLocalStorage()\n                session.notify(`Saved session \"${session.name}\"`, 'success')\n              },\n            },\n            {\n              label: 'Duplicate session',\n              icon: FileCopyIcon,\n              onClick: (session: AbstractSessionModel) => {\n                if (session.duplicateCurrentSession) {\n                  session.duplicateCurrentSession()\n                }\n              },\n            },\n            { type: 'divider' },\n            {\n              label: 'Open track...',\n              icon: StorageIcon,\n              onClick: (session: SessionWithWidgets) => {\n                if (session.views.length === 0) {\n                  session.notify('Please open a view to add a track first')\n                } else if (session.views.length >= 1) {\n                  const widget = session.addWidget(\n                    'AddTrackWidget',\n                    'addTrackWidget',\n                    { view: session.views[0].id },\n                  )\n                  session.showWidget(widget)\n                  if (session.views.length > 1) {\n                    session.notify(\n                      `This will add a track to the first view. Note: if you want to open a track in a specific view open the track selector for that view and use the add track (plus icon) in the bottom right`,\n                    )\n                  }\n                }\n              },\n            },\n            {\n              label: 'Open connection...',\n              icon: Cable,\n              onClick: (session: SessionWithWidgets) => {\n                const widget = session.addWidget(\n                  'AddConnectionWidget',\n                  'addConnectionWidget',\n                )\n                session.showWidget(widget)\n              },\n            },\n            { type: 'divider' },\n            {\n              label: 'Return to splash screen',\n              icon: AppsIcon,\n              onClick: () => {\n                self.setSession(undefined)\n              },\n            },\n          ],\n        },\n        ...(adminMode\n          ? [\n              {\n                label: 'Admin',\n                menuItems: [\n                  {\n                    label: 'Open assembly manager',\n                    icon: SettingsIcon,\n                    onClick: () => {\n                      self.setAssemblyEditing(true)\n                    },\n                  },\n                  {\n                    label: 'Set default session',\n                    icon: SettingsIcon,\n                    onClick: () => {\n                      self.setDefaultSessionEditing(true)\n                    },\n                  },\n                ],\n              },\n            ]\n          : []),\n        {\n          label: 'Add',\n          menuItems: [],\n        },\n        {\n          label: 'Tools',\n          menuItems: [\n            {\n              label: 'Undo',\n              disabled: self.history.canUndo,\n              icon: UndoIcon,\n              onClick: () => {\n                self.history.undo()\n              },\n            },\n            {\n              label: 'Redo',\n              disabled: self.history.canRedo,\n              icon: RedoIcon,\n              onClick: () => {\n                self.history.redo()\n              },\n            },\n            { type: 'divider' },\n            {\n              label: 'Plugin store',\n              icon: ExtensionIcon,\n              onClick: () => {\n                if (self.session) {\n                  const widget = self.session.addWidget(\n                    'PluginStoreWidget',\n                    'pluginStoreWidget',\n                  )\n                  self.session.showWidget(widget)\n                }\n              },\n            },\n          ],\n        },\n      ] as Menu[],\n      adminMode,\n    }))\n    .actions(self => ({\n      setMenus(newMenus: Menu[]) {\n        self.menus = newMenus\n      },\n      /**\n       * Add a top-level menu\n       * @param menuName - Name of the menu to insert.\n       * @returns The new length of the top-level menus array\n       */\n      appendMenu(menuName: string) {\n        return self.menus.push({ label: menuName, menuItems: [] })\n      },\n      /**\n       * Insert a top-level menu\n       * @param menuName - Name of the menu to insert.\n       * @param position - Position to insert menu. If negative, counts from th\n       * end, e.g. `insertMenu('My Menu', -1)` will insert the menu as the\n       * second-to-last one.\n       * @returns The new length of the top-level menus array\n       */\n      insertMenu(menuName: string, position: number) {\n        self.menus.splice(\n          (position < 0 ? self.menus.length : 0) + position,\n          0,\n          { label: menuName, menuItems: [] },\n        )\n        return self.menus.length\n      },\n      /**\n       * Add a menu item to a top-level menu\n       * @param menuName - Name of the top-level menu to append to.\n       * @param menuItem - Menu item to append.\n       * @returns The new length of the menu\n       */\n      appendToMenu(menuName: string, menuItem: MenuItem) {\n        const menu = self.menus.find(m => m.label === menuName)\n        if (!menu) {\n          self.menus.push({ label: menuName, menuItems: [menuItem] })\n          return 1\n        }\n        return menu.menuItems.push(menuItem)\n      },\n      /**\n       * Insert a menu item into a top-level menu\n       * @param menuName - Name of the top-level menu to insert into\n       * @param menuItem - Menu item to insert\n       * @param position - Position to insert menu item. If negative, counts\n       * from the end, e.g. `insertMenu('My Menu', -1)` will insert the menu as\n       * the second-to-last one.\n       * @returns The new length of the menu\n       */\n      insertInMenu(menuName: string, menuItem: MenuItem, position: number) {\n        const menu = self.menus.find(m => m.label === menuName)\n        if (!menu) {\n          self.menus.push({ label: menuName, menuItems: [menuItem] })\n          return 1\n        }\n        const insertPosition =\n          position < 0 ? menu.menuItems.length + position : position\n        menu.menuItems.splice(insertPosition, 0, menuItem)\n        return menu.menuItems.length\n      },\n      /**\n       * Add a menu item to a sub-menu\n       * @param menuPath - Path to the sub-menu to add to, starting with the\n       * top-level menu (e.g. `['File', 'Insert']`).\n       * @param menuItem - Menu item to append.\n       * @returns The new length of the sub-menu\n       */\n      appendToSubMenu(menuPath: string[], menuItem: MenuItem) {\n        let topMenu = self.menus.find(m => m.label === menuPath[0])\n        if (!topMenu) {\n          const idx = this.appendMenu(menuPath[0])\n          topMenu = self.menus[idx - 1]\n        }\n        let { menuItems: subMenu } = topMenu\n        const pathSoFar = [menuPath[0]]\n        menuPath.slice(1).forEach(menuName => {\n          pathSoFar.push(menuName)\n          let sm = subMenu.find(mi => 'label' in mi && mi.label === menuName)\n          if (!sm) {\n            const idx = subMenu.push({ label: menuName, subMenu: [] })\n            sm = subMenu[idx - 1]\n          }\n          if (!('subMenu' in sm)) {\n            throw new Error(\n              `\"${menuName}\" in path \"${pathSoFar}\" is not a subMenu`,\n            )\n          }\n          subMenu = sm.subMenu\n        })\n        return subMenu.push(menuItem)\n      },\n      /**\n       * Insert a menu item into a sub-menu\n       * @param menuPath - Path to the sub-menu to add to, starting with the\n       * top-level menu (e.g. `['File', 'Insert']`).\n       * @param menuItem - Menu item to insert.\n       * @param position - Position to insert menu item. If negative, counts\n       * from the end, e.g. `insertMenu('My Menu', -1)` will insert the menu as\n       * the second-to-last one.\n       * @returns The new length of the sub-menu\n       */\n      insertInSubMenu(\n        menuPath: string[],\n        menuItem: MenuItem,\n        position: number,\n      ) {\n        let topMenu = self.menus.find(m => m.label === menuPath[0])\n        if (!topMenu) {\n          const idx = this.appendMenu(menuPath[0])\n          topMenu = self.menus[idx - 1]\n        }\n        let { menuItems: subMenu } = topMenu\n        const pathSoFar = [menuPath[0]]\n        menuPath.slice(1).forEach(menuName => {\n          pathSoFar.push(menuName)\n          let sm = subMenu.find(mi => 'label' in mi && mi.label === menuName)\n          if (!sm) {\n            const idx = subMenu.push({ label: menuName, subMenu: [] })\n            sm = subMenu[idx - 1]\n          }\n          if (!('subMenu' in sm)) {\n            throw new Error(\n              `\"${menuName}\" in path \"${pathSoFar}\" is not a subMenu`,\n            )\n          }\n          subMenu = sm.subMenu\n        })\n        subMenu.splice(position, 0, menuItem)\n        return subMenu.length\n      },\n    }))\n}\n\nexport function createTestSession(snapshot = {}, adminMode = false) {\n  const pluginManager = new PluginManager(corePlugins.map(P => new P()))\n  pluginManager.createPluggableElements()\n\n  const root = RootModel(pluginManager, adminMode).create(\n    {\n      jbrowse: {\n        configuration: { rpc: { defaultDriver: 'MainThreadRpcDriver' } },\n      },\n      assemblyManager: {},\n    },\n    { pluginManager },\n  )\n  root.setSession({\n    name: 'testSession',\n    ...snapshot,\n  })\n  // @ts-ignore\n  root.session.views.map(view => view.setWidth(800))\n  pluginManager.setRootModel(root)\n\n  pluginManager.configure()\n  return root.session\n}\n","export default async function factoryReset() {\n  // @ts-ignore\n  window.location = window.location.pathname\n}\n","import domLoadScript from 'load-script2'\n\nimport { PluginConstructor } from './Plugin'\nimport { ConfigurationSchema } from './configuration'\n\nimport ReExports from './ReExports'\nimport { isElectron } from './util'\n\nexport const PluginSourceConfigurationSchema = ConfigurationSchema(\n  'PluginSource',\n  {\n    name: {\n      type: 'string',\n      defaultValue: '',\n    },\n    url: {\n      type: 'string',\n      defaultValue: '',\n    },\n  },\n)\n\nexport interface UMDPluginDefinition {\n  umdUrl: string\n  name: string\n}\n\nexport interface LegacyUMDPluginDefinition {\n  url: string\n  name: string\n}\n\nexport function isUMDPluginDefinition(\n  pluginDefinition: PluginDefinition,\n): pluginDefinition is UMDPluginDefinition | LegacyUMDPluginDefinition {\n  return (\n    ((pluginDefinition as UMDPluginDefinition).umdUrl !== undefined ||\n      (pluginDefinition as LegacyUMDPluginDefinition).url !== undefined) &&\n    (pluginDefinition as LegacyUMDPluginDefinition | UMDPluginDefinition)\n      .name !== undefined\n  )\n}\n\nexport interface ESMPluginDefinition {\n  esmUrl: string\n}\n\nexport function isESMPluginDefinition(\n  pluginDefinition: PluginDefinition,\n): pluginDefinition is ESMPluginDefinition {\n  return (pluginDefinition as ESMPluginDefinition).esmUrl !== undefined\n}\n\nexport interface CJSPluginDefinition {\n  cjsUrl: string\n}\n\nexport function isCJSPluginDefinition(\n  pluginDefinition: PluginDefinition,\n): pluginDefinition is CJSPluginDefinition {\n  return (pluginDefinition as CJSPluginDefinition).cjsUrl !== undefined\n}\n\nexport interface PluginDefinition\n  extends Partial<UMDPluginDefinition>,\n    Partial<LegacyUMDPluginDefinition>,\n    Partial<ESMPluginDefinition>,\n    Partial<CJSPluginDefinition> {}\n\nexport interface PluginRecord {\n  plugin: PluginConstructor\n  definition: PluginDefinition\n}\n\nexport interface LoadedPlugin {\n  default: PluginConstructor\n}\n\nfunction getGlobalObject(): Window {\n  // Based on window-or-global\n  // https://github.com/purposeindustries/window-or-global/blob/322abc71de0010c9e5d9d0729df40959e1ef8775/lib/index.js\n  return (\n    // eslint-disable-next-line no-restricted-globals\n    (typeof self === 'object' && self.self === self && self) ||\n    (typeof global === 'object' && global.global === global && global) ||\n    // @ts-ignore\n    this\n  )\n}\n\nfunction isInWebWorker(globalObject: ReturnType<typeof getGlobalObject>) {\n  return Boolean('WorkerGlobalScope' in globalObject)\n}\n\nexport default class PluginLoader {\n  definitions: PluginDefinition[] = []\n\n  fetchESM?: (url: string) => Promise<unknown>\n  fetchCJS?: (url: string) => Promise<LoadedPlugin>\n\n  constructor(\n    pluginDefinitions: PluginDefinition[] = [],\n    args?: {\n      fetchESM?: (url: string) => Promise<unknown>\n      fetchCJS?: (url: string) => Promise<LoadedPlugin>\n    },\n  ) {\n    this.fetchESM = args?.fetchESM\n    this.fetchCJS = args?.fetchCJS\n    this.definitions = JSON.parse(JSON.stringify(pluginDefinitions))\n  }\n\n  loadScript(scriptUrl: string): Promise<void> {\n    const globalObject = getGlobalObject()\n    if (!isInWebWorker(globalObject)) {\n      return domLoadScript(scriptUrl)\n    }\n\n    // @ts-ignore\n    if (globalObject && globalObject.importScripts) {\n      return new Promise((resolve, reject) => {\n        try {\n          // @ts-ignore\n          globalObject.importScripts(scriptUrl)\n        } catch (error) {\n          reject(error || new Error(`failed to load ${scriptUrl}`))\n          return\n        }\n        resolve()\n      })\n    }\n    throw new Error(\n      'cannot figure out how to load external JS scripts in this environment',\n    )\n  }\n\n  async loadCJSPlugin({ cjsUrl }: CJSPluginDefinition): Promise<LoadedPlugin> {\n    let parsedUrl: URL\n    try {\n      parsedUrl = new URL(cjsUrl, getGlobalObject().location.href)\n    } catch (error) {\n      console.error(error)\n      throw new Error(`Error parsing URL: ${cjsUrl}`)\n    }\n    if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n      throw new Error(\n        `Cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n      )\n    }\n    if (!this.fetchCJS) {\n      throw new Error('No fetchCJS callback provided')\n    }\n\n    return this.fetchCJS(parsedUrl.href)\n  }\n\n  async loadESMPlugin(pluginDefinition: ESMPluginDefinition) {\n    let parsedUrl: URL\n    try {\n      parsedUrl = new URL(\n        pluginDefinition.esmUrl,\n        getGlobalObject().location.href,\n      )\n    } catch (error) {\n      console.error(error)\n      throw new Error(`Error parsing URL: ${pluginDefinition.esmUrl}`)\n    }\n    if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n      throw new Error(\n        `cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n      )\n    }\n    const plugin = (await this.fetchESM?.(parsedUrl.href)) as\n      | LoadedPlugin\n      | undefined\n    if (!plugin) {\n      throw new Error(`Could not load ESM plugin: ${parsedUrl}`)\n    }\n    return plugin\n  }\n\n  async loadUMDPlugin(\n    pluginDefinition: UMDPluginDefinition | LegacyUMDPluginDefinition,\n  ) {\n    const umdUrl =\n      'url' in pluginDefinition ? pluginDefinition.url : pluginDefinition.umdUrl\n    let parsedUrl: URL\n    try {\n      parsedUrl = new URL(umdUrl, getGlobalObject().location.href)\n    } catch (error) {\n      console.error(error)\n      throw new Error(`Error parsing URL: ${umdUrl}`)\n    }\n    if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n      throw new Error(\n        `cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n      )\n    }\n    await this.loadScript(parsedUrl.href)\n    const moduleName = pluginDefinition.name\n    const umdName = `JBrowsePlugin${moduleName}`\n    const globalObject = getGlobalObject()\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const plugin = (globalObject as any)[umdName] as\n      | { default: PluginConstructor }\n      | undefined\n    if (!plugin) {\n      throw new Error(\n        `Failed to load UMD bundle for ${moduleName}, ${globalObject.constructor.name}.${umdName} is undefined`,\n      )\n    }\n    return plugin\n  }\n\n  async loadPlugin(definition: PluginDefinition): Promise<PluginConstructor> {\n    let plugin: LoadedPlugin\n    if (isElectron && isCJSPluginDefinition(definition)) {\n      plugin = await this.loadCJSPlugin(definition)\n    } else if (isESMPluginDefinition(definition)) {\n      plugin = await this.loadESMPlugin(definition)\n    } else if (isUMDPluginDefinition(definition)) {\n      plugin = await this.loadUMDPlugin(definition)\n    } else if (!isElectron && isCJSPluginDefinition(definition)) {\n      throw new Error(\n        `Only CommonJS plugin found, but not in a NodeJS environment: ${JSON.stringify(\n          definition,\n        )}`,\n      )\n    } else {\n      throw new Error(\n        `Could not determine plugin type: ${JSON.stringify(definition)}`,\n      )\n    }\n    return plugin.default\n  }\n\n  installGlobalReExports(target: WindowOrWorkerGlobalScope) {\n    // @ts-ignore\n    target.JBrowseExports = Object.fromEntries(\n      Object.entries(ReExports).map(([moduleName, module]) => {\n        return [moduleName, module]\n      }),\n    )\n  }\n\n  async load() {\n    return Promise.all(\n      this.definitions.map(async definition => ({\n        plugin: await this.loadPlugin(definition),\n        definition,\n      })),\n    )\n  }\n}\n","import { types, addDisposer, Instance, SnapshotOut } from 'mobx-state-tree'\nimport { autorun } from 'mobx'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport PluginLoader, {\n  PluginDefinition,\n  PluginRecord,\n  isUMDPluginDefinition,\n  isCJSPluginDefinition,\n  isESMPluginDefinition,\n} from '@jbrowse/core/PluginLoader'\nimport { fromUrlSafeB64 } from './util'\nimport { readSessionFromDynamo } from './sessionSharing'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration/configurationSchema'\nimport shortid from 'shortid'\n\nfunction addRelativeUris(\n  config: SnapshotOut<AnyConfigurationModel>,\n  configUri: URL,\n) {\n  if (typeof config === 'object') {\n    for (const key of Object.keys(config)) {\n      if (typeof config[key] === 'object') {\n        addRelativeUris(config[key], configUri)\n      } else if (key === 'uri') {\n        config.baseUri = configUri.href\n      }\n    }\n  }\n}\n\n// raw readConf alternative for before conf is initialized\nfunction readConf(\n  { configuration = {} }: { configuration?: { [key: string]: string } },\n  attr: string,\n  def: string,\n) {\n  return configuration[attr] || def\n}\n\nasync function fetchPlugins() {\n  const response = await fetch('https://jbrowse.org/plugin-store/plugins.json')\n  if (!response.ok) {\n    throw new Error(\n      `HTTP ${response.status} ${response.statusText} fetching plugins`,\n    )\n  }\n  return response.json() as Promise<{ plugins: PluginDefinition[] }>\n}\n\nasync function checkPlugins(pluginsToCheck: PluginDefinition[]) {\n  const storePlugins = await fetchPlugins()\n  return pluginsToCheck.every(p => {\n    if (isUMDPluginDefinition(p)) {\n      return Boolean(\n        storePlugins.plugins.find(\n          storePlugin =>\n            isUMDPluginDefinition(storePlugin) &&\n            (('url' in storePlugin &&\n              'url' in p &&\n              storePlugin.url === p.url) ||\n              ('umdUrl' in storePlugin &&\n                'umdUrl' in p &&\n                storePlugin.umdUrl === p.umdUrl)),\n        ),\n      )\n    }\n    if (isESMPluginDefinition(p)) {\n      return Boolean(\n        storePlugins.plugins.find(\n          storePlugin =>\n            isESMPluginDefinition(storePlugin) &&\n            storePlugin.esmUrl === p.esmUrl,\n        ),\n      )\n    }\n    if (isCJSPluginDefinition(p)) {\n      return Boolean(\n        storePlugins.plugins.find(\n          storePlugin =>\n            isCJSPluginDefinition(storePlugin) &&\n            storePlugin.cjsUrl === p.cjsUrl,\n        ),\n      )\n    }\n    return false\n  })\n}\n\nconst SessionLoader = types\n  .model({\n    configPath: types.maybe(types.string),\n    sessionQuery: types.maybe(types.string),\n    password: types.maybe(types.string),\n    adminKey: types.maybe(types.string),\n    loc: types.maybe(types.string),\n    sessionTracks: types.maybe(types.string),\n    assembly: types.maybe(types.string),\n    tracks: types.maybe(types.string),\n  })\n  .volatile(() => ({\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    blankSession: false as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    sessionTriaged: undefined as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    shareWarningOpen: false as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    configSnapshot: undefined as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    sessionSnapshot: undefined as any,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    sessionSpec: undefined as any,\n    runtimePlugins: [] as PluginRecord[],\n    sessionPlugins: [] as PluginRecord[],\n    sessionError: undefined as unknown,\n    configError: undefined as unknown,\n    bc1:\n      window.BroadcastChannel &&\n      new window.BroadcastChannel('jb_request_session'),\n    bc2:\n      window.BroadcastChannel &&\n      new window.BroadcastChannel('jb_respond_session'),\n  }))\n  .views(self => ({\n    get isSharedSession() {\n      return !!self.sessionQuery?.startsWith('share-')\n    },\n\n    get isSpecSession() {\n      return !!self.sessionQuery?.startsWith('spec-')\n    },\n\n    get isJb1StyleSession() {\n      return !!self.loc\n    },\n\n    get isEncodedSession() {\n      return !!self.sessionQuery?.startsWith('encoded-')\n    },\n\n    get isJsonSession() {\n      return !!self.sessionQuery?.startsWith('json-')\n    },\n\n    get isLocalSession() {\n      return !!self.sessionQuery?.startsWith('local-')\n    },\n\n    get ready() {\n      return Boolean(this.isSessionLoaded && !self.configError)\n    },\n\n    get error() {\n      return self.configError || self.sessionError\n    },\n\n    get isSessionLoaded() {\n      return Boolean(\n        self.sessionError ||\n          self.sessionSnapshot ||\n          self.blankSession ||\n          self.sessionSpec,\n      )\n    },\n    get isConfigLoaded() {\n      return Boolean(self.configError || self.configSnapshot)\n    },\n\n    get sessionTracksParsed() {\n      return self.sessionTracks ? JSON.parse(self.sessionTracks) : []\n    },\n  }))\n  .actions(self => ({\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,\n    setSessionQuery(session?: any) {\n      self.sessionQuery = session\n    },\n    setConfigError(error: unknown) {\n      self.configError = error\n    },\n    setSessionError(error: unknown) {\n      self.sessionError = error\n    },\n    setRuntimePlugins(plugins: PluginRecord[]) {\n      self.runtimePlugins = plugins\n    },\n    setSessionPlugins(plugins: PluginRecord[]) {\n      self.sessionPlugins = plugins\n    },\n    setConfigSnapshot(snap: unknown) {\n      self.configSnapshot = snap\n    },\n\n    setBlankSession(flag: boolean) {\n      self.blankSession = flag\n    },\n    setSessionTriaged(args?: {\n      snap: unknown\n      origin: string\n      reason: { url?: string }[]\n    }) {\n      self.sessionTriaged = args\n    },\n    setSessionSnapshotSuccess(snap: unknown) {\n      self.sessionSnapshot = snap\n    },\n  }))\n  .actions(self => ({\n    async fetchPlugins(config: { plugins: PluginDefinition[] }) {\n      try {\n        const pluginLoader = new PluginLoader(config.plugins, {\n          fetchESM: url => import(/* webpackIgnore:true */ url),\n        })\n        pluginLoader.installGlobalReExports(window)\n        const runtimePlugins = await pluginLoader.load()\n        self.setRuntimePlugins([...runtimePlugins])\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n    async fetchSessionPlugins(snap: { sessionPlugins?: PluginDefinition[] }) {\n      try {\n        const pluginLoader = new PluginLoader(snap.sessionPlugins || [], {\n          fetchESM: url => import(/* webpackIgnore:true */ url),\n        })\n        pluginLoader.installGlobalReExports(window)\n        const plugins = await pluginLoader.load()\n        self.setSessionPlugins([...plugins])\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n\n    // passed\n    async setSessionSnapshot(\n      snap: { sessionPlugins?: PluginDefinition[] },\n      userAcceptedConfirmation?: boolean,\n    ) {\n      try {\n        const { sessionPlugins = [] } = snap\n        const sessionPluginsAllowed = await checkPlugins(sessionPlugins)\n        if (sessionPluginsAllowed || userAcceptedConfirmation) {\n          await this.fetchSessionPlugins(snap)\n          self.setSessionSnapshotSuccess(snap)\n        } else {\n          self.setSessionTriaged({\n            snap,\n            origin: 'session',\n            reason: sessionPlugins,\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n\n    async fetchConfig() {\n      const { configPath = 'config.json' } = self\n      const text = await openLocation({\n        uri: configPath,\n        locationType: 'UriLocation',\n      }).readFile('utf8')\n      const config = JSON.parse(text)\n      const configUri = new URL(configPath, window.location.href)\n      addRelativeUris(config, configUri)\n\n      // cross origin config check\n      if (configUri.hostname !== window.location.hostname) {\n        const configPlugins = config.plugins || []\n        const configPluginsAllowed = await checkPlugins(configPlugins)\n        if (!configPluginsAllowed) {\n          self.setSessionTriaged({\n            snap: config,\n            origin: 'config',\n            reason: configPlugins,\n          })\n        } else {\n          await this.fetchPlugins(config)\n          self.setConfigSnapshot(config)\n        }\n      } else {\n        await this.fetchPlugins(config)\n        self.setConfigSnapshot(config)\n      }\n    },\n\n    async fetchSessionStorageSession() {\n      const sessionStr = sessionStorage.getItem('current')\n      const query = (self.sessionQuery as string).replace('local-', '')\n\n      // check if\n      if (sessionStr) {\n        const sessionSnap = JSON.parse(sessionStr).session || {}\n        if (query === sessionSnap.id) {\n          await this.setSessionSnapshot(sessionSnap)\n          return\n        }\n      }\n      if (self.bc1) {\n        self.bc1.postMessage(query)\n        const resultP = new Promise((resolve, reject) => {\n          if (self.bc2) {\n            self.bc2.onmessage = msg => {\n              resolve(msg.data)\n            }\n          }\n          setTimeout(() => reject(), 1000)\n        })\n\n        try {\n          const result = await resultP\n          // @ts-ignore\n          await self.setSessionSnapshot({ ...result, id: shortid() })\n          return\n        } catch (e) {\n          // the broadcast channels did not find the session in another tab\n          // clear session param, so just ignore\n        }\n      }\n      throw new Error('Local storage session not found')\n    },\n\n    async fetchSharedSession() {\n      const defaultURL = 'https://share.jbrowse.org/api/v1/'\n      const decryptedSession = await readSessionFromDynamo(\n        `${readConf(self.configSnapshot, 'shareURL', defaultURL)}load`,\n        self.sessionQuery || '',\n        self.password || '',\n      )\n\n      const session = JSON.parse(await fromUrlSafeB64(decryptedSession))\n\n      await this.setSessionSnapshot({ ...session, id: shortid() })\n    },\n\n    async decodeEncodedUrlSession() {\n      const session = JSON.parse(\n        // @ts-ignore\n        await fromUrlSafeB64(self.sessionQuery.replace('encoded-', '')),\n      )\n      await this.setSessionSnapshot({ ...session, id: shortid() })\n    },\n\n    decodeSessionSpec() {\n      if (!self.sessionQuery) {\n        return\n      }\n      self.sessionSpec = JSON.parse(self.sessionQuery.replace('spec-', ''))\n    },\n\n    decodeJb1StyleSession() {\n      const { loc, tracks, assembly, sessionTracksParsed: sessionTracks } = self\n      if (loc) {\n        self.sessionSpec = {\n          sessionTracks,\n          views: [\n            {\n              type: 'LinearGenomeView',\n              tracks: tracks?.split(','),\n              sessionTracks,\n              loc,\n              assembly,\n            },\n          ],\n        }\n      }\n    },\n\n    async decodeJsonUrlSession() {\n      // @ts-ignore\n      const session = JSON.parse(self.sessionQuery.replace('json-', ''))\n      await this.setSessionSnapshot({ ...session.session, id: shortid() })\n    },\n\n    async afterCreate() {\n      try {\n        // rename the current autosave from previously loaded jbrowse session\n        // into previousAutosave on load\n        const { configPath } = self\n        const lastAutosave = localStorage.getItem(`autosave-${configPath}`)\n        if (lastAutosave) {\n          localStorage.setItem(`previousAutosave-${configPath}`, lastAutosave)\n        }\n      } catch (e) {\n        console.error('failed to create previousAutosave', e)\n      }\n\n      try {\n        // fetch config\n        await this.fetchConfig()\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n        return\n      }\n\n      addDisposer(\n        self,\n        autorun(async () => {\n          try {\n            const {\n              isLocalSession,\n              isEncodedSession,\n              isSpecSession,\n              isSharedSession,\n              isJsonSession,\n              isJb1StyleSession,\n              sessionQuery,\n              configSnapshot,\n            } = self\n            if (!configSnapshot) {\n              return\n            }\n\n            if (isSharedSession) {\n              await this.fetchSharedSession()\n            } else if (isSpecSession) {\n              this.decodeSessionSpec()\n            } else if (isJb1StyleSession) {\n              this.decodeJb1StyleSession()\n            } else if (isEncodedSession) {\n              await this.decodeEncodedUrlSession()\n            } else if (isJsonSession) {\n              await this.decodeJsonUrlSession()\n            } else if (isLocalSession) {\n              await this.fetchSessionStorageSession()\n            } else if (sessionQuery) {\n              // if there was a sessionQuery and we don't recognize it\n              throw new Error('unrecognized session format')\n            } else {\n              // placeholder for session loaded, but none found\n              self.setBlankSession(true)\n            }\n            if (self.bc1) {\n              self.bc1.onmessage = msg => {\n                const ret =\n                  JSON.parse(sessionStorage.getItem('current') || '{}')\n                    .session || {}\n                if (ret.id === msg.data) {\n                  if (self.bc2) {\n                    self.bc2.postMessage(ret)\n                  }\n                }\n              }\n            }\n          } catch (e) {\n            console.error(e)\n            self.setSessionError(e)\n          }\n        }),\n      )\n    },\n  }))\n\nexport type SessionLoaderModel = Instance<typeof SessionLoader>\n\nexport default SessionLoader\n\ninterface ViewSpec {\n  type: string\n  tracks?: string[]\n  assembly: string\n  loc: string\n}\n\n// use extension point named e.g. LaunchView-LinearGenomeView to initialize an\n// LGV session\nexport function loadSessionSpec(\n  {\n    views,\n    sessionTracks = [],\n  }: {\n    views: ViewSpec[]\n    sessionTracks: unknown[]\n  },\n  pluginManager: PluginManager,\n) {\n  return async () => {\n    const { rootModel } = pluginManager\n    if (!rootModel) {\n      throw new Error('rootModel not initialized')\n    }\n    try {\n      // @ts-ignore\n      rootModel.setSession({\n        name: `New session ${new Date().toLocaleString()}`,\n      })\n\n      // @ts-ignore\n      sessionTracks.forEach(track => rootModel.session.addTrackConf(track))\n\n      await Promise.all(\n        views.map(view =>\n          pluginManager.evaluateAsyncExtensionPoint('LaunchView-' + view.type, {\n            ...view,\n            session: rootModel.session,\n          }),\n        ),\n      )\n    } catch (e) {\n      console.error(e)\n      rootModel.session?.notify(`${e}`)\n    }\n  }\n}\n","import React, { lazy, useEffect, useState, Suspense } from 'react'\nimport PluginManager, { PluginLoadRecord } from '@jbrowse/core/PluginManager'\nimport { observer } from 'mobx-react'\nimport { inDevelopment } from '@jbrowse/core/util'\nimport { ErrorBoundary, FallbackProps } from 'react-error-boundary'\nimport {\n  StringParam,\n  QueryParamProvider,\n  useQueryParam,\n} from 'use-query-params'\nimport { FatalErrorDialog } from '@jbrowse/core/ui'\nimport '@fontsource/roboto'\nimport 'requestidlecallback-polyfill'\nimport shortid from 'shortid'\nimport { doAnalytics } from '@jbrowse/core/util/analytics'\n\n// locals\nimport Loading from './Loading'\nimport corePlugins from './corePlugins'\nimport JBrowse from './JBrowse'\nimport JBrowseRootModelFactory from './rootModel'\nimport packageJSON from '../package.json'\nimport factoryReset from './factoryReset'\nimport SessionLoader, {\n  SessionLoaderModel,\n  loadSessionSpec,\n} from './SessionLoader'\n\n// lazy components\nconst SessionWarningDialog = lazy(() => import('./SessionWarningDialog'))\nconst ConfigWarningDialog = lazy(() => import('./ConfigWarningDialog'))\nconst ErrorMessage = lazy(() => import('@jbrowse/core/ui/ErrorMessage'))\nconst StartScreen = lazy(() => import('./StartScreen'))\n\nfunction NoConfigMessage() {\n  const links = [\n    ['test_data/volvox/config.json', 'Volvox sample data'],\n    ['test_data/config.json', 'Human basic'],\n    ['test_data/config_demo.json', 'Human sample data'],\n    ['test_data/tomato/config.json', 'Tomato SVs'],\n    ['test_data/breakpoint/config.json', 'Breakpoint'],\n    ['test_data/config_dotplot.json', 'Grape/Peach dotplot'],\n    ['test_data/config_synteny_grape_peach.json', 'Grape/Peach synteny'],\n    ['test_data/yeast_synteny/config.json', 'Yeast synteny'],\n    ['test_data/config_many_contigs.json', 'Many contigs'],\n    ['test_data/config_honeybee.json', 'Honeybee'],\n    ['test_data/config_wormbase.json', 'Wormbase'],\n    ['test_data/wgbs/config.json', 'WGBS methylation'],\n  ]\n  return (\n    <div>\n      <h4>\n        Configuration not found. You may have arrived here if you requested a\n        config that does not exist or you have not set up your JBrowse yet.\n      </h4>\n      {inDevelopment ? (\n        <>\n          <div>Sample JBrowse configs:</div>\n          <ul>\n            {links.map(([link, name]) => {\n              const { href, search } = window.location\n              const { config, ...rest } = Object.fromEntries(\n                new URLSearchParams(search),\n              )\n              const root = href.split('?')[0]\n              const params = new URLSearchParams(\n                Object.entries({\n                  ...rest,\n                  config: link,\n                }),\n              )\n              return (\n                <li key={name}>\n                  <a href={`${root}?${params}`}>{name}</a>\n                </li>\n              )\n            })}\n          </ul>\n        </>\n      ) : (\n        <>\n          <div>Sample JBrowse config:</div>\n          <ul>\n            <li>\n              <a href=\"?config=test_data/volvox/config.json\">\n                Volvox sample data\n              </a>\n            </li>\n          </ul>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport function Loader({\n  initialTimestamp = Date.now(),\n}: {\n  initialTimestamp?: number\n}) {\n  // return value if defined, else convert null to undefined for use with\n  // types.maybe\n  const load = (param: string | null | undefined) =>\n    param === null ? undefined : param\n\n  const Str = StringParam\n\n  const [config] = useQueryParam('config', Str)\n  const [session] = useQueryParam('session', Str)\n  const [adminKey] = useQueryParam('adminKey', Str)\n  const [password, setPassword] = useQueryParam('password', Str)\n  const [loc, setLoc] = useQueryParam('loc', Str)\n  const [sessionTracks, setSessionTracks] = useQueryParam('sessionTracks', Str)\n  const [assembly, setAssembly] = useQueryParam('assembly', Str)\n  const [tracks, setTracks] = useQueryParam('tracks', Str)\n\n  const loader = SessionLoader.create({\n    configPath: load(config),\n    sessionQuery: load(session),\n    password: load(password),\n    adminKey: load(adminKey),\n    loc: load(loc),\n    assembly: load(assembly),\n    tracks: load(tracks),\n    sessionTracks: load(sessionTracks),\n  })\n\n  useEffect(() => {\n    setLoc(undefined)\n    setTracks(undefined)\n    setAssembly(undefined)\n    setPassword(undefined)\n    setSessionTracks(undefined)\n  }, [setAssembly, setLoc, setTracks, setPassword, setSessionTracks])\n\n  return (\n    <Renderer\n      loader={loader}\n      initialTimestamp={initialTimestamp}\n      initialSessionQuery={session}\n    />\n  )\n}\n\nconst SessionTriaged = ({\n  loader,\n  handleClose,\n}: {\n  loader: SessionLoaderModel\n  handleClose: Function\n}) => {\n  return (\n    <Suspense fallback={<div />}>\n      <SessionWarningDialog\n        onConfirm={async () => {\n          const session = JSON.parse(JSON.stringify(loader.sessionTriaged.snap))\n\n          // second param true says we passed user confirmation\n          await loader.setSessionSnapshot({ ...session, id: shortid() }, true)\n          handleClose()\n        }}\n        onCancel={() => {\n          loader.setBlankSession(true)\n          handleClose()\n        }}\n        reason={loader.sessionTriaged.reason}\n      />\n    </Suspense>\n  )\n}\n\nconst ErrMessage = ({ err }: { err: unknown }) => {\n  return (\n    <>\n      <NoConfigMessage />\n      {`${err}`.match(/HTTP 404 fetching config.json/) ? (\n        <div\n          style={{\n            margin: 8,\n            padding: 8,\n            border: '1px solid black',\n            background: '#9f9',\n          }}\n        >\n          No config.json found. If you want to learn how to complete your setup,\n          visit our{' '}\n          <a href=\"https://jbrowse.org/jb2/docs/quickstarts/quickstart_web/\">\n            quick start guide\n          </a>\n          .\n        </div>\n      ) : (\n        <Suspense fallback={<div>Loading...</div>}>\n          <ErrorMessage error={err} />\n        </Suspense>\n      )}\n    </>\n  )\n}\n\nfunction ConfigTriaged({\n  loader,\n  handleClose,\n}: {\n  loader: SessionLoaderModel\n  handleClose: Function\n}) {\n  return (\n    <Suspense fallback={<div />}>\n      <ConfigWarningDialog\n        onConfirm={async () => {\n          const session = JSON.parse(JSON.stringify(loader.sessionTriaged.snap))\n          await loader.fetchPlugins(session)\n          loader.setConfigSnapshot({ ...session, id: shortid() })\n          handleClose()\n        }}\n        onCancel={() => {\n          factoryReset()\n          handleClose()\n        }}\n        reason={loader.sessionTriaged.reason}\n      />\n    </Suspense>\n  )\n}\n\nconst Renderer = observer(\n  ({\n    loader,\n    initialTimestamp,\n    initialSessionQuery,\n  }: {\n    loader: SessionLoaderModel\n    initialTimestamp: number\n    initialSessionQuery?: string | null\n  }) => {\n    const { sessionError, configError, ready, shareWarningOpen } = loader\n    const [pm, setPluginManager] = useState<PluginManager>()\n    const [error, setError] = useState<unknown>()\n\n    // only create the pluginManager/rootModel \"on mount\"\n    useEffect(() => {\n      try {\n        const {\n          runtimePlugins,\n          sessionPlugins,\n          adminKey,\n          configSnapshot,\n          sessionSnapshot,\n          configPath,\n          sessionSpec,\n        } = loader\n\n        if (ready) {\n          // it is ready when a session has loaded and when there is no config\n          // error Assuming that the query changes self.sessionError or\n          // self.sessionSnapshot or self.blankSession\n          const pluginManager = new PluginManager([\n            ...corePlugins.map(P => {\n              return {\n                plugin: new P(),\n                metadata: { isCore: true },\n              } as PluginLoadRecord\n            }),\n            ...runtimePlugins.map(({ plugin: P, definition }) => ({\n              plugin: new P(),\n              definition,\n              metadata: { url: definition.url },\n            })),\n            ...sessionPlugins.map(({ plugin: P, definition }) => ({\n              plugin: new P(),\n              definition,\n              metadata: { url: definition.url },\n            })),\n          ])\n          pluginManager.createPluggableElements()\n          const RootModel = JBrowseRootModelFactory(pluginManager, !!adminKey)\n\n          if (configSnapshot) {\n            const rootModel = RootModel.create(\n              {\n                jbrowse: configSnapshot,\n                assemblyManager: {},\n                version: packageJSON.version,\n                configPath,\n              },\n              { pluginManager },\n            )\n            if (\n              !rootModel.jbrowse.configuration.rpc.drivers.get(\n                'WebWorkerRpcDriver',\n              )\n            ) {\n              rootModel.jbrowse.configuration.rpc.addDriverConfig(\n                'WebWorkerRpcDriver',\n                { type: 'WebWorkerRpcDriver' },\n              )\n            }\n            if (!loader.configSnapshot?.configuration?.rpc?.defaultDriver) {\n              rootModel.jbrowse.configuration.rpc.defaultDriver.set(\n                'WebWorkerRpcDriver',\n              )\n            }\n\n            let afterInitializedCb = () => {}\n\n            // in order: saves the previous autosave for recovery, tries to\n            // load the local session if session in query, or loads the default\n            // session\n            try {\n              if (sessionError) {\n                rootModel.setDefaultSession()\n                // make typescript happy by checking for session after\n                // setDefaultSession, even though we know this exists now\n                if (rootModel.session) {\n                  rootModel.session.notify(\n                    `Error loading session: ${sessionError}. If you\n                received this URL from another user, request that they send you\n                a session generated with the \"Share\" button instead of copying\n                and pasting their URL`,\n                  )\n                }\n              } else if (sessionSnapshot && !shareWarningOpen) {\n                rootModel.setSession(sessionSnapshot)\n              } else if (sessionSpec) {\n                afterInitializedCb = loadSessionSpec(sessionSpec, pluginManager)\n              } else if (rootModel.jbrowse.defaultSession?.views?.length) {\n                rootModel.setDefaultSession()\n              }\n            } catch (e) {\n              rootModel.setDefaultSession()\n              const str = `${e}`\n              const errorMessage = str\n                .replace('[mobx-state-tree] ', '')\n                .replace(/\\(.+/, '')\n              rootModel.session?.notify(\n                `Session could not be loaded. ${\n                  errorMessage.length > 1000\n                    ? `${errorMessage.slice(0, 1000)}...see more in console`\n                    : errorMessage\n                }`,\n              )\n              console.error(e)\n            }\n\n            // send analytics\n            doAnalytics(rootModel, initialTimestamp, initialSessionQuery)\n\n            pluginManager.setRootModel(rootModel)\n            pluginManager.configure()\n            setPluginManager(pluginManager)\n            afterInitializedCb()\n          }\n        }\n      } catch (e) {\n        setError(e)\n        console.error(e)\n      }\n    }, [\n      loader,\n      shareWarningOpen,\n      ready,\n      sessionError,\n      initialTimestamp,\n      initialSessionQuery,\n    ])\n\n    const err = configError || error\n\n    if (err) {\n      return <ErrMessage err={err} />\n    }\n\n    if (loader.sessionTriaged) {\n      return loader.sessionTriaged.origin === 'session' ? (\n        <SessionTriaged\n          loader={loader}\n          handleClose={() => loader.setSessionTriaged(undefined)}\n        />\n      ) : (\n        <ConfigTriaged\n          loader={loader}\n          handleClose={() => loader.setSessionTriaged(undefined)}\n        />\n      )\n    }\n    if (pm) {\n      if (!pm.rootModel?.session) {\n        return (\n          <Suspense fallback={<div>Loading...</div>}>\n            <StartScreen\n              rootModel={pm.rootModel}\n              onFactoryReset={factoryReset}\n            />\n          </Suspense>\n        )\n      }\n      return <JBrowse pluginManager={pm} />\n    }\n    return <Loading />\n  },\n)\n\nconst PlatformSpecificFatalErrorDialog = (props: FallbackProps) => {\n  return (\n    <FatalErrorDialog\n      resetButtonText=\"Reset Session\"\n      onFactoryReset={factoryReset}\n      {...props}\n    />\n  )\n}\nconst LoaderWrapper = ({ initialTimestamp }: { initialTimestamp: number }) => {\n  return (\n    // @ts-ignore\n    <ErrorBoundary FallbackComponent={PlatformSpecificFatalErrorDialog}>\n      <QueryParamProvider>\n        <Loader initialTimestamp={initialTimestamp} />\n      </QueryParamProvider>\n    </ErrorBoundary>\n  )\n}\n\nexport default LoaderWrapper\n"],"names":["abortSignalCounter","abortSignalIds","WeakMap","serializeAbortSignal","signal","callfunc","abortSignalId","get","set","addEventListener","signalId","undefined","isRemoteAbortSignal","thing","surrogateAbortControllers","Map","deserializeAbortSignal","surrogateAbortController","AbortController","useStyles","makeStyles","importFormEntry","minWidth","AssemblySelector","observer","session","onChange","selected","InputProps","extra","classes","assemblyNames","assemblyManager","config","URLSearchParams","window","location","search","useLocalStorage","host","pathname","join","lastSelected","setLastSelected","selection","includes","useEffect","error","length","select","label","variant","helperText","value","inputProps","event","target","disabled","className","map","name","assembly","displayName","getConf","CascadingContext","React","parentPopupState","rootPopupState","CascadingMenuItem","onClick","props","useContext","Error","handleClick","useCallback","close","CascadingSubmenu","title","inset","popupId","popupState","usePopupState","bindHover","bindFocus","primary","CascadingSubmenuHover","anchorOrigin","vertical","horizontal","transformOrigin","onMenuItemClick","menuItems","context","useMemo","Provider","bindMenu","CascadingMenu","EndDecoration","item","type","checked","CascadingMenuList","hasIcon","some","menuItem","icon","idx","subMenu","component","callback","Boolean","secondary","subLabel","style","flexGrow","theme","input","inputBase","typography","top","left","position","whiteSpace","visibility","inputRoot","padding","spacing","inputFocused","borderStyle","borderWidth","EditableTypography","ref","setValue","other","useState","editedValue","setEditedValue","width","setWidth","sizerNode","setSizerNode","inputNode","setInputNode","blur","setBlur","useTheme","clientWidth","node","inputRef","root","focused","onKeyDown","key","onBlur","snapshotError","str","findStr","indexOf","trim","slice","match","match2","margin","overflow","maxHeight","background","border","JSON","stringify","parse","onClose","open","onFactoryReset","handleDialogClose","action","id","color","ToggleButtonWithTooltip","children","Tooltip","ToggleButton","shorten","len","substring","description","rootModel","setLocation","fileOrUrl","isUriLocation","internetAccountId","toggleButtonValue","setToggleButtonValue","accts","isAppRootModel","internetAccounts","shownAccts","setShownAccts","hiddenAccts","setHiddenAccts","anchorEl","setAnchorEl","selectedAcct","find","ia","setLocationWithAccount","locationInput","UrlChooser","selectorLabel","LocalFileChooser","SelectorComponent","Box","display","InputLabel","shrink","flexDirection","ToggleButtonGroup","exclusive","_event","newState","toggleContents","ArrowDropDown","Menu","acct","MenuItem","prev","FormHelperText","paper","overflowY","overflowX","minHeight","maxWidth","outline","menuItemEndDecoration","height","MenuItemEndDecoration","MenuPage","subMenuAnchorEl","setSubMenuAnchorEl","openSubMenuIdx","setOpenSubMenuIdx","isSubMenuOpen","setIsSubMenuOpen","selectedMenuItemIdx","setSelectedMenuItemIdx","setPosition","paperRef","useRef","timer","shouldSubMenuBeOpen","setTimeout","clearTimeout","rect","getBoundingClientRect","menuItemStyle","ListContents","autoFocusItem","dense","sort","a","b","priority","endDecoration","Icon","onMouseMove","e","currentTarget","document","activeElement","focus","currentIdx","findLastIndex","findPreviousValidIdx","findIndex","findNextValidIdx","in","elevation","transitionDuration","BackdropProps","invisible","horizontalHandle","cursor","verticalHandle","flexbox_verticalHandle","alignSelf","flexbox_horizontalHandle","onDrag","flexbox","originalClassName","mouseDragging","setMouseDragging","prevPos","cx","mouseMove","preventDefault","pos","clientX","clientY","distance","current","mouseUp","removeEventListener","onMouseDown","role","added","full","RegExp","tag","SanitizedHTML","html","test","escapeHTML","dompurify","tagName","setAttribute","dangerouslySetInnerHTML","__html","refTheme","createTheme","jbrowseDefaultPalette","main","tertiary","palette","augmentColor","quaternary","stopCodon","startCodon","bases","A","green","C","blue","G","amber","T","red","createJBrowseDefaultProps","components","MuiButton","defaultProps","size","MuiAccordion","disableGutters","TransitionProps","timeout","MuiFilledInput","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiAutocomplete","MuiInputLabel","MuiToolbar","MuiListItem","MuiOutlinedInput","MuiFab","MuiTable","MuiMenuList","MuiMenuItem","MuiTextField","createJBrowseDefaultOverrides","generatedPalette","deepmerge","styleOverrides","colorSecondary","textSecondary","backgroundColor","MuiLink","MuiAccordionSummary","content","contrastText","jbrowseBaseTheme","fontSize","createJBrowseTheme","getColors","midnight","forrest","grape","mandarin","gray","Logomark","viewBox","LogoFull","Text","colors","fill","d","transform","fontFamily","fabLeft","zIndex","bottom","fabRight","right","menuBarAndComponents","gridColumn","gridTemplateRows","menuBar","gridRow","appBar","grow","light","borderColor","selectPaper","Logo","configuration","logoPath","readConfObject","uri","src","alt","HeaderButtons","pluginManager","getEnv","viewTypes","getElementTypeRecord","all","visibleWidget","drawerWidth","minimized","activeWidgets","savedSessionNames","menus","views","drawerPosition","grid","drawerVisible","gridTemplateColumns","filter","f","DrawerWidget","DialogComponent","Suspense","fallback","DialogProps","AppBar","Toolbar","menu","DropDownMenu","menuTitle","arrow","newName","notify","renameCurrentSession","view","viewType","getViewType","ReactComponent","ViewContainer","removeView","history","undo","model","getTrackType","Paper","Typography","Select","Button","addView","Fab","showWidgetDrawer","Launch","Snackbar","closeButton","grey","handleClose","Dialog","DialogTitle","IconButton","Close","Divider","DialogContent","DialogActions","clearView","autoFocus","PrerenderedCanvas","highResolutionScaling","imageData","blockKey","showSoftClip","done","setDone","featureCanvas","canvas","getContext","drawImageOntoCanvasContext","blockKeyStr","testId","hoverLabel","pointerEvents","offsetX","offsetY","feature","shown","setShown","handle","text","QuickLRU","options","maxSize","TypeError","maxAge","Number","POSITIVE_INFINITY","onEviction","cache","oldCache","_size","this","expiry","Date","now","delete","_deleteIfExpired","_getOrDeleteIfExpired","_getItemValue","_emitEvictions","_set","has","_moveToRecent","_peek","deleted","clear","newSize","items","_entriesAscending","removeCount","i","oldCacheSize","keys","Math","min","entriesAscending","callbackFunction","thisArgument","call","Symbol","iterator","toStringTag","AbortError","code","checkAbortSignal","AbortSignal","aborted","makeAbortError","ms","Promise","resolve","abortBreakPoint","DOMException","observeAbortSignal","fromEvent","Observable","isAbortException","exception","message","createCanvas","createImageBitmap","ImageBitmapType","serializedCommands","CanvasSequence","execute","drawImage","weHave","OffscreenCanvas","isNode","self","ImageBitmap","nodeCreateCanvas","dataUri","toDataURL","img","nodeImage","reject","onload","onerror","ctx","toJSON","containsNoTransferables","String","renderToAbstractCanvas","opts","cb","exportSVG","scaling","rasterizeLayers","fakeCtx","result","canvasRecordedData","scale","ceil","blobToDataURL","convertToBlob","xlinkHref","reactElement","isViewContainer","isStateTreeNode","isSessionModel","isSessionModelWithConfigEditing","isSessionWithAddTracks","isSessionModelWithWidgets","isSessionModelWithConnections","isSessionWithSessionPlugins","isSelectionContainer","isViewModel","isTrackModel","trackId","isDisplayModel","displayId","isTrackViewModel","isAbstractMenuManager","AuthNeededError","url","Object","setPrototypeOf","prototype","RetryError","isAuthNeededException","isRetryException","when","getter","timeoutId","finished","whenPromise","mobxWhen","finishTimeout","cancel","then","catch","err","whenPresent","val","PhasedScheduler","phaseCallbacks","phaseOrder","phase","push","forEach","phaseName","TypeRecord","typeName","baseClass","registeredTypes","t","values","PluginManager","initialPlugins","plugins","jexl","createJexlInstance","pluginMetadata","runtimePluginDefinitions","elementCreationSchedule","rendererTypes","RendererType","adapterTypes","AdapterType","textSearchAdapterTypes","TextSearchAdapterType","trackTypes","TrackType","displayTypes","DisplayType","connectionTypes","ConnectionType","ViewType","widgetTypes","WidgetType","rpcMethods","RpcMethodType","addTrackWidgets","AddTrackWorkflowType","internetAccountTypes","InternetAccountType","configured","extensionPoints","jbrequireCache","lib","ReExports","load","jbrequire","pack","default","addPlugin","plugin","CorePlugin","metadata","isCore","configurationSchemas","configurationSchema","Plugin","definition","install","p","getPlugin","run","configure","groupName","creationCallback","typeRecord","add","newElement","evaluateExtensionPoint","fieldName","types","pluggableTypes","isType","isModelType","console","warn","typeGroup","isBareConfigurationSchemaType","ConfigurationSchema","methodName","addElementType","track","getElementTypesInGroup","trackType","addDisplayType","newView","extensionPointName","callbacks","extendee","accumulator","initialTimeStamp","sessionQuery","multiAssemblyTracks","jbrowse","tracks","savedSessionCount","localStorage","ver","version","assemblies","stats","sessionTracks","split","screen","innerHeight","innerWidth","electron","isElectron","loadTime","jb2","qs","fetch","initialTimestamp","pluginNames","analyticsScript","gaData","index","metric1","round","analyticsScriptNode","createElement","innerHTML","getElementsByTagName","appendChild","doAnalytics","initialSessionQuery","writeAWSAnalytics","writeGAAnalytics","SetDefaultSession","lazy","AssemblyManager","exports","addConnectionType","configSchema","ucscConfigSchema","stateModel","ucscModelFactory","addWidgetType","heading","HierarchicalTrackSelectorConfigSchema","HierarchicalTrackSelectorStateModelFactory","AddTrackConfigSchema","AddTrackStateModelFactory","AddConnectionConfigSchema","AddConnectionStateModel","PluginStoreConfigSchema","PluginStoreStateModelFactory","_pluginManager","SVG","LinearGenomeView","Alignments","Authentication","Bed","CircularView","Config","DataManagement","DotplotView","GtfPlugin","Gff3","LegacyJBrowse","LinearComparativeView","Lollipop","Arc","Menus","RDF","Sequence","TrackHubRegistry","Variants","Wiggle","SpreadsheetViewPlugin","SvInspectorPlugin","BreakpointSplitView","HicPlugin","TrixPlugin","GridBookmarkPlugin","ComparativeAdapters","b64PadSuffix","b64","num","repeat","fromUrlSafeB64","originalB64","replace","toByteArray","inflate","bytes","inflated","TextDecoder","decode","toUrlSafeB64","TextEncoder","encode","deflate","fromByteArray","deflated","encoded","filterSessionInPlace","isArrayType","array","childType","getChildType","isReferenceType","isValidReference","splice","el","isMapType","child","properties","getPropertyMembers","entries","pname","ptype","generateUID","btoa","Array","from","crypto","getRandomValues","Uint8Array","fromCharCode","encrypt","password","AES","toString","decrypt","Utf8","getErrorMsg","shareSessionToDynamo","referer","sess","encryptedSession","data","FormData","append","method","mode","body","response","ok","json","readSessionFromDynamo","baseUrl","sessionQueryParam","sessionId","shareDiv","textAlign","paddingLeft","shareButton","alpha","hoverOpacity","loadingMessage","SHARE_URL_LOCALSTORAGE_KEY","SettingsDialog","currentSetting","setting","setSetting","infoDialogOpen","setInfoDialogOpen","setItem","DialogContentText","HelpOutline","FormControl","RadioGroup","FormControlLabel","control","Radio","InfoDialog","ShareDialog","shortUrl","setShortUrl","longUrl","setLongUrl","loading","setLoading","setError","settingsDialogOpen","setSettingsDialogOpen","shareURL","getItem","snap","getSnapshot","cancelled","locationUrl","URL","href","params","longParams","Settings","TextField","readOnly","copy","startIcon","setOpen","Share","isAssemblyEditing","isDefaultSessionEditing","setDefaultSessionEditing","setAssemblyEditing","JBrowse","useQueryParam","StringParam","adminKey","adminServer","configPath","setSessionId","currentSessionId","JBrowseRootModel","JBrowseSession","onSnapshot","snapshot","headers","status","statusText","ThemeProvider","CssBaseline","App","makeWorkerInstance","Worker","refNameRegex","refNameColors","loadRefNameMap","adapterConfig","regions","refNameAliases","rpcManager","refNames","refNameMap","fromEntries","checkRefName","getCanonicalRefName","reversed","canonicalName","forwardMap","reverseMap","refName","assemblyFactory","assemblyConfigType","adapterLoads","AbortablePromiseCache","args","statusCallback","adapterConf","volatile","lowerCaseRefNameAliases","cytobands","initialized","aliases","hasName","allAliases","region","allRefNames","lowerCaseRefNames","allRefNamesWithLowerCase","Set","getParent","getRefNameColor","r","isValidRefName","actions","setLoaded","adapterRegionsWithAssembly","setRegions","setRefNameAliases","setCytobands","afterAttach","makeAbortableReaction","sequence","sequenceAdapterConfig","adapter","refNameAliasesAdapterConfig","cytobandAdapterConfig","assemblyName","makeLoadAssemblyData","loadAssemblyReaction","fireImmediately","getAdapterMapEntry","rest","adapterId","jsonStableStringify","getAdapterId","getRefNameMapForAdapter","getReverseRefNameMapForAdapter","getAssemblyRegions","adapterRegions","adapterRegion","getRefNameAliases","getCytobands","alias","toLowerCase","getAdapterType","getAdapterClass","CLASS","getData","getRegions","assemblyManagerFactory","Assembly","assemblyNamesList","assemblyList","asm","sessionAssemblies","allPossibleRefNames","concat","waitForAssembly","removeAssembly","remove","addDisposer","reaction","assemblyConfigs","assemblyConfig","addAssembly","replaceAssembly","cast","defaultValue","pluggableConfigSchemaType","preProcessSnapshot","explicitIdentifier","BaseRpcDriverConfigSchema","workerCount","explicitlyTyped","MainThreadRpcDriverConfigSchema","baseConfiguration","WebWorkerRpcDriverConfigSchema","defaultDriver","drivers","MainThreadRpcDriver","addDriverConfig","configName","configSnapshot","isClonable","watchWorker","worker","pingTime","rpcDriverClassName","_resolve","delay","LazyWorker","driver","workerP","makeWorker","maxPingTime","destroy","BaseRpcDriver","lastWorkerAssignment","workerAssignments","workerPool","workerCheckFrequency","isArray","filterArgs","remoteAbort","bind","isAlive","File","k","v","functionName","getWorker","hardwareConcurrency","mainThread","canDetect","navigator","detectHardwareConcurrency","clamp","max","res","createWorkerPool","workers","getWorkerPool","workerNumber","workerAssignment","rpcMethod","getRpcMethodType","serializeArguments","serializedArgs","filteredAndSerializedArgs","callP","finally","killedP","killedCheckInterval","setInterval","clearInterval","resultP","race","deserializeReturn","WebWorkerHandle","terminate","channel","shortid","listener","on","off","Rpc","WebWorkerRpcDriver","workerBootConfiguration","instance","onmessage","postMessage","DummyHandle","_functionName","_filteredArgs","RpcManager","mainConfiguration","backendConfigurations","driverObjects","backendName","newDriver","backendConfiguration","_sessionId","rpcDriverName","getDriver","getDriverForCall","driverForCall","rpcConfigSchema","TextSearchManager","adapterCache","searchScope","pm","relevantAdapters","conf","AdapterClass","getTextSearchAdapterType","aggregateTextSearchAdapters","getAdaptersWithAssembly","getTrackAdaptersWithAssembly","confs","c","textSearching","textSearchAdapter","rankFn","adapters","loadTextSearchAdapters","searchIndex","results","sortResults","flat","getLabel","localeCompare","r1","r2","getScore","TimeTraveller","undoIdx","targetPath","notTrackingUndo","canUndo","canRedo","targetStore","snapshotDisposer","skipNextUndoState","stopTrackingUndo","resumeTrackingUndo","addUndoState","todos","shift","beforeDestroy","initialize","resolvePath","func","debounce","applySnapshot","redo","removeAttr","obj","attr","prop","JBrowseWeb","Session","assemblyConfigSchemasType","JBrowseModel","rpc","featureDetails","sequenceTypes","disableAnalytics","locationType","pluginConfigurationSchemas","connections","defaultSession","afterCreate","seen","addAssemblyConf","assemblyConf","removeAssemblyConf","toRemove","addTrackConf","trackConf","addDisplayConf","displayConf","addConnectionConf","connectionConf","deleteConnectionConf","conn","deleteTrackConf","setDefaultSessionConf","sessionConf","newDefault","toJS","pluginDefinition","getRoot","setPluginsUpdated","removePlugin","umdUrl","cjsUrl","esmUrl","addInternetAccountConf","deleteInternetAccountConf","postProcessor","clone","addSnackbarToModel","tree","extend","snackbarMessages","level","pushSnackbarMessage","removeSnackbarMessage","popSnackbarMessage","pop","element","makeExtension","observable","resolveIdentifier","AboutDialog","sessionModelFactory","minDrawerWidth","sessionModel","pluggableMstType","widgets","connectionInstances","sessionConnections","sessionPlugins","task","queueOfDialogs","firstInQueue","textSearchManager","adminMode","savedSessions","previousAutosaveId","renderProps","getReferring","object","refs","walk","getType","members","getMembers","setDrawerPosition","arg","queueDialog","setName","addSessionPlugin","removeSessionPlugin","makeConnection","initialSnapshot","connectionType","getConnectionType","connectionData","removeReferring","referring","dereferenceTypeCount","dereferenced","getContainingView","hideTrack","err1","hideWidget","prepareToBreakConnection","callbacksToDereferenceTrack","connection","breakConnection","deleteConnection","deletedConn","connectionId","updateDrawerWidth","newDrawerWidth","resizeDrawer","oldDrawerWidth","initialState","typeDefinition","getElementType","widget","addLinearGenomeViewOfAssembly","addViewOfAssembly","s","displayRegionsFromAssemblyName","addViewFromAnotherView","otherView","state","displayedRegions","addWidget","showWidget","hasWidget","minimizeWidgetDrawer","hideAllWidgets","setSelection","clearSelection","clearConnections","addSavedSession","sessionSnapshot","removeSavedSession","sessionName","duplicateCurrentSession","activateSession","setDefaultSession","saveSessionToLocalStorage","loadAutosaveSession","setSession","editConfiguration","isConfigurationModel","editableConfigSession","editor","editTrackConfiguration","getTrackActionMenuItems","canEdit","isRefSeq","InfoIcon","SettingsIcon","DeleteIcon","displays","category","CopyIcon","extendedSessionModel","preProcessor","RootModel","assemblyConfigSchema","assemblyConfigSchemaFactory","assemblyManagerType","jbrowseWebFactory","pluginsUpdated","savedSessionsVolatile","localStorageId","autosaveId","ctrlKey","metaKey","shiftKey","startsWith","autorun","alert","sessionStorage","reload","account","initializeInternetAccount","oldSession","internetAccountConfigSchema","internetAccountType","getInternetAccountType","internetAccount","create","createEphemeralInternetAccount","hostUri","origin","internetAccountSplit","domains","flag","newSession","toLocaleString","removeItem","newSnapshotName","newSnapshotCopyNumber","localId","newSessionSnapshot","previousAutosave","autosavedSession","findAppropriateInternetAccount","selectedId","selectedAccount","handlesLocation","AddIcon","lastAutosave","PublishIcon","GetAppIcon","sessionBlob","Blob","saveAs","FolderOpenIcon","SaveIcon","FileCopyIcon","StorageIcon","Cable","AppsIcon","UndoIcon","RedoIcon","ExtensionIcon","setMenus","newMenus","appendMenu","menuName","insertMenu","appendToMenu","m","insertInMenu","insertPosition","appendToSubMenu","menuPath","topMenu","pathSoFar","sm","mi","insertInSubMenu","factoryReset","isUMDPluginDefinition","isESMPluginDefinition","isCJSPluginDefinition","getGlobalObject","global","PluginLoader","pluginDefinitions","definitions","fetchESM","fetchCJS","scriptUrl","globalObject","isInWebWorker","domLoadScript","importScripts","parsedUrl","protocol","loadScript","moduleName","umdName","constructor","loadCJSPlugin","loadESMPlugin","loadUMDPlugin","JBrowseExports","loadPlugin","addRelativeUris","configUri","baseUri","readConf","def","fetchPlugins","checkPlugins","pluginsToCheck","storePlugins","every","storePlugin","loc","blankSession","sessionTriaged","shareWarningOpen","sessionSpec","runtimePlugins","sessionError","configError","bc1","BroadcastChannel","bc2","isSharedSession","isSpecSession","isJb1StyleSession","isEncodedSession","isJsonSession","isLocalSession","ready","isSessionLoaded","isConfigLoaded","sessionTracksParsed","setSessionQuery","setConfigError","setSessionError","setRuntimePlugins","setSessionPlugins","setConfigSnapshot","setBlankSession","setSessionTriaged","setSessionSnapshotSuccess","pluginLoader","import","installGlobalReExports","fetchSessionPlugins","setSessionSnapshot","userAcceptedConfirmation","reason","fetchConfig","openLocation","readFile","hostname","configPlugins","fetchSessionStorageSession","sessionStr","query","sessionSnap","msg","fetchSharedSession","decryptedSession","decodeEncodedUrlSession","decodeSessionSpec","decodeJb1StyleSession","decodeJsonUrlSession","ret","SessionWarningDialog","ConfigWarningDialog","ErrorMessage","StartScreen","NoConfigMessage","inDevelopment","link","Loader","param","Str","setPassword","setLoc","setSessionTracks","setAssembly","setTracks","loader","SessionLoader","Renderer","SessionTriaged","onConfirm","onCancel","ErrMessage","ConfigTriaged","setPluginManager","corePlugins","P","createPluggableElements","JBrowseRootModelFactory","packageJSON","afterInitializedCb","evaluateAsyncExtensionPoint","loadSessionSpec","errorMessage","setRootModel","Loading","PlatformSpecificFatalErrorDialog","FatalErrorDialog","resetButtonText","ErrorBoundary","FallbackComponent"],"sourceRoot":""}