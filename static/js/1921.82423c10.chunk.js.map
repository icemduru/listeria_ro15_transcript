{"version":3,"file":"static/js/1921.82423c10.chunk.js","mappings":"4aAAe,SAASA,EAAgBC,EAAGC,GAMzC,OALAF,EAAkBG,OAAOC,gBAAkB,SAAyBH,EAAGC,GAErE,OADAD,EAAEI,UAAYH,EACPD,CAFT,EAKOD,EAAgBC,EAAGC,EAC3B,CCNc,SAASI,EAAeC,EAAUC,GAC/CD,EAASE,UAAYN,OAAOO,OAAOF,EAAWC,WAC9CF,EAASE,UAAUE,YAAcJ,EACjCH,EAAeG,EAAUC,EAC1B,CCHD,IAAMI,EAAe,SAACC,EAAwBC,GAAzB,gBAACD,IAAAA,EAAoB,SAArB,IAAyBC,IAAAA,EAAoB,IAChED,EAAEE,SAAWD,EAAEC,QAAUF,EAAEG,MAAK,SAACC,EAAMC,GAAP,OAAkBf,OAAOgB,GAAGF,EAAMH,EAAEI,GAA3C,GAD3B,EAgEME,EAAmC,CAACC,MAAO,MAE3CC,EAAAA,SAAAA,G,wIAQJC,MAAQH,E,EACRI,mBAAqB,WAA6B,6BAAzBC,EAAyB,yBAAzBA,EAAyB,GAAAC,UAAAA,GAChD,MAAAC,EAAKC,MAAMC,UAAX,IAAKD,OAAMC,QAAX,QAAwBJ,GACxBE,EAAKG,OACN,E,WARMC,yBAAP,SAAgCV,GAC9B,MAAO,CAACA,MAAAA,EACT,E,2BAQDS,MAAAA,WACEE,KAAKC,SAASb,EACf,E,EAEDc,kBAAAA,SAAkBb,EAAcc,GAAuB,QACrD,YAAAH,KAAKJ,OAAMQ,UAAX,SAAqBf,EAAOc,EAC7B,E,EAEDE,mBAAAA,SACEC,EACAC,GAEA,IAcE,IAdKlB,EAASW,KAAKT,MAAdF,MACAmB,EAAaR,KAAKJ,MAAlBY,UAUK,OAAVnB,GACoB,OAApBkB,EAAUlB,OACVT,EAAa0B,EAAUE,UAAWA,KAElC,YAAAR,KAAKJ,OAAMa,oBAAX,SAA+BH,EAAUE,UAAWA,GACpDR,KAAKF,QAER,E,EAEDY,OAAAA,WACE,IAAOrB,EAASW,KAAKT,MAAdF,MAEP,EAAsDW,KAAKJ,MAApDe,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,kBAAmBC,EAA1C,EAA0CA,SAE1C,GAAc,OAAVxB,EAAgB,CAClB,IAAMO,EAAQ,CACZP,MAAAA,EACAG,mBAAoBQ,KAAKR,oBAE3B,GAAIsB,EAAMC,eAAeF,GACvB,OAAOA,EACF,GAA8B,oBAAnBF,EAChB,OAAOA,EAAef,GACjB,GAAIgB,EACT,OAAOE,EAAAA,cAACF,EAAsBhB,GAE9B,MAAM,IAAIoB,MACR,6FAGL,CAED,OAAOhB,KAAKJ,MAAMqB,QACnB,E,EAtEG3B,CAAsBwB,EAAMI,WAyElC,SAASC,EACPD,EACAE,GAEA,IAAMC,EAAkC,SAAAzB,GACtC,OACEkB,EAAAA,cAACxB,EAAkB8B,EACjBN,EAAAA,cAACI,EAActB,GAHrB,EASM0B,EAAOJ,EAAUK,aAAeL,EAAUI,MAAQ,UAGxD,OAFAD,EAAQE,YAARF,qBAA2CC,EAA3C,IAEOD,CACR,CAED,SAASG,EAAgBC,GACvB,MAA0BX,EAAMY,SAAkB,MAA3CrC,EAAP,KAAcsC,EAAd,KACA,GAAkB,MAAdF,EAAoB,MAAMA,EAC9B,GAAa,MAATpC,EAAe,MAAMA,EACzB,OAAOsC,CACR,C","sources":["../../../node_modules/react-error-boundary/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../node_modules/react-error-boundary/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../../../node_modules/react-error-boundary/src/index.tsx"],"sourcesContent":["export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import * as React from 'react'\n\nconst changedArray = (a: Array<unknown> = [], b: Array<unknown> = []) =>\n  a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]))\n\ninterface FallbackProps {\n  error: Error\n  resetErrorBoundary: (...args: Array<unknown>) => void\n}\n\ninterface ErrorBoundaryPropsWithComponent {\n  onResetKeysChange?: (\n    prevResetKeys: Array<unknown> | undefined,\n    resetKeys: Array<unknown> | undefined,\n  ) => void\n  onReset?: (...args: Array<unknown>) => void\n  onError?: (error: Error, info: {componentStack: string}) => void\n  resetKeys?: Array<unknown>\n  fallback?: never\n  FallbackComponent: React.ComponentType<FallbackProps>\n  fallbackRender?: never\n}\n\ndeclare function FallbackRender(\n  props: FallbackProps,\n): React.ReactElement<\n  unknown,\n  string | React.FunctionComponent | typeof React.Component\n> | null\n\ninterface ErrorBoundaryPropsWithRender {\n  onResetKeysChange?: (\n    prevResetKeys: Array<unknown> | undefined,\n    resetKeys: Array<unknown> | undefined,\n  ) => void\n  onReset?: (...args: Array<unknown>) => void\n  onError?: (error: Error, info: {componentStack: string}) => void\n  resetKeys?: Array<unknown>\n  fallback?: never\n  FallbackComponent?: never\n  fallbackRender: typeof FallbackRender\n}\n\ninterface ErrorBoundaryPropsWithFallback {\n  onResetKeysChange?: (\n    prevResetKeys: Array<unknown> | undefined,\n    resetKeys: Array<unknown> | undefined,\n  ) => void\n  onReset?: (...args: Array<unknown>) => void\n  onError?: (error: Error, info: {componentStack: string}) => void\n  resetKeys?: Array<unknown>\n  fallback: React.ReactElement<\n    unknown,\n    string | React.FunctionComponent | typeof React.Component\n  > | null\n  FallbackComponent?: never\n  fallbackRender?: never\n}\n\ntype ErrorBoundaryProps =\n  | ErrorBoundaryPropsWithFallback\n  | ErrorBoundaryPropsWithComponent\n  | ErrorBoundaryPropsWithRender\n\ntype ErrorBoundaryState = {error: Error | null}\n\nconst initialState: ErrorBoundaryState = {error: null}\n\nclass ErrorBoundary extends React.Component<\n  React.PropsWithRef<React.PropsWithChildren<ErrorBoundaryProps>>,\n  ErrorBoundaryState\n> {\n  static getDerivedStateFromError(error: Error) {\n    return {error}\n  }\n\n  state = initialState\n  resetErrorBoundary = (...args: Array<unknown>) => {\n    this.props.onReset?.(...args)\n    this.reset()\n  }\n\n  reset() {\n    this.setState(initialState)\n  }\n\n  componentDidCatch(error: Error, info: React.ErrorInfo) {\n    this.props.onError?.(error, info)\n  }\n\n  componentDidUpdate(\n    prevProps: ErrorBoundaryProps,\n    prevState: ErrorBoundaryState,\n  ) {\n    const {error} = this.state\n    const {resetKeys} = this.props\n\n    // There's an edge case where if the thing that triggered the error\n    // happens to *also* be in the resetKeys array, we'd end up resetting\n    // the error boundary immediately. This would likely trigger a second\n    // error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call\n    // of cDU after the error is set\n\n    if (\n      error !== null &&\n      prevState.error !== null &&\n      changedArray(prevProps.resetKeys, resetKeys)\n    ) {\n      this.props.onResetKeysChange?.(prevProps.resetKeys, resetKeys)\n      this.reset()\n    }\n  }\n\n  render() {\n    const {error} = this.state\n\n    const {fallbackRender, FallbackComponent, fallback} = this.props\n\n    if (error !== null) {\n      const props = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary,\n      }\n      if (React.isValidElement(fallback)) {\n        return fallback\n      } else if (typeof fallbackRender === 'function') {\n        return fallbackRender(props)\n      } else if (FallbackComponent) {\n        return <FallbackComponent {...props} />\n      } else {\n        throw new Error(\n          'react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop',\n        )\n      }\n    }\n\n    return this.props.children\n  }\n}\n\nfunction withErrorBoundary<P>(\n  Component: React.ComponentType<P>,\n  errorBoundaryProps: ErrorBoundaryProps,\n): React.ComponentType<P> {\n  const Wrapped: React.ComponentType<P> = props => {\n    return (\n      <ErrorBoundary {...errorBoundaryProps}>\n        <Component {...props} />\n      </ErrorBoundary>\n    )\n  }\n\n  // Format for display in DevTools\n  const name = Component.displayName || Component.name || 'Unknown'\n  Wrapped.displayName = `withErrorBoundary(${name})`\n\n  return Wrapped\n}\n\nfunction useErrorHandler(givenError?: unknown): (error: unknown) => void {\n  const [error, setError] = React.useState<unknown>(null)\n  if (givenError != null) throw givenError\n  if (error != null) throw error\n  return setError\n}\n\nexport {ErrorBoundary, withErrorBoundary, useErrorHandler}\nexport type {\n  FallbackProps,\n  ErrorBoundaryPropsWithComponent,\n  ErrorBoundaryPropsWithRender,\n  ErrorBoundaryPropsWithFallback,\n  ErrorBoundaryProps,\n}\n\n/*\neslint\n  @typescript-eslint/sort-type-union-intersection-members: \"off\",\n  @typescript-eslint/no-throw-literal: \"off\",\n  @typescript-eslint/prefer-nullish-coalescing: \"off\"\n*/\n"],"names":["_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","create","constructor","changedArray","a","b","length","some","item","index","is","initialState","error","ErrorBoundary","state","resetErrorBoundary","args","arguments","_this","props","onReset","reset","getDerivedStateFromError","this","setState","componentDidCatch","info","onError","componentDidUpdate","prevProps","prevState","resetKeys","onResetKeysChange","render","fallbackRender","FallbackComponent","fallback","React","isValidElement","Error","children","Component","withErrorBoundary","errorBoundaryProps","Wrapped","name","displayName","useErrorHandler","givenError","useState","setError"],"sourceRoot":""}