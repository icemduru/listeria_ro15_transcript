{"version":3,"file":"static/js/3534.f6956d38.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/util.tsx","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail.tsx"],"sourcesContent":["export interface Feat {\n  start: number\n  end: number\n  type: string\n  name?: string\n  id?: string\n}\nexport interface ParentFeat extends Feat {\n  strand?: number\n  subfeatures?: Feat[]\n}\nexport interface SeqState {\n  seq: string\n  upstream: string\n  downstream: string\n}\nexport function stitch(subfeats: Feat[], sequence: string) {\n  return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('')\n}\n\n// filter items if they have the same \"ID\" or location\nfunction getItemId(feat: Feat) {\n  return `${feat.start}-${feat.end}`\n}\n\n// filters if successive elements share same start/end\nexport function dedupe(list: Feat[]) {\n  return list.filter(\n    (item, pos, ary) => !pos || getItemId(item) !== getItemId(ary[pos - 1]),\n  )\n}\n\nexport function revlist(list: Feat[], seqlen: number) {\n  return list\n    .map(sub => ({\n      ...sub,\n      start: seqlen - sub.end,\n      end: seqlen - sub.start,\n    }))\n    .sort((a, b) => a.start - b.start)\n}\n\n// calculates UTRs using impliedUTRs logic\nexport function calculateUTRs(cds: Feat[], exons: Feat[]) {\n  const firstCds = cds[0]\n  const lastCds = cds[cds.length - 1]\n  const firstCdsIdx = exons.findIndex(\n    exon => exon.end >= firstCds.start && exon.start <= firstCds.start,\n  )\n  const lastCdsIdx = exons.findIndex(\n    exon => exon.end >= lastCds.end && exon.start <= lastCds.end,\n  )\n  const lastCdsExon = exons[lastCdsIdx]\n  const firstCdsExon = exons[firstCdsIdx]\n\n  const fiveUTRs = [\n    ...exons.slice(0, firstCdsIdx),\n    { start: firstCdsExon.start, end: firstCds.start },\n  ].map(elt => ({ ...elt, type: 'five_prime_UTR' }))\n\n  const threeUTRs = [\n    { start: lastCds.end, end: lastCdsExon.end },\n    ...exons.slice(lastCdsIdx + 1),\n  ].map(elt => ({ ...elt, type: 'three_prime_UTR' }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\nexport function ellipses(slug: string) {\n  return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug\n}\n","import React, { useRef, useState, useEffect } from 'react'\nimport {\n  Button,\n  FormControl,\n  Select,\n  MenuItem,\n  Typography,\n  Tooltip,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { useInView } from 'react-intersection-observer'\nimport copy from 'copy-to-clipboard'\nimport {\n  defaultCodonTable,\n  generateCodonTable,\n  revcom,\n  getSession,\n} from '../util'\nimport { BaseProps } from './types'\nimport { getConf } from '../configuration'\nimport { Feature, SimpleFeatureSerialized } from '../util/simpleFeature'\nimport {\n  Feat,\n  ParentFeat,\n  SeqState,\n  calculateUTRs,\n  stitch,\n  dedupe,\n  revlist,\n} from './util'\n\ninterface CoordFeat extends SimpleFeatureSerialized {\n  refName: string\n  start: number\n  end: number\n}\n\nconst useStyles = makeStyles()(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\n// note that these are currently put into the style section instead of being\n// defined in classes to aid copy and paste to an external document e.g. word\nconst proteinColor = 'rgb(220,160,220)'\nconst intronColor = undefined\nconst cdsColor = 'rgb(220,220,180)'\nconst updownstreamColor = 'rgba(250,200,200)'\nconst utrColor = 'rgb(200,240,240)'\n\nfunction GeneCDS({ cds, sequence }: { cds: Feat[]; sequence: string }) {\n  return <span style={{ background: cdsColor }}>{stitch(cds, sequence)}</span>\n}\n\nfunction GeneProtein({\n  cds,\n  sequence,\n  codonTable,\n}: {\n  cds: Feat[]\n  sequence: string\n  codonTable: { [key: string]: string }\n}) {\n  const str = stitch(cds, sequence)\n  let protein = ''\n  for (let i = 0; i < str.length; i += 3) {\n    // use & symbol for undefined codon, or partial slice\n    protein += codonTable[str.slice(i, i + 3)] || '&'\n  }\n\n  return <span style={{ background: proteinColor }}>{protein}</span>\n}\n\nfunction GenecDNA({\n  utr,\n  cds,\n  exons,\n  sequence,\n  upstream,\n  downstream,\n  includeIntrons,\n  collapseIntron,\n}: {\n  utr: Feat[]\n  cds: Feat[]\n  exons: Feat[]\n  sequence: string\n  upstream?: string\n  downstream?: string\n  includeIntrons?: boolean\n  collapseIntron?: boolean\n}) {\n  const chunks = cds.length\n    ? [...cds, ...utr].sort((a, b) => a.start - b.start)\n    : exons\n  return (\n    <>\n      {upstream ? (\n        <span style={{ background: updownstreamColor }}>{upstream}</span>\n      ) : null}\n\n      {chunks\n        .filter(f => f.start !== f.end)\n        .map((chunk, index) => {\n          const intron = sequence.slice(chunk.end, chunks[index + 1]?.start)\n          return (\n            <React.Fragment key={JSON.stringify(chunk)}>\n              <span\n                style={{\n                  background: chunk.type === 'CDS' ? cdsColor : utrColor,\n                }}\n              >\n                {sequence.slice(chunk.start, chunk.end)}\n              </span>\n              {includeIntrons && index < chunks.length - 1 ? (\n                <span style={{ background: intronColor }}>\n                  {collapseIntron && intron.length > 20\n                    ? `${intron.slice(0, 10)}...${intron.slice(-10)}`\n                    : intron}\n                </span>\n              ) : null}\n            </React.Fragment>\n          )\n        })}\n\n      {downstream ? (\n        <span style={{ background: updownstreamColor }}>{downstream}</span>\n      ) : null}\n    </>\n  )\n}\n\nexport const SequencePanel = React.forwardRef<\n  HTMLDivElement,\n  {\n    sequence: SeqState\n    feature: ParentFeat\n    mode: string\n  }\n>(\n  (\n    {\n      feature,\n      mode,\n      sequence: { seq: sequence, upstream = '', downstream = '' },\n    },\n    ref,\n  ) => {\n    const { subfeatures } = feature\n    const codonTable = generateCodonTable(defaultCodonTable)\n\n    if (!subfeatures) {\n      return null\n    }\n\n    const children = subfeatures\n      .sort((a, b) => a.start - b.start)\n      .map(sub => ({\n        ...sub,\n        start: sub.start - feature.start,\n        end: sub.end - feature.start,\n      }))\n\n    // we filter duplicate entries in cds and exon lists duplicate entries may be\n    // rare but was seen in Gencode v36 track NCList, likely a bug on GFF3 or\n    // probably worth ignoring here (produces broken protein translations if\n    // included)\n    //\n    // position 1:224,800,006..225,203,064 gene ENSG00000185842.15 first\n    // transcript ENST00000445597.6\n    //\n    // http://localhost:3000/?config=test_data%2Fconfig.json&session=share-FUl7G1isvF&password=HXh5Y\n\n    let cds = dedupe(children.filter(sub => sub.type === 'CDS'))\n    let utr = dedupe(children.filter(sub => sub.type.match(/utr/i)))\n    let exons = dedupe(children.filter(sub => sub.type === 'exon'))\n\n    if (!utr.length && cds.length && exons.length) {\n      utr = calculateUTRs(cds, exons)\n    }\n\n    if (feature.strand === -1) {\n      // doing this in a single assignment is needed because downstream and\n      // upstream are swapped so this avoids a temp variable\n      ;[sequence, upstream, downstream] = [\n        revcom(sequence),\n        revcom(downstream),\n        revcom(upstream),\n      ]\n      cds = revlist(cds, sequence.length)\n      exons = revlist(exons, sequence.length)\n      utr = revlist(utr, sequence.length)\n    }\n\n    return (\n      <div ref={ref} data-testid=\"sequence_panel\">\n        <div\n          style={{\n            fontFamily: 'monospace',\n            wordWrap: 'break-word',\n            fontSize: 12,\n            maxWidth: 600,\n          }}\n        >\n          {`>${feature.name || feature.id || 'unknown'}-${mode}\\n`}\n          {mode === 'cds' ? (\n            <GeneCDS cds={cds} sequence={sequence} />\n          ) : mode === 'cdna' ? (\n            <GenecDNA exons={exons} cds={cds} utr={utr} sequence={sequence} />\n          ) : mode === 'protein' ? (\n            <GeneProtein\n              cds={cds}\n              codonTable={codonTable}\n              sequence={sequence}\n            />\n          ) : mode === 'gene' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              utr={utr}\n              sequence={sequence}\n              includeIntrons\n            />\n          ) : mode === 'gene_collapsed_intron' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              sequence={sequence}\n              utr={utr}\n              includeIntrons\n              collapseIntron\n            />\n          ) : mode === 'gene_updownstream' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              sequence={sequence}\n              utr={utr}\n              upstream={upstream}\n              downstream={downstream}\n              includeIntrons\n            />\n          ) : mode === 'gene_updownstream_collapsed_intron' ? (\n            <GenecDNA\n              exons={exons}\n              cds={cds}\n              sequence={sequence}\n              utr={utr}\n              upstream={upstream}\n              downstream={downstream}\n              includeIntrons\n              collapseIntron\n            />\n          ) : (\n            <div>Unknown type</div>\n          )}\n        </div>\n      </div>\n    )\n  },\n)\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nexport default function SequenceFeatureDetails({ model, feature }: BaseProps) {\n  const { classes } = useStyles()\n  const parentFeature = feature as unknown as ParentFeat\n  const hasCDS = parentFeature.subfeatures?.find(sub => sub.type === 'CDS')\n  const seqPanelRef = useRef<HTMLDivElement>(null)\n\n  const { ref, inView } = useInView()\n  const [sequence, setSequence] = useState<SeqState>()\n  const [error, setError] = useState<unknown>()\n  const [mode, setMode] = useState(hasCDS ? 'cds' : 'cdna')\n  const [copied, setCopied] = useState(false)\n  const [copiedHtml, setCopiedHtml] = useState(false)\n\n  useEffect(() => {\n    let finished = false\n    if (!model || !inView) {\n      return () => {}\n    }\n    const { assemblyManager, rpcManager } = getSession(model)\n    const [assemblyName] = model.view?.assemblyNames || []\n    async function fetchSeq(start: number, end: number, refName: string) {\n      const assembly = await assemblyManager.waitForAssembly(assemblyName)\n      if (!assembly) {\n        throw new Error('assembly not found')\n      }\n      const sessionId = 'getSequence'\n      const feats = await rpcManager.call(sessionId, 'CoreGetFeatures', {\n        adapterConfig: getConf(assembly, ['sequence', 'adapter']),\n        sessionId,\n        regions: [\n          {\n            start,\n            end,\n            refName: assembly.getCanonicalRefName(refName),\n          },\n        ],\n      })\n\n      const [feat] = feats as Feature[]\n      if (!feat) {\n        throw new Error(\n          `sequence not found for feature with refName:${refName}`,\n        )\n      }\n      return feat.get('seq') as string\n    }\n    ;(async () => {\n      try {\n        const { start, end, refName } = feature as CoordFeat\n        const seq = await fetchSeq(start, end, refName)\n        const up = await fetchSeq(Math.max(0, start - 500), start, refName)\n        const down = await fetchSeq(end, end + 500, refName)\n        if (!finished) {\n          setSequence({ seq, upstream: up, downstream: down })\n        }\n      } catch (e) {\n        setError(e)\n      }\n    })()\n\n    return () => {\n      finished = true\n    }\n  }, [feature, inView, model])\n\n  const loading = !sequence\n\n  return (\n    <div ref={ref}>\n      <FormControl>\n        <Select\n          value={mode}\n          onChange={event => setMode(event.target.value as string)}\n        >\n          {hasCDS ? <MenuItem value=\"cds\">CDS</MenuItem> : null}\n          {hasCDS ? <MenuItem value=\"protein\">Protein</MenuItem> : null}\n          <MenuItem value=\"gene\">Gene w/ introns</MenuItem>\n          <MenuItem value=\"gene_collapsed_intron\">\n            Gene w/ 10bp of intron\n          </MenuItem>\n          <MenuItem value=\"gene_updownstream\">\n            Gene w/ 500bp up+down stream\n          </MenuItem>\n          <MenuItem value=\"gene_updownstream_collapsed_intron\">\n            Gene w/ 500bp up+down stream w/ 10bp intron\n          </MenuItem>\n          <MenuItem value=\"cdna\">cDNA</MenuItem>\n        </Select>\n      </FormControl>\n      <Button\n        className={classes.button}\n        type=\"button\"\n        variant=\"contained\"\n        onClick={() => {\n          const ref = seqPanelRef.current\n          if (ref) {\n            copy(ref.textContent || '', { format: 'text/plain' })\n            setCopied(true)\n            setTimeout(() => setCopied(false), 1000)\n          }\n        }}\n      >\n        {copied ? 'Copied to clipboard!' : 'Copy as plaintext'}\n      </Button>\n      <Tooltip title=\"Note that 'Copy as HTML' can retain the colors but cannot be pasted into some programs like notepad that only expect plain text\">\n        <Button\n          className={classes.button}\n          type=\"button\"\n          variant=\"contained\"\n          onClick={() => {\n            const ref = seqPanelRef.current\n            if (ref) {\n              copy(ref.innerHTML, { format: 'text/html' })\n              setCopiedHtml(true)\n              setTimeout(() => setCopiedHtml(false), 1000)\n            }\n          }}\n        >\n          {copiedHtml ? 'Copied to clipboard!' : 'Copy as HTML'}\n        </Button>\n      </Tooltip>\n      <div data-testid=\"feature_sequence\">\n        {error ? (\n          <Typography color=\"error\">{`${error}`}</Typography>\n        ) : loading ? (\n          <div>Loading gene sequence...</div>\n        ) : sequence ? (\n          <SequencePanel\n            ref={seqPanelRef}\n            feature={parentFeature}\n            mode={mode}\n            sequence={sequence}\n          />\n        ) : (\n          <div>No sequence found</div>\n        )}\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Divider,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport ExpandMore from '@mui/icons-material/ExpandMore'\nimport { DataGrid, GridCellParams } from '@mui/x-data-grid'\nimport { observer } from 'mobx-react'\nimport isObject from 'is-object'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// locals\nimport { getConf } from '../configuration'\nimport {\n  measureText,\n  measureGridWidth,\n  getSession,\n  getStr,\n  getUriLink,\n  isUriLocation,\n} from '../util'\nimport SanitizedHTML from '../ui/SanitizedHTML'\nimport SequenceFeatureDetails from './SequenceFeatureDetails'\nimport { BaseCardProps, BaseProps } from './types'\nimport { SimpleFeatureSerialized } from '../util/simpleFeature'\nimport { ellipses } from './util'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  '__jbrowsefmt',\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\nexport const useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  expandIcon: {\n    color: '#FFFFFF',\n  },\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  fieldDescription: {\n    '&:hover': {\n      background: 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.grey[200],\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    background: theme.palette.grey[100],\n    border: `1px solid ${theme.palette.grey[300]}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  const [expanded, setExpanded] = useState(defaultExpanded)\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={() => setExpanded(s => !s)}\n      TransitionProps={{ unmountOnExit: true }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMore className={classes.expandIcon} />}\n      >\n        <Typography variant=\"button\"> {title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nexport const FieldName = ({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) => {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n\nexport const BasicValue = ({ value }: { value: string | React.ReactNode }) => {\n  const { classes } = useStyles()\n  const isLink = `${value}`.match(/^https?:\\/\\//)\n  return (\n    <div className={classes.fieldValue}>\n      {React.isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <SanitizedHTML html={`<a href=\"${value}\">${value}</a>`} />\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n\nexport const SimpleValue = ({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any\n  prefix?: string[]\n  width?: number\n}) => {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n\nconst ArrayValue = ({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: any[]\n  prefix?: string[]\n}) => {\n  const { classes } = useStyles()\n  if (value.length === 1) {\n    return isObject(value[0]) ? (\n      <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n    ) : (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        <BasicValue value={value[0]} />\n      </div>\n    )\n  } else if (value.every(val => isObject(val))) {\n    return (\n      <>\n        {value.map((val, i) => (\n          <Attributes\n            key={JSON.stringify(val) + '-' + i}\n            attributes={val}\n            prefix={[...prefix, name + '-' + i]}\n          />\n        ))}\n      </>\n    )\n  } else {\n    return (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        {value.map((val, i) => (\n          <div\n            key={JSON.stringify(val) + '-' + i}\n            className={classes.fieldSubvalue}\n          >\n            <BasicValue value={val} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\nconst toLocale = (n: number) => n.toLocaleString('en-US')\n\nfunction CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  // eslint-disable-next-line no-underscore-dangle\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, strand, end, refName } = formattedFeat\n\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand as number] ? `(${strandMap[strand]})` : ''\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n    position: `${refName}:${toLocale(start + 1)}..${toLocale(end)} ${str}`,\n  }\n\n  const coreRenderedDetails = {\n    position: 'Position',\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n    assemblyName: 'Assembly name',\n  }\n  return (\n    <>\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value !== null && value !== undefined)\n        .map(([name, value]) => (\n          <SimpleValue key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n\nexport const BaseCoreDetails = (props: BaseProps) => {\n  return (\n    <BaseCard {...props} title=\"Primary data\">\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n\ninterface AttributeProps {\n  attributes: Record<string, any>\n  omit?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n}\n\nexport function UriLink({\n  value,\n}: {\n  value: { uri: string; baseUri?: string }\n}) {\n  const href = getUriLink(value)\n  return <SanitizedHTML html={`<a href=\"${href}\">${href}</a>`} />\n}\nconst DataGridDetails = ({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, any>\n}) => {\n  const keys = Object.keys(value[0]).sort()\n  const unionKeys = new Set(keys)\n  value.forEach((val: any) => Object.keys(val).forEach(k => unionKeys.add(k)))\n  if (unionKeys.size < keys.length + 5) {\n    // avoids key 'id' from being used in row data\n    const rows = Object.entries(value).map(([k, val]) => {\n      const { id, ...rest } = val\n      return {\n        id: k, // used by material UI\n        identifier: id, // renamed from id to identifier\n        ...rest,\n      }\n    })\n\n    // avoids key 'id' from being used in column names, and tries\n    // to make it at the start of the colNames array\n    let colNames\n    if (unionKeys.has('id')) {\n      unionKeys.delete('id')\n      colNames = ['identifier', ...unionKeys]\n    } else {\n      colNames = [...unionKeys]\n    }\n\n    const columns = colNames.map(val => ({\n      field: val,\n      renderCell: (params: GridCellParams) => {\n        const { value } = params\n        return isUriLocation(value) ? <UriLink value={value} /> : getStr(value)\n      },\n      width: measureGridWidth(rows.map(r => r[val])),\n    }))\n\n    const rowHeight = 25\n    const hideFooter = rows.length < 100\n    const headerHeight = 80\n    // disableSelection on click helps avoid\n    // https://github.com/mui-org/material-ui-x/issues/1197\n    return (\n      <>\n        <FieldName prefix={prefix} name={name} />\n        <div\n          style={{\n            height:\n              Math.min(rows.length, 100) * rowHeight +\n              headerHeight +\n              (hideFooter ? 0 : 50),\n            width: '100%',\n          }}\n        >\n          <DataGrid\n            disableSelectionOnClick\n            rowHeight={rowHeight}\n            rows={rows}\n            rowsPerPageOptions={[]}\n            hideFooterSelectedRowCount\n            columns={columns}\n            hideFooter={hideFooter}\n          />\n        </div>\n      </>\n    )\n  }\n  return null\n}\n\n// arr = ['a','b'], obj = {a:{b:'hello}}, returns hello (with special addition to grab description also)\nfunction accessNested(arr: string[], obj: Record<string, any> = {}) {\n  arr.forEach(elt => {\n    if (obj) {\n      obj = obj[elt]\n    }\n  })\n  return typeof obj === 'string'\n    ? obj\n    : typeof obj?.Description === 'string'\n    ? obj.Description\n    : undefined\n}\n\nfunction generateMaxWidth(array: any, prefix: any) {\n  // @ts-ignore\n  const arr = []\n  array.forEach((key: any, value: any) => {\n    const val = [...prefix, key[0]].join('.')\n    arr.push(measureText(val, 12))\n  })\n\n  // @ts-ignore\n  return Math.ceil(Math.max(...arr)) + 10\n}\n\nfunction UriAttribute({\n  value,\n  prefix,\n  name,\n}: {\n  value: { uri: string; baseUri?: string }\n  name: string\n  prefix: string[]\n}) {\n  const { classes } = useStyles()\n  const { uri, baseUri = '' } = value\n  let href\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} name={name} />\n      <BasicValue value={href} />\n    </div>\n  )\n}\n\nexport function Attributes(props: AttributeProps) {\n  const {\n    attributes,\n    omit = [],\n    descriptions,\n    formatter = val => val,\n    prefix = [],\n  } = props\n  const omits = [...omit, ...globalOmit]\n  const { __jbrowsefmt, ...rest } = attributes\n  const formattedAttributes = { ...rest, ...__jbrowsefmt }\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(formattedAttributes).filter(\n      ([k, v]) => v !== undefined && !omits.includes(k),\n    ),\n    prefix,\n  )\n\n  return (\n    <>\n      {Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.includes(k))\n        .map(([key, value]) => {\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => isObject(val)) ? (\n              <DataGridDetails\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          } else if (isObject(value)) {\n            return isUriLocation(value) ? (\n              <UriAttribute\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <Attributes\n                {...props}\n                omit={omits}\n                key={key}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          } else {\n            return (\n              <SimpleValue\n                key={key}\n                name={key}\n                value={formatter(value, key)}\n                description={description}\n                prefix={prefix}\n                width={Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH)}\n              />\n            )\n          }\n        })}\n    </>\n  )\n}\n\nexport const BaseAttributes = (props: BaseProps) => {\n  const { feature } = props\n  return (\n    <BaseCard {...props} title=\"Attributes\">\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}\n\nfunction isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nfunction generateTitle(name: unknown, id: unknown, type: unknown) {\n  return [ellipses(`${name}` || `${id}`), `${type}`]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\nexport const FeatureDetails = (props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerialized\n  depth?: number\n  omit?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) => {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { name = '', id = '', type = '', subfeatures } = feature\n  const session = getSession(model)\n  const defaultSeqTypes = ['mRNA', 'transcript']\n  const sequenceTypes =\n    getConf(session, ['featureDetails', 'sequenceTypes']) || defaultSeqTypes\n\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      <Divider />\n      <Typography>Attributes</Typography>\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={[...omit, ...coreDetails]}\n      />\n\n      {sequenceTypes.includes(feature.type) ? (\n        <ErrorBoundary\n          FallbackComponent={({ error }) => (\n            <Typography color=\"error\">{`${error}`}</Typography>\n          )}\n        >\n          <SequenceFeatureDetails {...props} />\n        </ErrorBoundary>\n      ) : null}\n\n      {subfeatures?.length ? (\n        <BaseCard\n          title=\"Subfeatures\"\n          defaultExpanded={!sequenceTypes.includes(feature.type)}\n        >\n          {subfeatures.map((sub: any) => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={sub}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n\nconst BaseFeatureDetails = observer((props: BaseInputProps) => {\n  const { model } = props\n  const { featureData } = model\n\n  if (!featureData) {\n    return null\n  }\n\n  // replacing undefined with null helps with allowing fields to be hidden,\n  // setting null is not allowed by jexl so we set it to undefined to hide. see\n  // config guide. this replacement happens both here and when snapshotting the\n  // featureData\n  const feature = JSON.parse(\n    JSON.stringify(featureData, (_, v) =>\n      typeof v === 'undefined' ? null : v,\n    ),\n  )\n  if (isEmpty(feature)) {\n    return null\n  }\n\n  return <FeatureDetails model={model} feature={feature} />\n})\n\nexport default BaseFeatureDetails\n"],"names":["stitch","subfeats","sequence","map","sub","slice","start","end","join","getItemId","feat","dedupe","list","filter","item","pos","ary","revlist","seqlen","sort","a","b","useStyles","makeStyles","theme","button","margin","spacing","cdsColor","updownstreamColor","GeneCDS","cds","style","background","GeneProtein","codonTable","str","protein","i","length","GenecDNA","utr","exons","upstream","downstream","includeIntrons","collapseIntron","chunks","f","chunk","index","intron","type","undefined","JSON","stringify","SequencePanel","React","ref","feature","mode","seq","subfeatures","generateCodonTable","defaultCodonTable","children","match","firstCds","lastCds","firstCdsIdx","findIndex","exon","lastCdsIdx","lastCdsExon","firstCdsExon","fiveUTRs","elt","threeUTRs","calculateUTRs","strand","revcom","fontFamily","wordWrap","fontSize","maxWidth","name","id","SequenceFeatureDetails","model","classes","parentFeature","hasCDS","find","seqPanelRef","useRef","useInView","inView","useState","setSequence","error","setError","setMode","copied","setCopied","copiedHtml","setCopiedHtml","useEffect","finished","getSession","assemblyManager","rpcManager","view","assemblyNames","assemblyName","fetchSeq","refName","waitForAssembly","assembly","Error","sessionId","call","adapterConfig","getConf","regions","getCanonicalRefName","feats","get","Math","max","up","down","loading","FormControl","Select","value","onChange","event","target","MenuItem","Button","className","variant","onClick","current","copy","textContent","format","setTimeout","Tooltip","title","innerHTML","Typography","color","globalOmit","coreDetails","expansionPanelDetails","display","padding","expandIcon","field","flexWrap","fieldDescription","fieldName","wordBreak","minWidth","borderBottom","palette","grey","marginRight","fieldValue","maxHeight","overflow","fieldSubvalue","border","boxSizing","BaseCard","defaultExpanded","expanded","setExpanded","Accordion","s","TransitionProps","unmountOnExit","AccordionSummary","ExpandMore","AccordionDetails","FieldName","description","width","prefix","cx","val","placement","BasicValue","isLink","SanitizedHTML","html","isObject","String","SimpleValue","ArrayValue","Attributes","attributes","every","toLocale","n","toLocaleString","CoreDetails","props","obj","formattedFeat","__jbrowsefmt","strandMap","displayedDetails","position","Object","entries","key","BaseCoreDetails","UriLink","href","getUriLink","DataGridDetails","keys","unionKeys","Set","forEach","k","add","size","colNames","rows","rest","identifier","has","delete","columns","renderCell","params","isUriLocation","getStr","measureGridWidth","r","hideFooter","height","min","DataGrid","disableSelectionOnClick","rowHeight","rowsPerPageOptions","hideFooterSelectedRowCount","UriAttribute","uri","baseUri","URL","e","omit","descriptions","formatter","omits","formattedAttributes","maxLabelWidth","array","arr","push","measureText","ceil","generateMaxWidth","includes","Description","accessNested","Array","isArray","BaseAttributes","generateTitle","slug","FeatureDetails","depth","session","sequenceTypes","Divider","ErrorBoundary","FallbackComponent","observer","featureData","parse","_","v"],"sourceRoot":""}