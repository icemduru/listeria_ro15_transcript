{"version":3,"file":"static/js/9145.4843b0b9.chunk.js","mappings":"+RAqBMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAa,SAAAC,GAAK,MAAK,CACvCC,YAAa,CACXC,SAAU,WACVC,MAAOH,EAAMI,QAAQ,GACrBC,IAAKL,EAAMI,QAAQ,GACnBE,MAAON,EAAMO,QAAQC,KAAK,MAG5BC,oBAAqB,CACnBC,MAAO,IACPC,OAAQX,EAAMI,QAAQ,IAVU,IA0FpC,WAAeQ,EAAAA,EAAAA,WA5Ef,YAUI,IATFC,EASC,EATDA,QACAC,EAQC,EARDA,YACAC,EAOC,EAPDA,aACAC,EAMC,EANDA,gBAOQC,EAAYnB,IAAZmB,QACAC,EAAqDL,EAArDK,YAAR,EAA6DL,EAAxCM,oBAAqBC,OAA1C,MAAsD,GAAtD,EACMC,EAA8BH,EAAYI,QAAO,SAAAC,GACrD,IAAMC,GAAsBC,EAAAA,EAAAA,gBAAeF,EAAG,iBAC9C,OAAmC,IAA/BC,EAAoBE,QAGjBF,EAAoBG,SAASZ,EACrC,IAED,OACE,UAAC,IAAD,CAAQa,MAAI,EAACC,QAASf,EAAagB,SAAS,KAA5C,WACE,UAAC,IAAD,sCAEE,SAAC,IAAD,CACEC,UAAWd,EAAQhB,YACnB+B,QAAS,kBAAMlB,GAAN,EAFX,UAIE,SAAC,IAAD,UAGJ,UAAC,IAAD,YACE,SAAC,IAAD,2DACA,iBAAKiB,UAAWd,EAAQR,oBAAxB,UACGY,EAA4BY,KAAI,SAAAC,GAC/B,IAAMC,GAAOV,EAAAA,EAAAA,gBAAeS,EAAM,QAC5BE,EAAQhB,EAAUiB,MAAK,SAAAC,GAAI,OAAIH,IAASG,EAAKH,IAAlB,IACjC,OACE,SAAC,IAAD,CAEEI,SACE,SAAC,IAAD,CACEC,UAAWJ,EACXK,SAAU,WAGA,IAAD,EAFHL,EACFpB,EAAgBkB,GAEhB,UAAArB,EAAQ6B,sBAAR,cAAA7B,EAAyBqB,EAE5B,EACD5B,MAAM,YAGVqC,MAAOR,GAdFD,EAAKU,aAiBf,IACCvB,EAA4BK,OAE1B,MADF,UAAC,IAAD,uCAAsCX,YAI5C,SAAC,IAAD,WACE,SAAC,IAAD,CACEiB,QAAS,kBAAMlB,GAAN,EACT+B,QAAQ,YACRvC,MAAM,UAHR,uBAUP,G","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/ToggleConnectionsDialog.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControlLabel,\n  IconButton,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { observer } from 'mobx-react'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { AbstractSessionModel } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n\n  connectionContainer: {\n    width: 500,\n    margin: theme.spacing(4),\n  },\n}))\n\nfunction ToggleConnectionDialog({\n  session,\n  handleClose,\n  assemblyName,\n  breakConnection,\n}: {\n  handleClose: () => void\n  session: AbstractSessionModel\n  assemblyName: string\n  breakConnection: (arg: AnyConfigurationModel) => void\n}) {\n  const { classes } = useStyles()\n  const { connections, connectionInstances: instances = [] } = session\n  const assemblySpecificConnections = connections.filter(c => {\n    const configAssemblyNames = readConfObject(c, 'assemblyNames')\n    if (configAssemblyNames.length === 0) {\n      return true\n    }\n    return configAssemblyNames.includes(assemblyName)\n  })\n\n  return (\n    <Dialog open onClose={handleClose} maxWidth=\"lg\">\n      <DialogTitle>\n        Turn on/off connections\n        <IconButton\n          className={classes.closeButton}\n          onClick={() => handleClose()}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent>\n        <Typography>Use the checkbox to turn on/off connections</Typography>\n        <div className={classes.connectionContainer}>\n          {assemblySpecificConnections.map(conf => {\n            const name = readConfObject(conf, 'name')\n            const found = instances.find(conn => name === conn.name)\n            return (\n              <FormControlLabel\n                key={conf.connectionId}\n                control={\n                  <Checkbox\n                    checked={!!found}\n                    onChange={() => {\n                      if (found) {\n                        breakConnection(conf)\n                      } else {\n                        session.makeConnection?.(conf)\n                      }\n                    }}\n                    color=\"primary\"\n                  />\n                }\n                label={name}\n              />\n            )\n          })}\n          {!assemblySpecificConnections.length ? (\n            <Typography>No connections found for {assemblyName}</Typography>\n          ) : null}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => handleClose()}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default observer(ToggleConnectionDialog)\n"],"names":["useStyles","makeStyles","theme","closeButton","position","right","spacing","top","color","palette","grey","connectionContainer","width","margin","observer","session","handleClose","assemblyName","breakConnection","classes","connections","connectionInstances","instances","assemblySpecificConnections","filter","c","configAssemblyNames","readConfObject","length","includes","open","onClose","maxWidth","className","onClick","map","conf","name","found","find","conn","control","checked","onChange","makeConnection","label","connectionId","variant"],"sourceRoot":""}