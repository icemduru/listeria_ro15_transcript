{"version":3,"file":"static/js/7040.28883378.chunk.js","mappings":"6ZAQYA,O,oCAAAA,YAAAA,EAAAA,CAAAA,CAyCqC,OAzCrCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,WAAAA,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAEV,oGACQC,EAAKC,KAAKC,cACVC,GAAOC,EAAAA,EAAAA,cAAaH,KAAKI,QAAQ,sBAAuBL,GAFhE,SAGqBG,EAAKG,SAAS,QAHnC,cAGQC,EAHR,yBAISC,OAAOC,YACZF,EACGG,MAAM,MACNC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,MAAN,IACLC,QAAO,SAAAF,GAAC,QAAMA,CAAN,IACRD,KAAI,SAACI,GACJ,MAAuBA,EAAKL,MAAM,MAAlC,eACA,MAAO,CADP,WAED,MAZP,kGAFUX,IAEV,4DAgBA,qGACOE,KAAKF,SACRE,KAAKF,OAASE,KAAKe,WAAWC,OAAM,SAAAC,GAElC,MADA,EAAKnB,YAASoB,EACRD,CACP,KALL,kBAOSjB,KAAKF,QAPd,kGAhBA,IAgBA,iEAUA,yGACwBE,KAAKmB,QAD7B,cACQC,EADR,yBAESb,OAAOc,KAAKD,GAASV,KAAI,SAAAY,GAAO,MAAK,CAC1CA,QAAAA,EACAC,MAAO,EACPC,IAAKJ,EAAQE,GAHwB,KAFzC,kGAVA,IAUA,uBASA,WACE,MAAO,CAAC,CACT,8BAED,WAA+C,O,CA3CpBG,EAAAA,Y","sources":["../../../plugins/sequence/src/ChromSizesAdapter/ChromSizesAdapter.ts"],"sourcesContent":["import {\n  RegionsAdapter,\n  BaseAdapter,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { openLocation } from '@jbrowse/core/util/io'\n\nexport default class extends BaseAdapter implements RegionsAdapter {\n  // the map of refSeq to length\n  protected setupP?: Promise<{ [key: string]: number }>\n\n  async setupPre() {\n    const pm = this.pluginManager\n    const file = openLocation(this.getConf('chromSizesLocation'), pm)\n    const data = await file.readFile('utf8')\n    return Object.fromEntries(\n      data\n        .split('\\n')\n        .map(f => f.trim())\n        .filter(f => !!f)\n        .map((line: string) => {\n          const [name, length] = line.split('\\t')\n          return [name, +length]\n        }),\n    )\n  }\n\n  async setup() {\n    if (!this.setupP) {\n      this.setupP = this.setupPre().catch(e => {\n        this.setupP = undefined\n        throw e\n      })\n    }\n    return this.setupP\n  }\n\n  public async getRegions() {\n    const refSeqs = await this.setup()\n    return Object.keys(refSeqs).map(refName => ({\n      refName,\n      start: 0,\n      end: refSeqs[refName],\n    }))\n  }\n\n  public getHeader() {\n    return {}\n  }\n\n  public freeResources(/* { region } */): void {}\n}\n"],"names":["setupP","pm","this","pluginManager","file","openLocation","getConf","readFile","data","Object","fromEntries","split","map","f","trim","filter","line","setupPre","catch","e","undefined","setup","refSeqs","keys","refName","start","end","BaseAdapter"],"sourceRoot":""}