{"version":3,"file":"static/js/7502.3a6b0bea.chunk.js","mappings":"sPAiEA,UAlDsB,SAAC,GAMhB,IALLA,EAKI,EALJA,OACAC,EAII,EAJJA,QAKA,GAAsBC,EAAAA,EAAAA,UAAS,eAAiBC,KAAKC,OAArD,eAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAWP,EAAOQ,OAAM,SAAAC,GAAC,MAAe,sBAAXA,EAAEC,IAAN,IAC/B,OACE,UAAC,IAAD,CAAQC,MAAI,EAACV,QAAS,kBAAMA,GAAQ,EAAd,EAAtB,WACE,SAAC,IAAD,iDACA,UAAC,IAAD,YACE,UAAC,IAAD,WACIM,EAEE,KADA,+GAFN,eAMA,wBACGP,EAAOY,KAAI,SAAAC,GAAK,OACf,2BACGC,EAAAA,EAAAA,gBAAeD,EAAO,QADzB,MACqCA,EAAMH,OADlCG,EAAME,QADA,OAMnB,SAAC,IAAD,CACEC,MAAOX,EACPY,SAAU,SAAAC,GAAK,OAAIZ,EAAOY,EAAMC,OAAOH,MAAxB,EACfI,WAAW,gBAEb,SAAC,IAAD,6CAEF,UAAC,IAAD,YACE,SAAC,IAAD,CAAQC,QAAS,kBAAMpB,GAAQ,EAAd,EAAsBqB,MAAM,UAA7C,qBAGA,SAAC,IAAD,CACED,QAAS,kBAAMpB,GAAQ,EAAM,CAAEsB,KAAMlB,GAA5B,EACTiB,MAAM,UACNE,QAAQ,YACRC,WAAS,EAJX,yBAWP,C","sources":["../../../plugins/wiggle/src/CreateMultiWiggleExtension/ConfirmDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\nconst ConfirmDialog = ({\n  tracks,\n  onClose,\n}: {\n  tracks: AnyConfigurationModel[]\n  onClose: (arg: boolean, arg1?: { name: string }) => void\n}) => {\n  const [val, setVal] = useState('MultiWiggle ' + Date.now())\n  const allQuant = tracks.every(t => t.type === 'QuantitativeTrack')\n  return (\n    <Dialog open onClose={() => onClose(false)}>\n      <DialogTitle>Confirm multi-wiggle track create</DialogTitle>\n      <DialogContent>\n        <Typography>\n          {!allQuant\n            ? 'Not every track looks like a QuantitativeTrack. This could have unexpected behavior, confirm if it looks ok.'\n            : null}\n          Listing:\n        </Typography>\n        <ul>\n          {tracks.map(track => (\n            <li key={track.trackId}>\n              {readConfObject(track, 'name')} - {track.type}\n            </li>\n          ))}\n        </ul>\n        <TextField\n          value={val}\n          onChange={event => setVal(event.target.value)}\n          helperText=\"Track name\"\n        />\n        <Typography>Confirm creation of track?</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => onClose(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => onClose(true, { name: val })}\n          color=\"primary\"\n          variant=\"contained\"\n          autoFocus\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default ConfirmDialog\n"],"names":["tracks","onClose","useState","Date","now","val","setVal","allQuant","every","t","type","open","map","track","readConfObject","trackId","value","onChange","event","target","helperText","onClick","color","name","variant","autoFocus"],"sourceRoot":""}